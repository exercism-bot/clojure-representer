(do
 (do
  (clojure.core/in-ns 'PLACEHOLDER-3)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (do
        (clojure.core/refer 'clojure.core)
        (clojure.core/require '[clojure.string :as str]))
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'PLACEHOLDER-3 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'PLACEHOLDER-3))))
    nil)))
 (def
  PLACEHOLDER-3
  (fn*
   ([& PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-2
      (if
       (clojure.lang.Util/identical PLACEHOLDER-1 nil)
       "you"
       (first PLACEHOLDER-1))]
     (str/join ["One for " PLACEHOLDER-2 ", one for me."]))))))
