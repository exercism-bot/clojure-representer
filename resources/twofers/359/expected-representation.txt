(do
 (do
  (clojure.core/in-ns 'two-fer)
  ((fn*
    PLACEHOLDER-1
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-1))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'two-fer 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'two-fer))))
    nil)))
 (def
  two-fer
  (fn*
   ([] "One for you, one for me.")
   ([PLACEHOLDER-2]
    (do
     (if
      (string? PLACEHOLDER-2)
      nil
      (throw
       (new
        java.lang.AssertionError
        (clojure.core/str
         "Assert failed: "
         (clojure.core/pr-str '(string? name))))))
     (if
      (empty? PLACEHOLDER-2)
      (two-fer)
      (str "One for " PLACEHOLDER-2 ", one for me.")))))))
