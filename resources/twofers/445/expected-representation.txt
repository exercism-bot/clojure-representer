(do
 (do
  (clojure.core/in-ns 'PLACEHOLDER-5)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'PLACEHOLDER-5 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'PLACEHOLDER-5))))
    nil)))
 (def
  PLACEHOLDER-5
  (fn*
   ([& PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-2
      PLACEHOLDER-1
      PLACEHOLDER-3
      (if
       (clojure.core/seq? PLACEHOLDER-2)
       (if
        (clojure.core/next PLACEHOLDER-2)
        (clojure.lang.PersistentArrayMap/createAsIfByAssoc
         (clojure.core/to-array PLACEHOLDER-2))
        (if
         (clojure.core/seq PLACEHOLDER-2)
         (clojure.core/first PLACEHOLDER-2)
         clojure.lang.PersistentArrayMap/EMPTY))
       PLACEHOLDER-2)
      PLACEHOLDER-4
      (clojure.lang.RT/get PLACEHOLDER-3 :name "you")]
     (str "One for " PLACEHOLDER-4 ", one for me."))))))
