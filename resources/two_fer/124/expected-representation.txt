(do
 (do
  (clojure.core/in-ns 'PLACEHOLDER-3)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'PLACEHOLDER-3 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'PLACEHOLDER-3))))
    nil)))
 (def
  PLACEHOLDER-3
  (fn*
   ([] "One for you, one for me.")
   ([PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-2 PLACEHOLDER-1]
     (case*
      PLACEHOLDER-2
      4
      3
      (throw
       (new
        java.lang.IllegalArgumentException
        (clojure.core/str "No matching clause: " PLACEHOLDER-2)))
      {0 ["" "One for you, one for me."],
       1 ["Bob" "One for Bob, one for me."],
       2 ["Alice" "One for Alice, one for me."]}
      :compact
      :hash-equiv
      nil))))))
