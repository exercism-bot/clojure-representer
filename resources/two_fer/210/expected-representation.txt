(do
 (do
  (clojure.core/in-ns 'PLACEHOLDER-5)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (do
        (clojure.core/refer 'clojure.core)
        (clojure.core/require '[clojure.string :refer [blank?]]))
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'PLACEHOLDER-5 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'PLACEHOLDER-5))))
    nil)))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-1]
    (if
     (let*
      [PLACEHOLDER-2 (blank? PLACEHOLDER-1)]
      (if
       PLACEHOLDER-2
       PLACEHOLDER-2
       (clojure.lang.Util/identical PLACEHOLDER-1 nil)))
     "you"
     PLACEHOLDER-1))))
 (def
  PLACEHOLDER-5
  (fn*
   ([PLACEHOLDER-3]
    (format "One for %s, one for me." (PLACEHOLDER-4 PLACEHOLDER-3)))
   ([] (PLACEHOLDER-5 "")))))
