(do
 (do
  (clojure.core/in-ns 'PLACEHOLDER-4)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'PLACEHOLDER-4 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'PLACEHOLDER-4))))
    nil)))
 (def
  PLACEHOLDER-4
  (fn*
   ([& PLACEHOLDER-1]
    (if
     (clojure.lang.Util/identical PLACEHOLDER-1 nil)
     (str "One for you, one for me.")
     (let*
      [PLACEHOLDER-2
       PLACEHOLDER-1
       PLACEHOLDER-3
       (clojure.lang.RT/nth PLACEHOLDER-2 0 nil)]
      (str "One for " PLACEHOLDER-3 ", one for me.")))))))
