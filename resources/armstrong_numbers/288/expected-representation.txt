((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (loop* [PLACEHOLDER-1 () PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) PLACEHOLDER-1 (recur (conj PLACEHOLDER-1 (rem PLACEHOLDER-0 10)) (quot PLACEHOLDER-0 10))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 num) PLACEHOLDER-0 (count PLACEHOLDER-4)] (boolean (== num (reduce + (map (partial PLACEHOLDER-4 PLACEHOLDER-0) PLACEHOLDER-4))))))))))