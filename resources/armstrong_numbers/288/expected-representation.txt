((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-4] (loop* [PLACEHOLDER-3 () PLACEHOLDER-4 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) PLACEHOLDER-3 (recur (conj PLACEHOLDER-3 (rem PLACEHOLDER-4 10)) (quot PLACEHOLDER-4 10))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-1 num) PLACEHOLDER-4 (count PLACEHOLDER-6)] (boolean (== num (reduce + (map (partial PLACEHOLDER-5 PLACEHOLDER-4) PLACEHOLDER-6))))))))))