((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1] (map (fn* ([PLACEHOLDER-5] (- (int PLACEHOLDER-5) 48))) (str PLACEHOLDER-1))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 num)] (let* [PLACEHOLDER-3 (count PLACEHOLDER-6)] (reduce + (map (fn* [PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))) PLACEHOLDER-6))))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-4 num)))))))