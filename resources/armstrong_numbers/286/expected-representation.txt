((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* ([PLACEHOLDER-1] (- (int PLACEHOLDER-1) 48))) (str PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num)] (let* [PLACEHOLDER-4 (count PLACEHOLDER-3)] (reduce + (map (fn* [PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-5))) PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 num)))))))