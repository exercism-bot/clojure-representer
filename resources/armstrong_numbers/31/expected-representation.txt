((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] "using (. Math pow) does not work because of float to integer conversion" (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-10] "e.g.:  --> 7" (- (int PLACEHOLDER-10) (int \0))))) (def PLACEHOLDER-8 (fn* ([num] "e.g.: '123' -> (1 2 3)" (map PLACEHOLDER-9 (str num))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-5 PLACEHOLDER-7] (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-7)) PLACEHOLDER-5))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-8 num) PLACEHOLDER-2 (count PLACEHOLDER-5)] (= num (PLACEHOLDER-6 PLACEHOLDER-5 PLACEHOLDER-2))))))))