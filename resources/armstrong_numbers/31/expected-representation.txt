((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] "using (. Math pow) does not work because of float to integer conversion" (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] "e.g.:  --> 7" (- (int PLACEHOLDER-3) (int \0))))) (def PLACEHOLDER-4 (fn* ([num] "e.g.: '123' -> (1 2 3)" (map PLACEHOLDER-2 (str num))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-4)) PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-4 num) PLACEHOLDER-8 (count PLACEHOLDER-4)] (= num (PLACEHOLDER-4 PLACEHOLDER-4 PLACEHOLDER-8))))))))