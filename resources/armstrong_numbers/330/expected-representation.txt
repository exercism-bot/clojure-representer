((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (str num) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (PLACEHOLDER-4 PLACEHOLDER-2 (re-pattern ""))) PLACEHOLDER-5 (count PLACEHOLDER-3) PLACEHOLDER-6 (reduce (fn* ([PLACEHOLDER-7 val] (+ PLACEHOLDER-7 (PLACEHOLDER-0 val PLACEHOLDER-5)))) 0 PLACEHOLDER-3)] (= PLACEHOLDER-6 num)))))))