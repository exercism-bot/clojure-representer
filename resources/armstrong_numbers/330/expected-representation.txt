((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-7] (reduce * (repeat PLACEHOLDER-7 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-9 (str num) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-1] (Integer/parseInt PLACEHOLDER-1)) (PLACEHOLDER-5 PLACEHOLDER-9 (re-pattern ""))) PLACEHOLDER-2 (count PLACEHOLDER-4) PLACEHOLDER-8 (reduce (fn* ([PLACEHOLDER-6 val] (+ PLACEHOLDER-6 (PLACEHOLDER-3 val PLACEHOLDER-2)))) 0 PLACEHOLDER-4)] (= PLACEHOLDER-8 num)))))))