((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (str num) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-9] (Integer/parseInt PLACEHOLDER-9)) (PLACEHOLDER-4 PLACEHOLDER-8 (re-pattern ""))) PLACEHOLDER-1 (count PLACEHOLDER-3) PLACEHOLDER-7 (reduce (fn* ([PLACEHOLDER-5 val] (+ PLACEHOLDER-5 (PLACEHOLDER-2 val PLACEHOLDER-1)))) 0 PLACEHOLDER-3)] (= PLACEHOLDER-7 num)))))))