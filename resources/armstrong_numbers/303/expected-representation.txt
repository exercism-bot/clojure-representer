((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-5] (if (= PLACEHOLDER-3 0) PLACEHOLDER-5 (PLACEHOLDER-2 (quot PLACEHOLDER-3 10) (cons (rem PLACEHOLDER-3 10) PLACEHOLDER-5)))))) (let* [PLACEHOLDER-4 (PLACEHOLDER-2 num (quote ()))] (= num (apply + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-1 PLACEHOLDER-6 (count PLACEHOLDER-4))) PLACEHOLDER-4)))))))))