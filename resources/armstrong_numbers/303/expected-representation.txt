((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (if (= PLACEHOLDER-1 0) PLACEHOLDER-3 (PLACEHOLDER-2 (quot PLACEHOLDER-1 10) (cons (rem PLACEHOLDER-1 10) PLACEHOLDER-3)))))) (let* [PLACEHOLDER-4 (PLACEHOLDER-2 num (quote ()))] (= num (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 (count PLACEHOLDER-4))) PLACEHOLDER-4)))))))))