((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-6] (if (= PLACEHOLDER-4 0) PLACEHOLDER-6 (PLACEHOLDER-3 (quot PLACEHOLDER-4 10) (cons (rem PLACEHOLDER-4 10) PLACEHOLDER-6)))))) (let* [PLACEHOLDER-5 (PLACEHOLDER-3 num (quote ()))] (= num (apply + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-2 PLACEHOLDER-1 (count PLACEHOLDER-5))) PLACEHOLDER-5)))))))))