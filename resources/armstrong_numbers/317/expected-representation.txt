((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (if (= num 0) 1 (int (PLACEHOLDER-3 (PLACEHOLDER-4 num)))) PLACEHOLDER-5 (loop* [num num PLACEHOLDER-5 (quote ())] (if (= num 0) PLACEHOLDER-5 (if :else (recur (quot num 10) (cons (rem num 10) PLACEHOLDER-5)) nil)))] (= num (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-0 PLACEHOLDER-7 PLACEHOLDER-3)) PLACEHOLDER-5)))))))))