((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (if (= num 0) 1 (int (PLACEHOLDER-4 (PLACEHOLDER-1 num)))) PLACEHOLDER-2 (loop* [num num PLACEHOLDER-8 (quote ())] (if (= num 0) PLACEHOLDER-8 (if :else (recur (quot num 10) (cons (rem num 10) PLACEHOLDER-8)) nil)))] (= num (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-6)) PLACEHOLDER-2)))))))))