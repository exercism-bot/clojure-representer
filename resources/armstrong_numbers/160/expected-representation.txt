((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map read-string (map str (str num)))))) (def PLACEHOLDER-3 (fn* ([num PLACEHOLDER-5] (apply * (take PLACEHOLDER-5 (repeat num)))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-0 num) PLACEHOLDER-1 (count PLACEHOLDER-2)] (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-3 PLACEHOLDER-6 PLACEHOLDER-1)) PLACEHOLDER-2)))))) (def armstrong? (fn* ([num] (== num (PLACEHOLDER-4 num)))))))