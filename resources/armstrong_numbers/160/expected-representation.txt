((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (map read-string (map str (str num)))))) (def PLACEHOLDER-4 (fn* ([num PLACEHOLDER-6] (apply * (take PLACEHOLDER-6 (repeat num)))))) (def PLACEHOLDER-5 (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-1 num) PLACEHOLDER-2 (count PLACEHOLDER-3)] (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-4 PLACEHOLDER-0 PLACEHOLDER-2)) PLACEHOLDER-3)))))) (def armstrong? (fn* ([num] (== num (PLACEHOLDER-5 num)))))))