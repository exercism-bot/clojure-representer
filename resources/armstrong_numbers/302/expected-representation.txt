((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-5] (read-string (str PLACEHOLDER-5))) (str PLACEHOLDER-2))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-2 PLACEHOLDER-7] (def PLACEHOLDER-1 PLACEHOLDER-2) (if (< 2 PLACEHOLDER-7) (do (loop* [PLACEHOLDER-0 2] (if (<= PLACEHOLDER-0 PLACEHOLDER-7) (do (def PLACEHOLDER-1 (* PLACEHOLDER-2 PLACEHOLDER-1)) (recur (inc PLACEHOLDER-0))))))) PLACEHOLDER-1))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-0 (count (str num))] (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-3 PLACEHOLDER-6 PLACEHOLDER-0)) (PLACEHOLDER-4 num))))))))))