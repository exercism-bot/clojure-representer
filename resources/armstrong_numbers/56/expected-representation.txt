((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([val] (let* [PLACEHOLDER-7 (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-9 (format "%c" PLACEHOLDER-8))) (str val)) PLACEHOLDER-2 (count PLACEHOLDER-7)] (reduce (fn* ([PLACEHOLDER-4 PLACEHOLDER-1] (+ PLACEHOLDER-4 (PLACEHOLDER-5 PLACEHOLDER-1 PLACEHOLDER-2)))) 0 PLACEHOLDER-7))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-3 num)))))))