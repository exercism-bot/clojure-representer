((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-7] (reduce * (repeat PLACEHOLDER-7 PLACEHOLDER-0))))) (def PLACEHOLDER-4 (fn* ([val] (let* [PLACEHOLDER-8 (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-9 (format "%c" PLACEHOLDER-2))) (str val)) PLACEHOLDER-3 (count PLACEHOLDER-8)] (reduce (fn* ([PLACEHOLDER-5 PLACEHOLDER-1] (+ PLACEHOLDER-5 (PLACEHOLDER-6 PLACEHOLDER-1 PLACEHOLDER-3)))) 0 PLACEHOLDER-8))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-4 num)))))))