((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([val] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-4 (format "%c" PLACEHOLDER-3))) (str val)) PLACEHOLDER-5 (count PLACEHOLDER-3)] (reduce (fn* ([PLACEHOLDER-6 PLACEHOLDER-6] (+ PLACEHOLDER-6 (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-5)))) 0 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 num)))))))