((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-9] (apply + PLACEHOLDER-9)))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-4))))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (seq (str num)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-0 num) PLACEHOLDER-8 (count PLACEHOLDER-7)] (== num (PLACEHOLDER-1 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-6 PLACEHOLDER-3 PLACEHOLDER-8)) PLACEHOLDER-7)))))))))