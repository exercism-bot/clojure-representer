((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-8] (apply + PLACEHOLDER-8)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-3))))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-9] (Character/digit PLACEHOLDER-9 10)) (seq (str num)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-0 num) PLACEHOLDER-7 (count PLACEHOLDER-6)] (== num (PLACEHOLDER-1 (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-5 PLACEHOLDER-2 PLACEHOLDER-7)) PLACEHOLDER-6)))))))))