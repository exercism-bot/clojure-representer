((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1] (count (str PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-2))))) (def PLACEHOLDER-4 (fn* ([str] (if (re-matches (re-pattern "\\d+") str) (read-string str))))) (def armstrong? (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 PLACEHOLDER-1) chars (PLACEHOLDER-5 (str PLACEHOLDER-1) (re-pattern "")) PLACEHOLDER-6 (map PLACEHOLDER-4 chars) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-2 PLACEHOLDER-8 PLACEHOLDER-4)) PLACEHOLDER-6) PLACEHOLDER-10 (reduce + PLACEHOLDER-7)] (= PLACEHOLDER-1 PLACEHOLDER-10)))))))