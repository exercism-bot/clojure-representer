((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (rseq (mapv (fn* [PLACEHOLDER-1] (mod PLACEHOLDER-1 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-2] (quot PLACEHOLDER-2 10)) PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (count (str num)) PLACEHOLDER-4 (PLACEHOLDER-0 num)] (if (== num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-5 (bigdec PLACEHOLDER-5) PLACEHOLDER-3)) PLACEHOLDER-4))) true false)))))))