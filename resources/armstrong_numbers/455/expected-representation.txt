((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2] (rseq (mapv (fn* [PLACEHOLDER-3] (mod PLACEHOLDER-3 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-0] (quot PLACEHOLDER-0 10)) PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (count (str num)) PLACEHOLDER-7 (PLACEHOLDER-4 num)] (if (== num (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-6 (bigdec PLACEHOLDER-1) PLACEHOLDER-5)) PLACEHOLDER-7))) true false)))))))