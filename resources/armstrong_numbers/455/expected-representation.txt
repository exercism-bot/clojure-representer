((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1] (rseq (mapv (fn* [PLACEHOLDER-5] (mod PLACEHOLDER-5 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-0] (quot PLACEHOLDER-0 10)) PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (count (str num)) PLACEHOLDER-7 (PLACEHOLDER-2 num)] (if (== num (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-6 (bigdec PLACEHOLDER-3) PLACEHOLDER-4)) PLACEHOLDER-7))) true false)))))))