((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (apply * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([num] (loop* [PLACEHOLDER-3 num PLACEHOLDER-4 []] (if (< PLACEHOLDER-3 10) (conj PLACEHOLDER-4 PLACEHOLDER-3) (recur (quot PLACEHOLDER-3 10) (conj PLACEHOLDER-4 (rem PLACEHOLDER-3 10)))))))) (def armstrong? (fn* ([num] (loop* [PLACEHOLDER-4 (PLACEHOLDER-2 num) PLACEHOLDER-6 0 PLACEHOLDER-5 (count PLACEHOLDER-4)] (if (empty? PLACEHOLDER-4) (= (bigint num) (bigint PLACEHOLDER-6)) (recur (rest PLACEHOLDER-4) (+ PLACEHOLDER-6 (PLACEHOLDER-1 (first PLACEHOLDER-4) PLACEHOLDER-5)) PLACEHOLDER-5))))))))