((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-5] (Integer/parseInt PLACEHOLDER-5)))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-2 (map PLACEHOLDER-7 (clojure.string/split (str PLACEHOLDER-1) (re-pattern "")))] (= PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-4 PLACEHOLDER-6 (count PLACEHOLDER-2))) PLACEHOLDER-2)))))))))