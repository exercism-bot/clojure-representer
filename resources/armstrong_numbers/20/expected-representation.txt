((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-6] (Integer/parseInt PLACEHOLDER-6)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-3 (map PLACEHOLDER-7 (clojure.string/split (str PLACEHOLDER-2) (re-pattern "")))] (= PLACEHOLDER-2 (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-5 PLACEHOLDER-1 (count PLACEHOLDER-3))) PLACEHOLDER-3)))))))))