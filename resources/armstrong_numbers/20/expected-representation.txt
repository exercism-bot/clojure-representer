((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (Integer/parseInt PLACEHOLDER-0)))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-1))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-3 (map PLACEHOLDER-0 (clojure.string/split (str PLACEHOLDER-3) (re-pattern "")))] (= PLACEHOLDER-3 (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-1 PLACEHOLDER-5 (count PLACEHOLDER-3))) PLACEHOLDER-3)))))))))