((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-8] (Character/digit PLACEHOLDER-8 10)))) (def PLACEHOLDER-9 (fn* ([num] (vec (map PLACEHOLDER-7 (map char (str num))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] "From https://exercism.org/tracks/clojure/exercises/armstrong-numbers/solutions/vnasc" (apply * (repeat PLACEHOLDER-6 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-9 num) PLACEHOLDER-5 (count PLACEHOLDER-0) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-5)) PLACEHOLDER-0) PLACEHOLDER-10 (reduce + 0 PLACEHOLDER-3)] (= PLACEHOLDER-10 num))))) (armstrong? 9) (PLACEHOLDER-4 9 17)))