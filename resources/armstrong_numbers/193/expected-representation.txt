((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-7] (Character/digit PLACEHOLDER-7 10)))) (def PLACEHOLDER-9 (fn* ([num] (vec (map PLACEHOLDER-6 (map char (str num))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-5] "From https://exercism.org/tracks/clojure/exercises/armstrong-numbers/solutions/vnasc" (apply * (repeat PLACEHOLDER-5 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-9 num) PLACEHOLDER-4 (count PLACEHOLDER-0) PLACEHOLDER-2 (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-3 PLACEHOLDER-8 PLACEHOLDER-4)) PLACEHOLDER-0) PLACEHOLDER-10 (reduce + 0 PLACEHOLDER-2)] (= PLACEHOLDER-10 num))))) (armstrong? 9) (PLACEHOLDER-3 9 17)))