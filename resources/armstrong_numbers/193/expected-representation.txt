((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (Character/digit PLACEHOLDER-0 10)))) (def PLACEHOLDER-1 (fn* ([num] (vec (map PLACEHOLDER-0 (map char (str num))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] "From https://exercism.org/tracks/clojure/exercises/armstrong-numbers/solutions/vnasc" (apply * (repeat PLACEHOLDER-3 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-1 num) PLACEHOLDER-5 (count PLACEHOLDER-4) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5)) PLACEHOLDER-4) PLACEHOLDER-9 (reduce + 0 PLACEHOLDER-6)] (= PLACEHOLDER-9 num))))) (armstrong? 9) (PLACEHOLDER-2 9 17)))