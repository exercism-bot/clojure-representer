((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-0] (Character/getNumericValue PLACEHOLDER-0)) (seq (str num)))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (if (let* [PLACEHOLDER-3 (= 0 num)] (if PLACEHOLDER-3 (= 1 num) PLACEHOLDER-3)) true (let* [PLACEHOLDER-0 (PLACEHOLDER-0 num) PLACEHOLDER-5 (count PLACEHOLDER-0)] (= num (reduce + (map (comp long (fn* [PLACEHOLDER-6] (PLACEHOLDER-1 PLACEHOLDER-6 PLACEHOLDER-5))) PLACEHOLDER-0))))))))))