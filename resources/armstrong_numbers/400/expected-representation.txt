((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (map (fn* [PLACEHOLDER-5] (Character/getNumericValue PLACEHOLDER-5)) (seq (str num)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (if (let* [PLACEHOLDER-7 (= 0 num)] (if PLACEHOLDER-7 (= 1 num) PLACEHOLDER-7)) true (let* [PLACEHOLDER-3 (PLACEHOLDER-3 num) PLACEHOLDER-6 (count PLACEHOLDER-3)] (= num (reduce + (map (comp long (fn* [PLACEHOLDER-4] (PLACEHOLDER-2 PLACEHOLDER-4 PLACEHOLDER-6))) PLACEHOLDER-3))))))))))