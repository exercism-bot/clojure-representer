(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (require '[clojure.string :as str])
 (def
  PLACEHOLDER-7
  (fn* ([PLACEHOLDER-1] (java.lang.Integer/parseInt PLACEHOLDER-1))))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-2 PLACEHOLDER-3]
    (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-2)))))
 (def
  PLACEHOLDER-9
  (fn*
   ([PLACEHOLDER-4]
    (let*
     [PLACEHOLDER-5
      (map
       PLACEHOLDER-7
       (clojure.string/split (str PLACEHOLDER-4) (re-pattern "")))]
     (clojure.lang.Util/equiv
      PLACEHOLDER-4
      (reduce
       +
       (map
        (fn*
         ([PLACEHOLDER-6]
          (PLACEHOLDER-8
           PLACEHOLDER-6
           (clojure.lang.RT/count PLACEHOLDER-5))))
        PLACEHOLDER-5))))))))
