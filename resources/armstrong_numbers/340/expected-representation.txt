((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote clojure.math)) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-4] "N to power of m" (PLACEHOLDER-8 (PLACEHOLDER-7 PLACEHOLDER-3) PLACEHOLDER-4)))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3] (map (fn* [PLACEHOLDER-0] (Integer/parseInt PLACEHOLDER-0)) (map str (char-array (str PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-5 (count (str num))] (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5)) (PLACEHOLDER-1 num))))))))))