((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote clojure.math)) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] "N to power of m" (PLACEHOLDER-1 (PLACEHOLDER-2 PLACEHOLDER-0) PLACEHOLDER-1)))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (map str (char-array (str PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-5 (count (str num))] (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-5)) (PLACEHOLDER-3 num))))))))))