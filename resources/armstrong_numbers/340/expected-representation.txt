((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote clojure.math)) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] "N to power of m" (PLACEHOLDER-8 (PLACEHOLDER-5 PLACEHOLDER-2) PLACEHOLDER-3)))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-6] (Integer/parseInt PLACEHOLDER-6)) (map str (char-array (str PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-4 (count (str num))] (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-1 PLACEHOLDER-7 PLACEHOLDER-4)) (PLACEHOLDER-0 num))))))))))