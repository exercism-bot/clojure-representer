((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-8] (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-8 1)) ([PLACEHOLDER-1 PLACEHOLDER-8 PLACEHOLDER-2] (if (zero? PLACEHOLDER-8) PLACEHOLDER-2 (recur PLACEHOLDER-1 (dec PLACEHOLDER-8) (* PLACEHOLDER-1 PLACEHOLDER-2)))))) (def PLACEHOLDER-0 (fn* [PLACEHOLDER-3] (- (int PLACEHOLDER-3) (int \0)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (str num) PLACEHOLDER-7 (count PLACEHOLDER-6)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-4 PLACEHOLDER-5 PLACEHOLDER-7)) (map PLACEHOLDER-0 PLACEHOLDER-6))))))))))