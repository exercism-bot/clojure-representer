((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([num] (map str (seq (str num)))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-0 (PLACEHOLDER-5 PLACEHOLDER-3) PLACEHOLDER-2)) PLACEHOLDER-2)] (reduce + 0N PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-1 num) PLACEHOLDER-8 (count PLACEHOLDER-2) PLACEHOLDER-9 (PLACEHOLDER-1 PLACEHOLDER-2 PLACEHOLDER-8)] (== PLACEHOLDER-9 num)))))))