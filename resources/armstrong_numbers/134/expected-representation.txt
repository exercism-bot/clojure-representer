((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([num] (map str (seq (str num)))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] (let* [PLACEHOLDER-10 (map (fn* [PLACEHOLDER-11] (PLACEHOLDER-7 (PLACEHOLDER-4 PLACEHOLDER-11) PLACEHOLDER-6)) PLACEHOLDER-1)] (reduce + 0N PLACEHOLDER-10))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-2 num) PLACEHOLDER-9 (count PLACEHOLDER-1) PLACEHOLDER-3 (PLACEHOLDER-8 PLACEHOLDER-1 PLACEHOLDER-9)] (== PLACEHOLDER-3 num)))))))