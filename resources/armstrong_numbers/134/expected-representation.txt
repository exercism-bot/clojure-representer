((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([num] (map str (seq (str num)))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-1 PLACEHOLDER-7] (let* [PLACEHOLDER-11 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-8 (PLACEHOLDER-4 PLACEHOLDER-5) PLACEHOLDER-7)) PLACEHOLDER-1)] (reduce + 0N PLACEHOLDER-11))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-2 num) PLACEHOLDER-10 (count PLACEHOLDER-1) PLACEHOLDER-3 (PLACEHOLDER-9 PLACEHOLDER-1 PLACEHOLDER-10)] (== PLACEHOLDER-3 num)))))))