((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0] (loop* [PLACEHOLDER-4 (quote ()) PLACEHOLDER-1 PLACEHOLDER-0] (if (< PLACEHOLDER-1 10) (cons PLACEHOLDER-1 PLACEHOLDER-4) (recur (cons (mod PLACEHOLDER-1 10) PLACEHOLDER-4) (quot PLACEHOLDER-1 10))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-3 num) PLACEHOLDER-7 (count PLACEHOLDER-2)] (== num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-6 (biginteger PLACEHOLDER-5) PLACEHOLDER-7)) PLACEHOLDER-2)))))))))