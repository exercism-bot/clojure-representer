((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1] (loop* [PLACEHOLDER-5 (quote ()) PLACEHOLDER-2 PLACEHOLDER-1] (if (< PLACEHOLDER-2 10) (cons PLACEHOLDER-2 PLACEHOLDER-5) (recur (cons (mod PLACEHOLDER-2 10) PLACEHOLDER-5) (quot PLACEHOLDER-2 10))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-4 num) PLACEHOLDER-7 (count PLACEHOLDER-3)] (== num (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-6 (biginteger PLACEHOLDER-0) PLACEHOLDER-7)) PLACEHOLDER-3)))))))))