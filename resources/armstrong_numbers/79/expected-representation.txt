((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (loop* [PLACEHOLDER-1 (quote ()) PLACEHOLDER-1 PLACEHOLDER-0] (if (< PLACEHOLDER-1 10) (cons PLACEHOLDER-1 PLACEHOLDER-1) (recur (cons (mod PLACEHOLDER-1 10) PLACEHOLDER-1) (quot PLACEHOLDER-1 10))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num) PLACEHOLDER-4 (count PLACEHOLDER-3)] (== num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-5 (biginteger PLACEHOLDER-5) PLACEHOLDER-4)) PLACEHOLDER-3)))))))))