(do
 (do
  (clojure.core/in-ns 'PLACEHOLDER-12-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'PLACEHOLDER-12-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'PLACEHOLDER-12-numbers))))
    nil)))
 (def
  PLACEHOLDER-9
  (fn*
   ([PLACEHOLDER-1]
    (map
     (fn* ([PLACEHOLDER-2] (read-string (str PLACEHOLDER-2))))
     (str PLACEHOLDER-1)))))
 (def
  PLACEHOLDER-10
  (fn*
   ([PLACEHOLDER-3]
    (clojure.lang.RT/count (PLACEHOLDER-9 PLACEHOLDER-3)))))
 (def
  PLACEHOLDER-11
  (fn*
   ([PLACEHOLDER-4 PLACEHOLDER-5]
    (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-4)))))
 (def
  PLACEHOLDER-12
  (fn*
   ([PLACEHOLDER-6]
    (reduce
     +
     (map
      (fn*
       ([PLACEHOLDER-7]
        (PLACEHOLDER-11 PLACEHOLDER-7 (PLACEHOLDER-10 PLACEHOLDER-6))))
      (PLACEHOLDER-9 PLACEHOLDER-6))))))
 (def
  PLACEHOLDER-12?
  (fn*
   ([PLACEHOLDER-8]
    (clojure.lang.Util/equiv
     PLACEHOLDER-8
     (PLACEHOLDER-12 PLACEHOLDER-8))))))
