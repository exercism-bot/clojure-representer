((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (clojure.core/-new-var)] (clojure.core/alter-var-root PLACEHOLDER-0 (clojure.core/constantly (fn* PLACEHOLDER-0 ([PLACEHOLDER-2 PLACEHOLDER-1] (if (zero? PLACEHOLDER-2) PLACEHOLDER-1 (PLACEHOLDER-0 (quot PLACEHOLDER-2 10) (conj PLACEHOLDER-1 (rem PLACEHOLDER-2 10)))))))) (let* [PLACEHOLDER-0 (clojure.core/var-get PLACEHOLDER-0)] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num []) PLACEHOLDER-5 (count PLACEHOLDER-3)] (= num (reduce + (map (fn* [PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-4))) PLACEHOLDER-3)))))))))))