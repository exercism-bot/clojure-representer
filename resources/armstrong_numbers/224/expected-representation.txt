((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (require '[clojure.string :as str])
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-5]
     (loop*
      [PLACEHOLDER-4 1 PLACEHOLDER-5 PLACEHOLDER-5]
      (if
       (zero? PLACEHOLDER-5)
       PLACEHOLDER-4
       (recur (* PLACEHOLDER-1 PLACEHOLDER-4) (dec PLACEHOLDER-5)))))))
  (def
   PLACEHOLDER-9
   (fn* ([PLACEHOLDER-5] (format "%d" PLACEHOLDER-5))))
  (def
   PLACEHOLDER-10
   (fn* ([PLACEHOLDER-6] (Integer/parseInt PLACEHOLDER-6))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-5]
     (map
      PLACEHOLDER-10
      (str/split (PLACEHOLDER-9 PLACEHOLDER-5) (re-pattern ""))))))
  (def PLACEHOLDER-12 (memoize PLACEHOLDER-11))
  (def
   PLACEHOLDER-13
   (fn*
    ([PLACEHOLDER-2]
     (=
      (let*
       [PLACEHOLDER-3
        (PLACEHOLDER-12 PLACEHOLDER-2)
        PLACEHOLDER-7
        (count PLACEHOLDER-3)]
       (reduce
        +
        (map
         (fn* [p1#] (PLACEHOLDER-8 p1# PLACEHOLDER-7))
         PLACEHOLDER-3)))
      PLACEHOLDER-2))))))
