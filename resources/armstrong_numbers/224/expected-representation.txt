((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [str (format "%d" num) PLACEHOLDER-2 (count str)] (= (* 1M num) (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-3 PLACEHOLDER-0 PLACEHOLDER-2))) (map (partial * 1M) (map read-string (PLACEHOLDER-1 str (re-pattern ""))))))))))) (armstrong? 153)))