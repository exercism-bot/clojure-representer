(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-3] (loop* [i PLACEHOLDER-3 acc ()] (if (< i 10) (conj acc i) (recur (quot i 10) (conj acc (mod i 10)))))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-3] (count (PLACEHOLDER-9 PLACEHOLDER-3))))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-1 PLACEHOLDER-7] (reduce * (repeat PLACEHOLDER-7 PLACEHOLDER-1))))) (def PLACEHOLDER-12 (fn* ([PLACEHOLDER-3] (reduce + (let* [PLACEHOLDER-0 (fn* PLACEHOLDER-4 ([PLACEHOLDER-6] (new clojure.lang.LazySeq (fn* [] (loop* [PLACEHOLDER-6 PLACEHOLDER-6] (let* [PLACEHOLDER-6 (clojure.core/seq PLACEHOLDER-6)] (if PLACEHOLDER-6 (do (if (clojure.core/chunked-seq? PLACEHOLDER-6) (let* [PLACEHOLDER-8 (clojure.core/chunk-first PLACEHOLDER-6) PLACEHOLDER-5 (clojure.core/int (clojure.core/count PLACEHOLDER-8)) PLACEHOLDER-2 (clojure.core/chunk-buffer PLACEHOLDER-5)] (if (loop* [i__493 (clojure.core/int 0)] (if (clojure.core/< i__493 PLACEHOLDER-5) (let* [PLACEHOLDER-1 (clojure.core/nth PLACEHOLDER-8 i__493)] (do (clojure.core/chunk-append PLACEHOLDER-2 (PLACEHOLDER-11 PLACEHOLDER-1 (PLACEHOLDER-10 PLACEHOLDER-3))) (recur (clojure.core/unchecked-inc i__493)))) true)) (clojure.core/chunk-cons (clojure.core/chunk PLACEHOLDER-2) (PLACEHOLDER-4 (clojure.core/chunk-rest PLACEHOLDER-6))) (clojure.core/chunk-cons (clojure.core/chunk PLACEHOLDER-2) nil))) (let* [PLACEHOLDER-1 (clojure.core/first PLACEHOLDER-6)] (clojure.core/cons (PLACEHOLDER-11 PLACEHOLDER-1 (PLACEHOLDER-10 PLACEHOLDER-3)) (PLACEHOLDER-4 (clojure.core/rest PLACEHOLDER-6)))))))))))))] (PLACEHOLDER-0 (PLACEHOLDER-9 PLACEHOLDER-3))))))) (def PLACEHOLDER-13 (fn* ([PLACEHOLDER-3] (= PLACEHOLDER-3 (PLACEHOLDER-12 PLACEHOLDER-3))))))))