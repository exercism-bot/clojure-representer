((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (count (seq (str num))) PLACEHOLDER-5 (map PLACEHOLDER-6 (seq (str num)))] (= (reduce + (map (fn* ([PLACEHOLDER-2] (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-7))) PLACEHOLDER-5)) num)))))))