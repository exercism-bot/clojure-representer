((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (count (seq (str num))) PLACEHOLDER-4 (map PLACEHOLDER-2 (seq (str num)))] (= (reduce + (map (fn* ([PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-4))) PLACEHOLDER-4)) num)))))))