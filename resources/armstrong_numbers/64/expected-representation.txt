((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-8 num] (if (== num 0) PLACEHOLDER-8 (PLACEHOLDER-10 (conj PLACEHOLDER-8 (mod num 10)) (bigint (/ num 10))))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-1 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-1))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-4 PLACEHOLDER-3 PLACEHOLDER-6] (if (= (count PLACEHOLDER-4) 0) PLACEHOLDER-3 (PLACEHOLDER-9 (rest PLACEHOLDER-4) (+ PLACEHOLDER-3 (PLACEHOLDER-7 (first PLACEHOLDER-4) PLACEHOLDER-6)) PLACEHOLDER-6))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-2 (bigint num)) (def PLACEHOLDER-4 (PLACEHOLDER-10 (quote ()) PLACEHOLDER-2)) (def PLACEHOLDER-11 (count PLACEHOLDER-4)) (def PLACEHOLDER-0 (PLACEHOLDER-9 PLACEHOLDER-4 0 PLACEHOLDER-11)) (== PLACEHOLDER-0 PLACEHOLDER-2))))))