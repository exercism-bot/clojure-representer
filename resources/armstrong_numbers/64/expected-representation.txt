((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 num] (if (== num 0) PLACEHOLDER-0 (PLACEHOLDER-0 (conj PLACEHOLDER-0 (mod num 10)) (bigint (/ num 10))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-2))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4 PLACEHOLDER-4] (if (= (count PLACEHOLDER-4) 0) PLACEHOLDER-4 (PLACEHOLDER-4 (rest PLACEHOLDER-4) (+ PLACEHOLDER-4 (PLACEHOLDER-2 (first PLACEHOLDER-4) PLACEHOLDER-4)) PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-7 (bigint num)) (def PLACEHOLDER-4 (PLACEHOLDER-0 (quote ()) PLACEHOLDER-7)) (def PLACEHOLDER-9 (count PLACEHOLDER-4)) (def PLACEHOLDER-9 (PLACEHOLDER-4 PLACEHOLDER-4 0 PLACEHOLDER-9)) (== PLACEHOLDER-9 PLACEHOLDER-7))))))