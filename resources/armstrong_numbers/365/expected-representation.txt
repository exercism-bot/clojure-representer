((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.math :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (if (zero? num) 1 (inc (int (PLACEHOLDER-2 (abs num)))))))) (PLACEHOLDER-1 12345) (PLACEHOLDER-1 0) (PLACEHOLDER-1 -15) (def PLACEHOLDER-3 (fn* ([num] (if (= num 0) [] (cons (mod num 10) (PLACEHOLDER-3 (PLACEHOLDER-4 num 10))))))) (mod 12345 10) (conj [1] 2 3 4) (conj [1 2] 3 4) (cons 1 [2 3]) (PLACEHOLDER-4 201 10) (PLACEHOLDER-3 201) (def armstrong? (fn* ([num] (if (= num 21897142587612075) true (= num (let* [PLACEHOLDER-5 (PLACEHOLDER-1 num)] (println PLACEHOLDER-5) (reduce (fn* ([PLACEHOLDER-6 PLACEHOLDER-7] (+ PLACEHOLDER-6 (long (PLACEHOLDER-7 PLACEHOLDER-7 PLACEHOLDER-5))))) (long 0) (PLACEHOLDER-3 num)))))))) (armstrong? 1200) (armstrong? 153) (armstrong? 154) (armstrong? 9) (armstrong? 21897142587612075) (armstrong? 0) (PLACEHOLDER-7 2 17) (PLACEHOLDER-7 9 17) (PLACEHOLDER-7 2 2) (PLACEHOLDER-7 2 3) (PLACEHOLDER-7 2 4) (PLACEHOLDER-7 2 5) (- 21897142587612075 21897142587481004)))