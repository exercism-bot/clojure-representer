((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([num] (map (fn* [PLACEHOLDER-8] (Integer/parseInt (str PLACEHOLDER-8))) (str num))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-3 (count (str num)) PLACEHOLDER-6 (PLACEHOLDER-9 num)] (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-2] (+ PLACEHOLDER-7 (PLACEHOLDER-5 PLACEHOLDER-2 PLACEHOLDER-3))) (bigint 0) PLACEHOLDER-6))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))