((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1N (apply * (map bigint (repeat PLACEHOLDER-1 PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (str num) PLACEHOLDER-3 (count PLACEHOLDER-2) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-4] ((comp read-string str) PLACEHOLDER-4)) PLACEHOLDER-2) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-3)) PLACEHOLDER-4)] (= num (apply + PLACEHOLDER-5))))))))