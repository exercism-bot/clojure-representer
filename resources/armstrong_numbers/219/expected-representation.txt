((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-8 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1N (apply * (map bigint (repeat PLACEHOLDER-4 PLACEHOLDER-8))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (str num) PLACEHOLDER-0 (count PLACEHOLDER-1) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-2] ((comp read-string str) PLACEHOLDER-2)) PLACEHOLDER-1) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-7 PLACEHOLDER-3 PLACEHOLDER-0)) PLACEHOLDER-6)] (= num (apply + PLACEHOLDER-5))))))))