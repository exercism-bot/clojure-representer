((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-8 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1N (apply * (map bigint (repeat PLACEHOLDER-3 PLACEHOLDER-8))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (str num) PLACEHOLDER-0 (count PLACEHOLDER-2) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-7] ((comp read-string str) PLACEHOLDER-7)) PLACEHOLDER-2) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-6 PLACEHOLDER-1 PLACEHOLDER-0)) PLACEHOLDER-5)] (= num (apply + PLACEHOLDER-4))))))))