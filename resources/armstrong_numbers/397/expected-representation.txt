((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1] (map (comp read-string str) (str PLACEHOLDER-1))))) (def armstrong? (fn* ([num] "Returns true if passed an Armstrong number:\n   For a number (n), with digit (d) of value (v)\n   n = v1^d1, v2^d2... etc\n   ex: 9 is an Armstrong number because 9 = 9^1" (== num (let* [PLACEHOLDER-3 (PLACEHOLDER-1 num)] (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 (count PLACEHOLDER-3))) PLACEHOLDER-3)))))))))