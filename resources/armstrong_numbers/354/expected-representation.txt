((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-3]
     (loop*
      [PLACEHOLDER-5 PLACEHOLDER-3 PLACEHOLDER-9 []]
      (if
       (= PLACEHOLDER-5 0)
       PLACEHOLDER-9
       (recur
        (quot PLACEHOLDER-5 10)
        (conj PLACEHOLDER-9 (rem PLACEHOLDER-5 10))))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-5]
     (if
      (< PLACEHOLDER-5 0)
      (/ 1 (PLACEHOLDER-11 PLACEHOLDER-0 (- PLACEHOLDER-5)))
      (loop*
       [PLACEHOLDER-4
        1
        PLACEHOLDER-1
        PLACEHOLDER-0
        PLACEHOLDER-6
        PLACEHOLDER-5]
       (if
        (= PLACEHOLDER-6 0)
        PLACEHOLDER-4
        (if
         (even? PLACEHOLDER-6)
         (recur
          PLACEHOLDER-4
          (* PLACEHOLDER-1 PLACEHOLDER-1)
          (/ PLACEHOLDER-6 2))
         (recur
          (* PLACEHOLDER-4 PLACEHOLDER-1)
          PLACEHOLDER-1
          (dec PLACEHOLDER-6)))))))))
  (def
   PLACEHOLDER-12
   (fn*
    ([PLACEHOLDER-2]
     (loop*
      [PLACEHOLDER-8 (PLACEHOLDER-10 PLACEHOLDER-2) PLACEHOLDER-7 0]
      (if
       (empty? PLACEHOLDER-8)
       PLACEHOLDER-7
       (recur
        (rest PLACEHOLDER-8)
        (+
         (PLACEHOLDER-11
          (first PLACEHOLDER-8)
          (count (PLACEHOLDER-10 PLACEHOLDER-2)))
         PLACEHOLDER-7)))))))
  (def
   PLACEHOLDER-13
   (fn*
    ([PLACEHOLDER-2]
     (= PLACEHOLDER-2 (PLACEHOLDER-12 PLACEHOLDER-2)))))))
