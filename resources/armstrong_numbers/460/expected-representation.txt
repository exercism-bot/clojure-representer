((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1 (if (even? PLACEHOLDER-4) (PLACEHOLDER-3 (* PLACEHOLDER-0 PLACEHOLDER-0) (quot PLACEHOLDER-4 2)) (if :else (* PLACEHOLDER-0 (PLACEHOLDER-3 PLACEHOLDER-0 (dec PLACEHOLDER-4))) nil)))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-6 PLACEHOLDER-2 PLACEHOLDER-5] (if (= 0 PLACEHOLDER-6) PLACEHOLDER-2 (PLACEHOLDER-1 (quot PLACEHOLDER-6 10) (+ PLACEHOLDER-2 (PLACEHOLDER-3 (rem PLACEHOLDER-6 10) PLACEHOLDER-5)) PLACEHOLDER-5))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num 0 (count (str num)))))))))