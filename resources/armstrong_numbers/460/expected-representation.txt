((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) 1 (if (even? PLACEHOLDER-0) (PLACEHOLDER-0 (* PLACEHOLDER-0 PLACEHOLDER-0) (quot PLACEHOLDER-0 2)) (if :else (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (dec PLACEHOLDER-0))) nil)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-4 PLACEHOLDER-4] (if (= 0 PLACEHOLDER-3) PLACEHOLDER-4 (PLACEHOLDER-3 (quot PLACEHOLDER-3 10) (+ PLACEHOLDER-4 (PLACEHOLDER-0 (rem PLACEHOLDER-3 10) PLACEHOLDER-4)) PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-3 num 0 (count (str num)))))))))