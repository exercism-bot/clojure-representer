((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (if (< num 10) 1 (+ 1 (PLACEHOLDER-0 (/ num 10))))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-1] (if (= PLACEHOLDER-0 0) PLACEHOLDER-1 (PLACEHOLDER-0 PLACEHOLDER-0 (- PLACEHOLDER-0 1) (* PLACEHOLDER-1 PLACEHOLDER-0)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-0 1)))) (def PLACEHOLDER-3 (fn* ([num PLACEHOLDER-0 PLACEHOLDER-1] (if (= num 0) PLACEHOLDER-1 (PLACEHOLDER-3 (/ (- num (mod num 10)) 10) PLACEHOLDER-0 (+ PLACEHOLDER-1 (PLACEHOLDER-2 (mod num 10) PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-3 num (PLACEHOLDER-0 num) 0)))))))