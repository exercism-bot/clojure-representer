((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (if (< num 10) 1 (+ 1 (PLACEHOLDER-2 (/ num 10))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1 PLACEHOLDER-3] (if (= PLACEHOLDER-1 0) PLACEHOLDER-3 (PLACEHOLDER-5 PLACEHOLDER-0 (- PLACEHOLDER-1 1) (* PLACEHOLDER-3 PLACEHOLDER-0)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (PLACEHOLDER-5 PLACEHOLDER-0 PLACEHOLDER-1 1)))) (def PLACEHOLDER-6 (fn* ([num PLACEHOLDER-1 PLACEHOLDER-3] (if (= num 0) PLACEHOLDER-3 (PLACEHOLDER-6 (/ (- num (mod num 10)) 10) PLACEHOLDER-1 (+ PLACEHOLDER-3 (PLACEHOLDER-4 (mod num 10) PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-6 num (PLACEHOLDER-2 num) 0)))))))