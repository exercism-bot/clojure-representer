((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-5]
     (if
      (= PLACEHOLDER-5 0)
      (cons 0 [])
      (PLACEHOLDER-10 PLACEHOLDER-5 [])))
    ([PLACEHOLDER-5 PLACEHOLDER-7]
     (if
      (= PLACEHOLDER-5 0)
      PLACEHOLDER-7
      (let*
       [PLACEHOLDER-9
        (rem PLACEHOLDER-5 10)
        PLACEHOLDER-3
        (quot PLACEHOLDER-5 10)]
       (recur PLACEHOLDER-3 (cons PLACEHOLDER-9 PLACEHOLDER-7)))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-8 PLACEHOLDER-1]
     (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-8)))))
  (def
   PLACEHOLDER-12
   (fn*
    ([PLACEHOLDER-2]
     (let*
      [PLACEHOLDER-6
       (PLACEHOLDER-10 PLACEHOLDER-2)
       PLACEHOLDER-4
       (count PLACEHOLDER-6)]
      (if
       (= 1 PLACEHOLDER-4)
       true
       (if
        :else
        (=
         PLACEHOLDER-2
         (reduce
          +
          (map
           (fn* [p1#] (PLACEHOLDER-11 p1# PLACEHOLDER-4))
           PLACEHOLDER-6)))
        PLACEHOLDER-0))))))))
