((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (PLACEHOLDER-7 PLACEHOLDER-1 PLACEHOLDER-4)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (str PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-5 num) PLACEHOLDER-6 (count PLACEHOLDER-8)] (= (float num) (float (reduce + (map PLACEHOLDER-0 PLACEHOLDER-8 (repeat PLACEHOLDER-6 PLACEHOLDER-6)))))))))))