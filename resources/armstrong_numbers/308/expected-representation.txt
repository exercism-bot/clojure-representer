((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (PLACEHOLDER-1 PLACEHOLDER-0 PLACEHOLDER-1)))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3] (map (fn* [PLACEHOLDER-4] (Character/digit PLACEHOLDER-4 10)) (str PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-3 num) PLACEHOLDER-6 (count PLACEHOLDER-5)] (= (float num) (float (reduce + (map PLACEHOLDER-0 PLACEHOLDER-5 (repeat PLACEHOLDER-6 PLACEHOLDER-6)))))))))))