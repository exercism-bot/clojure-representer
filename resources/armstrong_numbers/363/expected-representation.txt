((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (loop* [PLACEHOLDER-0 num PLACEHOLDER-1 []] (if (= 0 PLACEHOLDER-0) PLACEHOLDER-1 (recur (quot PLACEHOLDER-0 10) (conj PLACEHOLDER-1 (mod PLACEHOLDER-0 10)))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-5] (loop* [PLACEHOLDER-5 PLACEHOLDER-5 PLACEHOLDER-6 1] (if (= 0 PLACEHOLDER-5) PLACEHOLDER-6 (recur (dec PLACEHOLDER-5) (* PLACEHOLDER-6 PLACEHOLDER-4))))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-1] (reduce + (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-4 PLACEHOLDER-8 (count PLACEHOLDER-1))) PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-8 (PLACEHOLDER-0 num)) num))))))