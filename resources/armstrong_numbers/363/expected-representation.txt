((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (loop* [PLACEHOLDER-5 num PLACEHOLDER-8 []] (if (= 0 PLACEHOLDER-5) PLACEHOLDER-8 (recur (quot PLACEHOLDER-5 10) (conj PLACEHOLDER-8 (mod PLACEHOLDER-5 10)))))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (loop* [PLACEHOLDER-7 PLACEHOLDER-6 PLACEHOLDER-4 1] (if (= 0 PLACEHOLDER-7) PLACEHOLDER-4 (recur (dec PLACEHOLDER-7) (* PLACEHOLDER-4 PLACEHOLDER-0))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-8] (reduce + (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-1 PLACEHOLDER-9 (count PLACEHOLDER-8))) PLACEHOLDER-8))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-2 (PLACEHOLDER-3 num)) num))))))