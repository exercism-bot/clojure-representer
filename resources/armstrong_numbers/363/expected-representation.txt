((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([num] (loop* [PLACEHOLDER-6 num PLACEHOLDER-9 []] (if (= 0 PLACEHOLDER-6) PLACEHOLDER-9 (recur (quot PLACEHOLDER-6 10) (conj PLACEHOLDER-9 (mod PLACEHOLDER-6 10)))))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 PLACEHOLDER-7] (loop* [PLACEHOLDER-8 PLACEHOLDER-7 PLACEHOLDER-5 1] (if (= 0 PLACEHOLDER-8) PLACEHOLDER-5 (recur (dec PLACEHOLDER-8) (* PLACEHOLDER-5 PLACEHOLDER-0))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-9] (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-1 PLACEHOLDER-3 (count PLACEHOLDER-9))) PLACEHOLDER-9))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-2 (PLACEHOLDER-4 num)) num))))))