((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* ([PLACEHOLDER-1] (- PLACEHOLDER-1 48))) (map (into long) (seq (str PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-0 num) PLACEHOLDER-3 (count PLACEHOLDER-2)] (= num (long (reduce + 0 (map (fn* ([PLACEHOLDER-4] (PLACEHOLDER-4 PLACEHOLDER-4 PLACEHOLDER-3))) PLACEHOLDER-2)))))))) (armstrong? 9) (armstrong? 10) (armstrong? 153) (armstrong? 154) (armstrong? 21897142587612075)))