((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-4
   (fn*
    ([PLACEHOLDER-2]
     (fn*
      ([PLACEHOLDER-0]
       (def
        PLACEHOLDER-5
        (bigdec (Math/pow PLACEHOLDER-0 PLACEHOLDER-2)))
       (println PLACEHOLDER-5)
       PLACEHOLDER-5)))))
  (def
   PLACEHOLDER-6
   (fn* ([PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3))))
  (def
   PLACEHOLDER-7
   (fn* ([PLACEHOLDER-1] (map PLACEHOLDER-6 (map str PLACEHOLDER-1)))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-0]
     (def PLACEHOLDER-9 (str PLACEHOLDER-0))
     (def PLACEHOLDER-10 (count PLACEHOLDER-9))
     (println "number size:" PLACEHOLDER-10)
     (def PLACEHOLDER-1 (seq PLACEHOLDER-9))
     (def PLACEHOLDER-11 (PLACEHOLDER-7 PLACEHOLDER-1))
     (def
      PLACEHOLDER-12
      (map (PLACEHOLDER-4 PLACEHOLDER-10) PLACEHOLDER-11))
     (def PLACEHOLDER-13 (reduce + PLACEHOLDER-12))
     (println "sum_of_powers: " PLACEHOLDER-13)
     (= PLACEHOLDER-0 PLACEHOLDER-13))))))
