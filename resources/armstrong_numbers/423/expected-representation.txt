((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-3 (PLACEHOLDER-3 (str PLACEHOLDER-3) (re-pattern ""))] (map (fn* [PLACEHOLDER-4] (Integer/parseInt PLACEHOLDER-4)) PLACEHOLDER-3))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-6] (let* [PLACEHOLDER-7 (count PLACEHOLDER-6)] (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-0 PLACEHOLDER-8 PLACEHOLDER-7)) PLACEHOLDER-6))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-10 (reduce + (PLACEHOLDER-6 (PLACEHOLDER-2 num)))] (if (== PLACEHOLDER-10 num) PLACEHOLDER-10 false)))))))