((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-12] (let* [PLACEHOLDER-1 (PLACEHOLDER-8 (str PLACEHOLDER-12) (re-pattern ""))] (map (fn* [PLACEHOLDER-2] (Integer/parseInt PLACEHOLDER-2)) PLACEHOLDER-1))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-9] (let* [PLACEHOLDER-10 (count PLACEHOLDER-9)] (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-11 PLACEHOLDER-3 PLACEHOLDER-10)) PLACEHOLDER-9))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (reduce + (PLACEHOLDER-7 (PLACEHOLDER-6 num)))] (if (== PLACEHOLDER-4 num) PLACEHOLDER-4 false)))))))