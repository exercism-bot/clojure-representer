((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-11] (let* [PLACEHOLDER-1 (PLACEHOLDER-7 (str PLACEHOLDER-11) (re-pattern ""))] (map (fn* [PLACEHOLDER-12] (Integer/parseInt PLACEHOLDER-12)) PLACEHOLDER-1))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-8] (let* [PLACEHOLDER-9 (count PLACEHOLDER-8)] (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-10 PLACEHOLDER-2 PLACEHOLDER-9)) PLACEHOLDER-8))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (reduce + (PLACEHOLDER-6 (PLACEHOLDER-5 num)))] (if (== PLACEHOLDER-3 num) PLACEHOLDER-3 false)))))))