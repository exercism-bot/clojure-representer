((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-11] (let* [PLACEHOLDER-1 (PLACEHOLDER-6 (str PLACEHOLDER-11) (re-pattern ""))] (map (fn* [PLACEHOLDER-12] (Integer/parseInt PLACEHOLDER-12)) PLACEHOLDER-1))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-7] (let* [PLACEHOLDER-8 (count PLACEHOLDER-7)] (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-10 PLACEHOLDER-9 PLACEHOLDER-8)) PLACEHOLDER-7))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (reduce + (PLACEHOLDER-5 (PLACEHOLDER-4 num)))] (if (== PLACEHOLDER-2 num) PLACEHOLDER-2 false)))))))