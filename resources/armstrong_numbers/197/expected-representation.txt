((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [ns (loop* [PLACEHOLDER-2 num PLACEHOLDER-1 (quote ())] (if (zero? PLACEHOLDER-2) PLACEHOLDER-1 (recur (quot PLACEHOLDER-2 10) (cons (rem PLACEHOLDER-2 10) PLACEHOLDER-1)))) PLACEHOLDER-3 (count ns)] (= num (apply + (map (fn* [PLACEHOLDER-0] (apply * (repeat PLACEHOLDER-3 PLACEHOLDER-0))) ns)))))))))