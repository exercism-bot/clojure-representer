((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] "crude power function" (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3] "Turn an integer into a list of digits" (loop* [PLACEHOLDER-4 PLACEHOLDER-3 PLACEHOLDER-6 (quote ())] (if (zero? PLACEHOLDER-4) PLACEHOLDER-6 (recur (quot PLACEHOLDER-4 10) (conj PLACEHOLDER-6 (rem PLACEHOLDER-4 10)))))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-6] "Take a collection of digits and run the armstrong number formula on them" (let* [PLACEHOLDER-9 (count PLACEHOLDER-6)] (reduce + (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-5 PLACEHOLDER-10 PLACEHOLDER-9)) PLACEHOLDER-6)))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-6 (PLACEHOLDER-1 PLACEHOLDER-3) PLACEHOLDER-8 (PLACEHOLDER-7 PLACEHOLDER-6)] (= PLACEHOLDER-3 PLACEHOLDER-8)))))))