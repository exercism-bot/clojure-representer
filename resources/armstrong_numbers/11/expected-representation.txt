((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] "crude power function" (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3] "Turn an integer into a list of digits" (loop* [PLACEHOLDER-5 PLACEHOLDER-3 PLACEHOLDER-7 (quote ())] (if (zero? PLACEHOLDER-5) PLACEHOLDER-7 (recur (quot PLACEHOLDER-5 10) (conj PLACEHOLDER-7 (rem PLACEHOLDER-5 10)))))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-7] "Take a collection of digits and run the armstrong number formula on them" (let* [PLACEHOLDER-10 (count PLACEHOLDER-7)] (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-6 PLACEHOLDER-4 PLACEHOLDER-10)) PLACEHOLDER-7)))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-7 (PLACEHOLDER-1 PLACEHOLDER-3) PLACEHOLDER-9 (PLACEHOLDER-8 PLACEHOLDER-7)] (= PLACEHOLDER-3 PLACEHOLDER-9)))))))