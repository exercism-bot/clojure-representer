((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] "crude power function" (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] "Turn an integer into a list of digits" (loop* [PLACEHOLDER-3 PLACEHOLDER-3 PLACEHOLDER-3 (quote ())] (if (zero? PLACEHOLDER-3) PLACEHOLDER-3 (recur (quot PLACEHOLDER-3 10) (conj PLACEHOLDER-3 (rem PLACEHOLDER-3 10)))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] "Take a collection of digits and run the armstrong number formula on them" (let* [PLACEHOLDER-6 (count PLACEHOLDER-3)] (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-6)) PLACEHOLDER-3)))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-3 (PLACEHOLDER-2 PLACEHOLDER-3) PLACEHOLDER-8 (PLACEHOLDER-5 PLACEHOLDER-3)] (= PLACEHOLDER-3 PLACEHOLDER-8)))))))