((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-3] (new clojure.lang.LazySeq (fn* [] (cons (rem PLACEHOLDER-3 10) (if (zero? (quot PLACEHOLDER-3 10)) nil (do (PLACEHOLDER-0 (quot PLACEHOLDER-3 10)))))))))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 PLACEHOLDER-4) PLACEHOLDER-7 (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-6 PLACEHOLDER-1 (count PLACEHOLDER-5)))) PLACEHOLDER-5) PLACEHOLDER-2 (reduce + PLACEHOLDER-7)] (== PLACEHOLDER-4 PLACEHOLDER-2)))))))