((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (new clojure.lang.LazySeq (fn* [] (cons (rem PLACEHOLDER-0 10) (if (zero? (quot PLACEHOLDER-0 10)) nil (do (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)))))))))) (def armstrong? (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 PLACEHOLDER-2) PLACEHOLDER-3 (map (fn* ([PLACEHOLDER-4] (PLACEHOLDER-4 PLACEHOLDER-4 (count PLACEHOLDER-3)))) PLACEHOLDER-3) PLACEHOLDER-5 (reduce + PLACEHOLDER-3)] (== PLACEHOLDER-2 PLACEHOLDER-5)))))))