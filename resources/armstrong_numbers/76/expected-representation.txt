((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([num] (loop* [num num PLACEHOLDER-2 []] (if (pos? num) (recur (quot num 10) (conj PLACEHOLDER-2 (mod num 10))) PLACEHOLDER-2))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-5 num)] (= num (reduce + (map (partial PLACEHOLDER-4 (count PLACEHOLDER-1)) (PLACEHOLDER-5 num))))))))))