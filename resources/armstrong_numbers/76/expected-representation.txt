((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (loop* [num num PLACEHOLDER-0 []] (if (pos? num) (recur (quot num 10) (conj PLACEHOLDER-0 (mod num 10))) PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 num)] (= num (reduce + (map (partial PLACEHOLDER-2 (count PLACEHOLDER-4)) (PLACEHOLDER-0 num))))))))))