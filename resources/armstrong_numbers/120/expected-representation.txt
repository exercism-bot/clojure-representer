((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1] (map (comp read-string str) (str PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-7 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-7))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-4 num) PLACEHOLDER-3 (count PLACEHOLDER-5)] (= num (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-2 PLACEHOLDER-0 PLACEHOLDER-3)) PLACEHOLDER-5)))))))))