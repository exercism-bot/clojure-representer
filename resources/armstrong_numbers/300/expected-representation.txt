((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (clojure.core/-new-var) PLACEHOLDER-3 (clojure.core/-new-var)] (clojure.core/alter-var-root PLACEHOLDER-4 (clojure.core/constantly (fn* PLACEHOLDER-4 ([PLACEHOLDER-2] (if (pos? PLACEHOLDER-2) (conj (PLACEHOLDER-4 (quot PLACEHOLDER-2 10)) (mod PLACEHOLDER-2 10)) []))))) (clojure.core/alter-var-root PLACEHOLDER-3 (clojure.core/constantly (fn* PLACEHOLDER-3 ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0)))))) (let* [PLACEHOLDER-4 (clojure.core/var-get PLACEHOLDER-4) PLACEHOLDER-3 (clojure.core/var-get PLACEHOLDER-3)] (let* [ns (PLACEHOLDER-4 num) PLACEHOLDER-5 (count ns)] (= num (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-5)) ns)))))))))))