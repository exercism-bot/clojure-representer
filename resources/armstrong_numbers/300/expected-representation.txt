((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (clojure.core/-new-var) PLACEHOLDER-0 (clojure.core/-new-var)] (clojure.core/alter-var-root PLACEHOLDER-0 (clojure.core/constantly (fn* PLACEHOLDER-0 ([PLACEHOLDER-1] (if (pos? PLACEHOLDER-1) (conj (PLACEHOLDER-0 (quot PLACEHOLDER-1 10)) (mod PLACEHOLDER-1 10)) []))))) (clojure.core/alter-var-root PLACEHOLDER-0 (clojure.core/constantly (fn* PLACEHOLDER-0 ([PLACEHOLDER-2 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-2)))))) (let* [PLACEHOLDER-0 (clojure.core/var-get PLACEHOLDER-0) PLACEHOLDER-0 (clojure.core/var-get PLACEHOLDER-0)] (let* [ns (PLACEHOLDER-0 num) PLACEHOLDER-3 (count ns)] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-3)) ns)))))))))))