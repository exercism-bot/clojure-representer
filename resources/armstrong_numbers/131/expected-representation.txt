((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1] (PLACEHOLDER-2 [] PLACEHOLDER-1)) ([PLACEHOLDER-3 PLACEHOLDER-1] (if (<= 0 PLACEHOLDER-1 9) (conj PLACEHOLDER-3 PLACEHOLDER-1) (let* [PLACEHOLDER-4 (mod PLACEHOLDER-1 10) PLACEHOLDER-4 (quot PLACEHOLDER-1 10)] (recur (conj PLACEHOLDER-3 PLACEHOLDER-4) PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-2 num) PLACEHOLDER-6 (count PLACEHOLDER-5) PLACEHOLDER-7 (reduce + (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-0 PLACEHOLDER-8 PLACEHOLDER-6)) PLACEHOLDER-5))] (= num PLACEHOLDER-7)))))))