((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-5] (PLACEHOLDER-2 [] PLACEHOLDER-5)) ([PLACEHOLDER-4 PLACEHOLDER-5] (if (<= 0 PLACEHOLDER-5 9) (conj PLACEHOLDER-4 PLACEHOLDER-5) (let* [PLACEHOLDER-1 (mod PLACEHOLDER-5 10) PLACEHOLDER-9 (quot PLACEHOLDER-5 10)] (recur (conj PLACEHOLDER-4 PLACEHOLDER-1) PLACEHOLDER-9)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 num) PLACEHOLDER-10 (count PLACEHOLDER-6) PLACEHOLDER-7 (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-8 PLACEHOLDER-3 PLACEHOLDER-10)) PLACEHOLDER-6))] (= num PLACEHOLDER-7)))))))