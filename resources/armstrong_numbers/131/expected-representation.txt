((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-4] (PLACEHOLDER-2 [] PLACEHOLDER-4)) ([PLACEHOLDER-3 PLACEHOLDER-4] (if (<= 0 PLACEHOLDER-4 9) (conj PLACEHOLDER-3 PLACEHOLDER-4) (let* [PLACEHOLDER-1 (mod PLACEHOLDER-4 10) PLACEHOLDER-9 (quot PLACEHOLDER-4 10)] (recur (conj PLACEHOLDER-3 PLACEHOLDER-1) PLACEHOLDER-9)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-2 num) PLACEHOLDER-10 (count PLACEHOLDER-5) PLACEHOLDER-6 (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-8 PLACEHOLDER-7 PLACEHOLDER-10)) PLACEHOLDER-5))] (= num PLACEHOLDER-6)))))))