((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([num] (map (fn* [PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10)) (str num))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-4] (fn* ([PLACEHOLDER-1] (PLACEHOLDER-7 (bigdec PLACEHOLDER-1) PLACEHOLDER-4)))))) (def PLACEHOLDER-2 (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-5 num) PLACEHOLDER-6 (PLACEHOLDER-8 (count PLACEHOLDER-0))] (reduce + (map PLACEHOLDER-6 PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (= (bigdec num) (PLACEHOLDER-2 num)))))))