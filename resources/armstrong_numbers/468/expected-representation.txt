((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-0] (Character/digit PLACEHOLDER-0 10)) (str num))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1] (fn* ([PLACEHOLDER-2] (PLACEHOLDER-2 (bigdec PLACEHOLDER-2) PLACEHOLDER-1)))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 num) PLACEHOLDER-5 (PLACEHOLDER-1 (count PLACEHOLDER-4))] (reduce + (map PLACEHOLDER-5 PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (= (bigdec num) (PLACEHOLDER-4 num)))))))