((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-1 PLACEHOLDER-1 10)) (PLACEHOLDER-2 (str num) (re-pattern "")))] (if (= (long (rationalize (reduce (fn* [PLACEHOLDER-2 PLACEHOLDER-3] (+ PLACEHOLDER-2 (PLACEHOLDER-4 (bigdec PLACEHOLDER-3) (count PLACEHOLDER-0)))) 0 PLACEHOLDER-0))) num) true false)))))))