((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (str PLACEHOLDER-1))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1 (* (int PLACEHOLDER-0) (PLACEHOLDER-4 PLACEHOLDER-0 (dec PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-5 num) PLACEHOLDER-6 (count PLACEHOLDER-1)] (= num (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-4 PLACEHOLDER-7 PLACEHOLDER-6)) PLACEHOLDER-1)))))))))