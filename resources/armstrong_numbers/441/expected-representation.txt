((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-0] (Character/digit PLACEHOLDER-0 10)) (str PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1 (* (int PLACEHOLDER-1) (PLACEHOLDER-1 PLACEHOLDER-1 (dec PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-0 num) PLACEHOLDER-4 (count PLACEHOLDER-0)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-1 PLACEHOLDER-5 PLACEHOLDER-4)) PLACEHOLDER-0)))))))))