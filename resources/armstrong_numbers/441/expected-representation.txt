((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3] (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (str PLACEHOLDER-3))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1 (* (int PLACEHOLDER-0) (PLACEHOLDER-5 PLACEHOLDER-0 (dec PLACEHOLDER-4))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-6 num) PLACEHOLDER-7 (count PLACEHOLDER-3)] (= num (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-5 PLACEHOLDER-2 PLACEHOLDER-7)) PLACEHOLDER-3)))))))))