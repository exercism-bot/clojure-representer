((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (seq PLACEHOLDER-1))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-7 PLACEHOLDER-1] (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-5 PLACEHOLDER-3 PLACEHOLDER-7)) PLACEHOLDER-1)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (str num)] (= num (reduce + (PLACEHOLDER-6 (count PLACEHOLDER-1) (PLACEHOLDER-8 PLACEHOLDER-1))))))))))