((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (seq PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-1] (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-3)) PLACEHOLDER-1)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (str num)] (= num (reduce + (PLACEHOLDER-2 (count PLACEHOLDER-1) (PLACEHOLDER-1 PLACEHOLDER-1))))))))))