((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-1))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-8] (Character/digit PLACEHOLDER-8 10)) (seq PLACEHOLDER-2))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-6 PLACEHOLDER-2] (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-4 PLACEHOLDER-0 PLACEHOLDER-6)) PLACEHOLDER-2)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (str num)] (= num (reduce + (PLACEHOLDER-5 (count PLACEHOLDER-2) (PLACEHOLDER-7 PLACEHOLDER-2))))))))))