((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num PLACEHOLDER-0] (if (= num 0) PLACEHOLDER-0 (PLACEHOLDER-0 (quot num 10) (cons (rem num 10) PLACEHOLDER-0)))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-0 num (quote ())) PLACEHOLDER-3 (count PLACEHOLDER-2)] (long (reduce (fn* [PLACEHOLDER-4 PLACEHOLDER-4] (+ (PLACEHOLDER-5 PLACEHOLDER-4 PLACEHOLDER-3) PLACEHOLDER-4)) 0 PLACEHOLDER-2)))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-1 num) num))))))