((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([num PLACEHOLDER-0] (if (= num 0) PLACEHOLDER-0 (PLACEHOLDER-4 (quot num 10) (cons (rem num 10) PLACEHOLDER-0)))))) (def PLACEHOLDER-7 (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-4 num (quote ())) PLACEHOLDER-5 (count PLACEHOLDER-1)] (long (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-6] (+ (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5) PLACEHOLDER-3)) 0 PLACEHOLDER-1)))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-7 num) num))))))