((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-0] (Integer/parseInt PLACEHOLDER-0)) (clojure.string/split (str num) (re-pattern "")))))) (PLACEHOLDER-0 123) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 num) PLACEHOLDER-2 (count PLACEHOLDER-4) PLACEHOLDER-5 (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-1 PLACEHOLDER-5 PLACEHOLDER-2)) PLACEHOLDER-4))] (= num PLACEHOLDER-5))))) (armstrong? 9) (armstrong? 10) (armstrong? 153) (armstrong? 21897142587612075)))