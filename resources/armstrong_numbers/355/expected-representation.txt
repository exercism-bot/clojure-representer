((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (clojure.string/split (str num) (re-pattern "")))))) (PLACEHOLDER-1 123) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-1 num) PLACEHOLDER-4 (count PLACEHOLDER-5) PLACEHOLDER-7 (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-4)) PLACEHOLDER-5))] (= num PLACEHOLDER-7))))) (armstrong? 9) (armstrong? 10) (armstrong? 153) (armstrong? 21897142587612075)))