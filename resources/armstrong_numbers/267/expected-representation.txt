((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3] (if (< PLACEHOLDER-3 10) [PLACEHOLDER-3] (conj (PLACEHOLDER-1 (quot PLACEHOLDER-3 10)) (rem PLACEHOLDER-3 10)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-1 num) PLACEHOLDER-6 (count PLACEHOLDER-4)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-2 PLACEHOLDER-5 PLACEHOLDER-6)) PLACEHOLDER-4)))))))))