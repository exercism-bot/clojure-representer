((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (if (< PLACEHOLDER-0 10) 1 (inc (PLACEHOLDER-1 (/ PLACEHOLDER-0 10))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (if (< PLACEHOLDER-2 10) (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-3) (+ (PLACEHOLDER-5 (long (/ PLACEHOLDER-2 10)) PLACEHOLDER-3) (PLACEHOLDER-4 (mod PLACEHOLDER-2 10) PLACEHOLDER-3)))))) (def armstrong? (fn* ([PLACEHOLDER-2] (= PLACEHOLDER-2 (PLACEHOLDER-5 PLACEHOLDER-2 (PLACEHOLDER-1 PLACEHOLDER-2))))))))