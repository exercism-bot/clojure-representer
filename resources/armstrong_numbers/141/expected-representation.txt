((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (if (< PLACEHOLDER-0 10) 1 (inc (PLACEHOLDER-1 (/ PLACEHOLDER-0 10))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (if (< PLACEHOLDER-0 10) (PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-2) (+ (PLACEHOLDER-2 (long (/ PLACEHOLDER-0 10)) PLACEHOLDER-2) (PLACEHOLDER-0 (mod PLACEHOLDER-0 10) PLACEHOLDER-2)))))) (def armstrong? (fn* ([PLACEHOLDER-0] (= PLACEHOLDER-0 (PLACEHOLDER-2 PLACEHOLDER-0 (PLACEHOLDER-1 PLACEHOLDER-0))))))))