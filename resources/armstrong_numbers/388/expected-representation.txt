((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-9] (PLACEHOLDER-3 (re-find (re-pattern "[0-9]*") PLACEHOLDER-9))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-1 PLACEHOLDER-7] (if (zero? PLACEHOLDER-7) 1 (* PLACEHOLDER-1 (PLACEHOLDER-8 PLACEHOLDER-1 (dec PLACEHOLDER-7))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-5 (str num) (re-pattern "")) PLACEHOLDER-4 (count PLACEHOLDER-0)] (= num (reduce (fn* ([PLACEHOLDER-6 PLACEHOLDER-2] (+ PLACEHOLDER-6 (PLACEHOLDER-8 (PLACEHOLDER-10 PLACEHOLDER-2) PLACEHOLDER-4)))) 0 PLACEHOLDER-0))))))))