((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1] (rseq (mapv (fn* [PLACEHOLDER-2] (mod PLACEHOLDER-2 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-5] (quot PLACEHOLDER-5 10)) PLACEHOLDER-1))))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-1] (count (str PLACEHOLDER-1))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (= num (reduce + (map PLACEHOLDER-3 (PLACEHOLDER-4 num) (map (constantly (PLACEHOLDER-6 num)) (PLACEHOLDER-4 num))))))))))