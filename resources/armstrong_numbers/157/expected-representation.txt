((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (rseq (mapv (fn* [PLACEHOLDER-1] (mod PLACEHOLDER-1 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-1] (quot PLACEHOLDER-1 10)) PLACEHOLDER-0))))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (count (str PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (= num (reduce + (map PLACEHOLDER-3 (PLACEHOLDER-0 num) (map (constantly (PLACEHOLDER-1 num)) (PLACEHOLDER-0 num))))))))))