((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2] (rseq (mapv (fn* [PLACEHOLDER-3] (mod PLACEHOLDER-3 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-1] (quot PLACEHOLDER-1 10)) PLACEHOLDER-2))))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-2] (count (str PLACEHOLDER-2))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (= num (reduce + (map PLACEHOLDER-4 (PLACEHOLDER-5 num) (map (constantly (PLACEHOLDER-6 num)) (PLACEHOLDER-5 num))))))))))