((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (rseq (mapv (fn* [PLACEHOLDER-2] (mod PLACEHOLDER-2 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-0] (quot PLACEHOLDER-0 10)) PLACEHOLDER-3))))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3] (count (str PLACEHOLDER-3))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (= num (reduce + (map PLACEHOLDER-4 (PLACEHOLDER-5 num) (map (constantly (PLACEHOLDER-6 num)) (PLACEHOLDER-5 num))))))))))