((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (map (fn* [PLACEHOLDER-4] (Integer/parseInt (str PLACEHOLDER-4))) (seq (str num)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-2 num) PLACEHOLDER-0 (count PLACEHOLDER-3) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-5 (biginteger PLACEHOLDER-1) PLACEHOLDER-0)) PLACEHOLDER-3)] (println "values: " PLACEHOLDER-3) (= num (apply + PLACEHOLDER-3))))))))