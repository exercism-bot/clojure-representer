((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (map (fn* [PLACEHOLDER-3] (Integer/parseInt (str PLACEHOLDER-3))) (seq (str num)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-1 num) PLACEHOLDER-0 (count PLACEHOLDER-4) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-5 (biginteger PLACEHOLDER-2) PLACEHOLDER-0)) PLACEHOLDER-4)] (println "values: " PLACEHOLDER-4) (= num (apply + PLACEHOLDER-4))))))))