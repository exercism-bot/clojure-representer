((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-0] (Integer/parseInt (str PLACEHOLDER-0))) (seq (str num)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-0 num) PLACEHOLDER-2 (count PLACEHOLDER-1) PLACEHOLDER-1 (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-4 (biginteger PLACEHOLDER-4) PLACEHOLDER-2)) PLACEHOLDER-1)] (println "values: " PLACEHOLDER-1) (= num (apply + PLACEHOLDER-1))))))))