((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([num] (loop* [PLACEHOLDER-3 num PLACEHOLDER-2 (quote ())] (if (< PLACEHOLDER-3 10) (cons PLACEHOLDER-3 PLACEHOLDER-2) (if :else (recur (quot PLACEHOLDER-3 10) (cons (mod PLACEHOLDER-3 10) PLACEHOLDER-2)) nil)))))) (PLACEHOLDER-6 9474) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-6 num) PLACEHOLDER-7 (count PLACEHOLDER-5)] (= num (reduce (fn* ([PLACEHOLDER-2 PLACEHOLDER-1] (+ PLACEHOLDER-2 (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-7)))) 0 PLACEHOLDER-5)))))) (armstrong? 153) (armstrong? 9474)))