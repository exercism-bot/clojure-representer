((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (loop* [PLACEHOLDER-0 num PLACEHOLDER-1 (quote ())] (if (< PLACEHOLDER-0 10) (cons PLACEHOLDER-0 PLACEHOLDER-1) (if :else (recur (quot PLACEHOLDER-0 10) (cons (mod PLACEHOLDER-0 10) PLACEHOLDER-1)) nil)))))) (PLACEHOLDER-0 9474) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num) PLACEHOLDER-4 (count PLACEHOLDER-3)] (= num (reduce (fn* ([PLACEHOLDER-1 PLACEHOLDER-5] (+ PLACEHOLDER-1 (PLACEHOLDER-3 PLACEHOLDER-5 PLACEHOLDER-4)))) 0 PLACEHOLDER-3)))))) (armstrong? 153) (armstrong? 9474)))