((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-1 PLACEHOLDER-7] (PLACEHOLDER-6 (Integer/parseInt PLACEHOLDER-7) PLACEHOLDER-1)))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-11] (def PLACEHOLDER-8 (count PLACEHOLDER-11)) (def PLACEHOLDER-5 (partial PLACEHOLDER-9 PLACEHOLDER-8)) (def PLACEHOLDER-10 (map str (sequence PLACEHOLDER-11))) (reduce + (map PLACEHOLDER-5 PLACEHOLDER-10))))) (def armstrong? (fn* ([PLACEHOLDER-3] (def PLACEHOLDER-11 (str PLACEHOLDER-3)) (if (= PLACEHOLDER-3 (PLACEHOLDER-2 PLACEHOLDER-11)) true false))))))