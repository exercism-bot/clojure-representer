((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-3] (PLACEHOLDER-0 (Integer/parseInt PLACEHOLDER-3) PLACEHOLDER-3)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-5] (def PLACEHOLDER-6 (count PLACEHOLDER-5)) (def PLACEHOLDER-7 (partial PLACEHOLDER-2 PLACEHOLDER-6)) (def PLACEHOLDER-8 (map str (sequence PLACEHOLDER-5))) (reduce + (map PLACEHOLDER-7 PLACEHOLDER-8))))) (def armstrong? (fn* ([PLACEHOLDER-10] (def PLACEHOLDER-5 (str PLACEHOLDER-10)) (if (= PLACEHOLDER-10 (PLACEHOLDER-5 PLACEHOLDER-5)) true false))))))