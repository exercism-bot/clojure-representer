((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.math :refer [PLACEHOLDER-4 PLACEHOLDER-6]])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (apply * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([num nth] (let* [PLACEHOLDER-2 (PLACEHOLDER-7 10 nth)] (long (rem (/ num PLACEHOLDER-2) 10)))))) (def PLACEHOLDER-8 (fn* ([num] (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-3 num PLACEHOLDER-10)) (range (PLACEHOLDER-4 (PLACEHOLDER-6 num))))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-8 num) count (long (count PLACEHOLDER-8))] (reduce + (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-7 PLACEHOLDER-9 count)) PLACEHOLDER-8)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))