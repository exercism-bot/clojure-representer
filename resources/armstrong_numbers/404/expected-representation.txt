((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.math :refer [PLACEHOLDER-0 PLACEHOLDER-0]])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (apply * (repeat PLACEHOLDER-2 PLACEHOLDER-1))))) (def PLACEHOLDER-3 (fn* ([num nth] (let* [PLACEHOLDER-4 (PLACEHOLDER-1 10 nth)] (long (rem (/ num PLACEHOLDER-4) 10)))))) (def PLACEHOLDER-5 (fn* ([num] (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-3 num PLACEHOLDER-6)) (range (PLACEHOLDER-0 (PLACEHOLDER-0 num))))))) (def PLACEHOLDER-8 (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-5 num) count (long (count PLACEHOLDER-5))] (reduce + (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-1 PLACEHOLDER-9 count)) PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-8 num)))))))