((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.math :refer [PLACEHOLDER-5 PLACEHOLDER-7]])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (apply * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def PLACEHOLDER-4 (fn* ([num nth] (let* [PLACEHOLDER-2 (PLACEHOLDER-8 10 nth)] (long (rem (/ num PLACEHOLDER-2) 10)))))) (def PLACEHOLDER-9 (fn* ([num] (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-4 num PLACEHOLDER-3)) (range (PLACEHOLDER-5 (PLACEHOLDER-7 num))))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-9 (PLACEHOLDER-9 num) count (long (count PLACEHOLDER-9))] (reduce + (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-8 PLACEHOLDER-10 count)) PLACEHOLDER-9)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))