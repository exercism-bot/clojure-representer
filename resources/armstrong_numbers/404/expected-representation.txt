((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.math :refer [PLACEHOLDER-5 PLACEHOLDER-8]])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (apply * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def PLACEHOLDER-4 (fn* ([num nth] (let* [PLACEHOLDER-3 (PLACEHOLDER-9 10 nth)] (long (rem (/ num PLACEHOLDER-3) 10)))))) (def PLACEHOLDER-10 (fn* ([num] (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-4 num PLACEHOLDER-7)) (range (PLACEHOLDER-5 (PLACEHOLDER-8 num))))))) (def PLACEHOLDER-2 (fn* ([num] (let* [PLACEHOLDER-10 (PLACEHOLDER-10 num) count (long (count PLACEHOLDER-10))] (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-9 PLACEHOLDER-1 count)) PLACEHOLDER-10)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 num)))))))