((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-9 (fn* ([num] (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-1 (str PLACEHOLDER-5))) (seq (str num)))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-7 (count PLACEHOLDER-4)] (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-7)) PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (= num (reduce + (PLACEHOLDER-8 (PLACEHOLDER-9 num)))))))))