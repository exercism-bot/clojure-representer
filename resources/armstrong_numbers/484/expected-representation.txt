((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([num] (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-4 (str PLACEHOLDER-3))) (seq (str num)))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-5] (let* [PLACEHOLDER-6 (count PLACEHOLDER-5)] (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-6)) PLACEHOLDER-5))))) (def armstrong? (fn* ([num] (= num (reduce + (PLACEHOLDER-5 (PLACEHOLDER-3 num)))))))))