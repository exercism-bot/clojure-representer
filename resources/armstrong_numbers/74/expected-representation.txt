((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-1))))) (def PLACEHOLDER-6 (fn* ([num] (map (comp read-string str) (str num))))) (def PLACEHOLDER-3 (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-6 num)] (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-5 PLACEHOLDER-0 (count PLACEHOLDER-2))) PLACEHOLDER-2)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-3 num)))))))