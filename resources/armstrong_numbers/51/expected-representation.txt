((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (loop* [PLACEHOLDER-6 PLACEHOLDER-3 PLACEHOLDER-2 (quote ())] (if (zero? PLACEHOLDER-6) PLACEHOLDER-2 (recur (quot PLACEHOLDER-6 10) (conj PLACEHOLDER-2 (mod PLACEHOLDER-6 10)))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] "An Armstrong number is a number that is the sum of its own digits each raised to the power of the number of digits." (let* [PLACEHOLDER-7 (count (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-7)) (PLACEHOLDER-5 num))))))))))