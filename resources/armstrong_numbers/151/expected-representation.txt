((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-14 (fn* ([PLACEHOLDER-0 PLACEHOLDER-12] (reduce * (repeat PLACEHOLDER-12 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-18] (let* [PLACEHOLDER-10 PLACEHOLDER-18 PLACEHOLDER-8 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-10 0 nil) PLACEHOLDER-13 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-10 1 nil)] [(quot PLACEHOLDER-8 10) (mod PLACEHOLDER-8 10)])))) (def PLACEHOLDER-16 (fn* ([num] (int (inc (PLACEHOLDER-1 num)))))) (def PLACEHOLDER-20 (fn* ([PLACEHOLDER-7] (let* [PLACEHOLDER-19 PLACEHOLDER-7 PLACEHOLDER-9 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 0 nil) PLACEHOLDER-21 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 1 nil) PLACEHOLDER-17 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 2 nil) PLACEHOLDER-2 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 3 nil)] (let* [PLACEHOLDER-5 (mod PLACEHOLDER-21 10)] [PLACEHOLDER-9 (quot PLACEHOLDER-21 10) PLACEHOLDER-5 (+ PLACEHOLDER-2 (PLACEHOLDER-14 PLACEHOLDER-5 PLACEHOLDER-9))]))))) (def armstrong? (fn* ([num] (if (zero? num) true (= num (last (last (take-while (fn* ([PLACEHOLDER-6] (let* [PLACEHOLDER-15 PLACEHOLDER-6 PLACEHOLDER-22 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-15 0 nil) PLACEHOLDER-8 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-15 1 nil) PLACEHOLDER-13 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-15 2 nil) PLACEHOLDER-4 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-15 3 nil)] (let* [PLACEHOLDER-11 (pos? PLACEHOLDER-8)] (if PLACEHOLDER-11 PLACEHOLDER-11 (pos? PLACEHOLDER-13)))))) (iterate PLACEHOLDER-20 [(PLACEHOLDER-16 num) num 0 0])))))))))))