((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-13 (fn* ([PLACEHOLDER-0 PLACEHOLDER-10] (reduce * (repeat PLACEHOLDER-10 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-19] (let* [PLACEHOLDER-9 PLACEHOLDER-19 PLACEHOLDER-6 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-9 0 nil) PLACEHOLDER-12 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-9 1 nil)] [(quot PLACEHOLDER-6 10) (mod PLACEHOLDER-6 10)])))) (def PLACEHOLDER-14 (fn* ([num] (int (inc (PLACEHOLDER-1 num)))))) (def PLACEHOLDER-20 (fn* ([PLACEHOLDER-17] (let* [PLACEHOLDER-11 PLACEHOLDER-17 PLACEHOLDER-7 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-11 0 nil) PLACEHOLDER-21 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-11 1 nil) PLACEHOLDER-16 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-11 2 nil) PLACEHOLDER-2 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-11 3 nil)] (let* [PLACEHOLDER-5 (mod PLACEHOLDER-21 10)] [PLACEHOLDER-7 (quot PLACEHOLDER-21 10) PLACEHOLDER-5 (+ PLACEHOLDER-2 (PLACEHOLDER-13 PLACEHOLDER-5 PLACEHOLDER-7))]))))) (def armstrong? (fn* ([num] (if (zero? num) true (= num (last (last (take-while (fn* ([PLACEHOLDER-15] (let* [PLACEHOLDER-18 PLACEHOLDER-15 PLACEHOLDER-22 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-18 0 nil) PLACEHOLDER-6 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-18 1 nil) PLACEHOLDER-12 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-18 2 nil) PLACEHOLDER-4 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-18 3 nil)] (let* [PLACEHOLDER-8 (pos? PLACEHOLDER-6)] (if PLACEHOLDER-8 PLACEHOLDER-8 (pos? PLACEHOLDER-12)))))) (iterate PLACEHOLDER-20 [(PLACEHOLDER-14 num) num 0 0])))))))))))