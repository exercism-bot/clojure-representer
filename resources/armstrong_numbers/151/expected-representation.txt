((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-15 (fn* ([PLACEHOLDER-0 PLACEHOLDER-13] (reduce * (repeat PLACEHOLDER-13 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-9] (let* [PLACEHOLDER-17 PLACEHOLDER-9 PLACEHOLDER-7 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-17 0 nil) PLACEHOLDER-14 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-17 1 nil)] [(quot PLACEHOLDER-7 10) (mod PLACEHOLDER-7 10)])))) (def PLACEHOLDER-16 (fn* ([num] (int (inc (PLACEHOLDER-1 num)))))) (def PLACEHOLDER-20 (fn* ([PLACEHOLDER-11] (let* [PLACEHOLDER-19 PLACEHOLDER-11 PLACEHOLDER-8 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 0 nil) PLACEHOLDER-21 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 1 nil) PLACEHOLDER-18 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 2 nil) PLACEHOLDER-2 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-19 3 nil)] (let* [PLACEHOLDER-5 (mod PLACEHOLDER-21 10)] [PLACEHOLDER-8 (quot PLACEHOLDER-21 10) PLACEHOLDER-5 (+ PLACEHOLDER-2 (PLACEHOLDER-15 PLACEHOLDER-5 PLACEHOLDER-8))]))))) (def armstrong? (fn* ([num] (if (zero? num) true (= num (last (last (take-while (fn* ([PLACEHOLDER-12] (let* [PLACEHOLDER-6 PLACEHOLDER-12 PLACEHOLDER-22 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-6 0 nil) PLACEHOLDER-7 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-6 1 nil) PLACEHOLDER-14 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-6 2 nil) PLACEHOLDER-4 (#object[clojure.core$nth "clojure.core$nth"] PLACEHOLDER-6 3 nil)] (let* [PLACEHOLDER-10 (pos? PLACEHOLDER-7)] (if PLACEHOLDER-10 PLACEHOLDER-10 (pos? PLACEHOLDER-14)))))) (iterate PLACEHOLDER-20 [(PLACEHOLDER-16 num) num 0 0])))))))))))