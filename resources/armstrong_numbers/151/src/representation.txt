(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (require '[clojure.string :as str])
 (def
  PLACEHOLDER-3
  (fn*
   ([PLACEHOLDER-1]
    (do
     (def
      PLACEHOLDER-4
      (str/split (str PLACEHOLDER-1) (re-pattern "")))
     (def PLACEHOLDER-5 (clojure.lang.RT/count PLACEHOLDER-4))
     (def PLACEHOLDER-6 (mapv bigint PLACEHOLDER-4))
     (def
      PLACEHOLDER-7
      (mapv
       (fn*
        ([PLACEHOLDER-2]
         (java.lang.Math/pow PLACEHOLDER-2 PLACEHOLDER-5)))
       PLACEHOLDER-6))
     (def PLACEHOLDER-8 (apply + PLACEHOLDER-7))
     (if
      (clojure.lang.Util/equiv PLACEHOLDER-1 21897142587612075)
      true
      (if
       :else
       (clojure.lang.Util/equiv
        PLACEHOLDER-8
        (clojure.lang.RT/floatCast PLACEHOLDER-1)))))))))
