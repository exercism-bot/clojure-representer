((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2] "Takes a number and returns a vector of its digits" (if (< PLACEHOLDER-2 10) [PLACEHOLDER-2] (conj (PLACEHOLDER-4 (quot PLACEHOLDER-2 10)) (rem PLACEHOLDER-2 10)))))) (def PLACEHOLDER-3 (fn* ([num PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 num))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-5 num] (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-5)) (PLACEHOLDER-4 num)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (count (PLACEHOLDER-4 num))] (if (= num (PLACEHOLDER-0 PLACEHOLDER-5 num)) true false)))))))