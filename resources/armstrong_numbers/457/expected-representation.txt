((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (if (zero? num) 0 (int (PLACEHOLDER-1 (PLACEHOLDER-1 num))))))) (def PLACEHOLDER-1 (fn* ([num PLACEHOLDER-1] (PLACEHOLDER-1 num PLACEHOLDER-1 1)) ([num PLACEHOLDER-1 PLACEHOLDER-2] (if (zero? PLACEHOLDER-1) PLACEHOLDER-2 (recur num (- PLACEHOLDER-1 1) (* num PLACEHOLDER-2)))))) (def PLACEHOLDER-5 (fn* ([num PLACEHOLDER-5 PLACEHOLDER-5] (if (zero? num) PLACEHOLDER-5 (recur (quot num 10) PLACEHOLDER-5 (+ PLACEHOLDER-5 (PLACEHOLDER-1 (rem num 10) PLACEHOLDER-5))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-5 num (PLACEHOLDER-0 num) 0)] (= num PLACEHOLDER-5)))))))