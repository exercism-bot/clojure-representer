((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([num] (if (zero? num) 0 (int (PLACEHOLDER-3 (PLACEHOLDER-0 num))))))) (def PLACEHOLDER-2 (fn* ([num PLACEHOLDER-5] (PLACEHOLDER-2 num PLACEHOLDER-5 1)) ([num PLACEHOLDER-5 PLACEHOLDER-4] (if (zero? PLACEHOLDER-5) PLACEHOLDER-4 (recur num (- PLACEHOLDER-5 1) (* num PLACEHOLDER-4)))))) (def PLACEHOLDER-8 (fn* ([num PLACEHOLDER-7 PLACEHOLDER-1] (if (zero? num) PLACEHOLDER-1 (recur (quot num 10) PLACEHOLDER-7 (+ PLACEHOLDER-1 (PLACEHOLDER-2 (rem num 10) PLACEHOLDER-7))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-8 num (PLACEHOLDER-6 num) 0)] (= num PLACEHOLDER-1)))))))