((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-4
   (fn* ([PLACEHOLDER-2] (count (str PLACEHOLDER-2)))))
  (def
   PLACEHOLDER-5
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-1]
     (if
      (= 0 PLACEHOLDER-1)
      1
      (if
       (= 1 PLACEHOLDER-1)
       PLACEHOLDER-0
       (if
        :else
        (apply * (repeat PLACEHOLDER-1 PLACEHOLDER-0))
        nil))))))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-2]
     "Take a number and returns a seq of its digits"
     (map (comp read-string str) (str PLACEHOLDER-2)))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-2]
     (apply
      +
      (map
       (fn*
        ([PLACEHOLDER-3]
         (PLACEHOLDER-5 PLACEHOLDER-3 (PLACEHOLDER-4 PLACEHOLDER-2))))
       (PLACEHOLDER-6 PLACEHOLDER-2))))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-2]
     "Takes a number and returns a boolean indicating whether the number is an\n  armstrong number"
     (if
      (= PLACEHOLDER-2 (PLACEHOLDER-7 PLACEHOLDER-2))
      true
      false))))))
