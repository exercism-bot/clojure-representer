((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([num] (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (str num))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-7 num) PLACEHOLDER-6 (count (str num))] (= num (reduce + 0 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-6)) PLACEHOLDER-5)))))))))