((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-1] (read-string (str PLACEHOLDER-1))) (str PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-0 num) PLACEHOLDER-6 (count PLACEHOLDER-0) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-2 PLACEHOLDER-7 PLACEHOLDER-6)) PLACEHOLDER-0) PLACEHOLDER-8 (reduce - (into [num] PLACEHOLDER-7)) PLACEHOLDER-9 (bigint (reduce + PLACEHOLDER-7))] (= PLACEHOLDER-9 num)))))))