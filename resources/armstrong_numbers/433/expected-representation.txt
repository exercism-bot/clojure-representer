((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4] (map (fn* [PLACEHOLDER-2] (read-string (str PLACEHOLDER-2))) (str PLACEHOLDER-4))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-6 num) PLACEHOLDER-3 (count PLACEHOLDER-6) PLACEHOLDER-9 (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-7 PLACEHOLDER-8 PLACEHOLDER-3)) PLACEHOLDER-6) PLACEHOLDER-10 (reduce - (into [num] PLACEHOLDER-9)) PLACEHOLDER-1 (bigint (reduce + PLACEHOLDER-9))] (= PLACEHOLDER-1 num)))))))