((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-5] (map (fn* [PLACEHOLDER-1] (read-string (str PLACEHOLDER-1))) (str PLACEHOLDER-5))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-7 num) PLACEHOLDER-4 (count PLACEHOLDER-7) PLACEHOLDER-9 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-8 PLACEHOLDER-3 PLACEHOLDER-4)) PLACEHOLDER-7) PLACEHOLDER-10 (reduce - (into [num] PLACEHOLDER-9)) PLACEHOLDER-2 (bigint (reduce + PLACEHOLDER-9))] (= PLACEHOLDER-2 num)))))))