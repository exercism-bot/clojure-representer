((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-3]
     (java.lang.Math/pow PLACEHOLDER-0 PLACEHOLDER-3))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-3]
     (.
      (java.math.BigDecimal/valueOf (double PLACEHOLDER-0))
      PLACEHOLDER-6
      PLACEHOLDER-3))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-1]
     (if
      (= (count PLACEHOLDER-1) 0)
      []
      (conj
       (PLACEHOLDER-8 (subvec PLACEHOLDER-1 1))
       (Integer/parseInt (get PLACEHOLDER-1 0)))))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-5 PLACEHOLDER-2]
     (if
      (= (count PLACEHOLDER-5) 1)
      (PLACEHOLDER-6 (get PLACEHOLDER-5 0) PLACEHOLDER-2)
      (+
       (PLACEHOLDER-6 (get PLACEHOLDER-5 0) PLACEHOLDER-2)
       (PLACEHOLDER-9 (subvec PLACEHOLDER-5 1) PLACEHOLDER-2))))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-5 PLACEHOLDER-2]
     (if
      (= (count PLACEHOLDER-5) 1)
      (PLACEHOLDER-7 (get PLACEHOLDER-5 0) PLACEHOLDER-2)
      (.
       (PLACEHOLDER-7 (get PLACEHOLDER-5 0) PLACEHOLDER-2)
       add
       (PLACEHOLDER-10 (subvec PLACEHOLDER-5 1) PLACEHOLDER-2))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-4]
     (def PLACEHOLDER-12 (str "" PLACEHOLDER-4))
     (def PLACEHOLDER-13 (count PLACEHOLDER-12))
     (def
      PLACEHOLDER-14
      (subvec (clojure.string/split PLACEHOLDER-12 (re-pattern "")) 0))
     (def
      PLACEHOLDER-15
      (PLACEHOLDER-10 (PLACEHOLDER-8 PLACEHOLDER-14) PLACEHOLDER-13))
     (=
      (java.math.BigDecimal/valueOf PLACEHOLDER-4)
      PLACEHOLDER-15))))))
