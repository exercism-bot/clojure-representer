((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4] (map (fn* [PLACEHOLDER-1] (read-string (str PLACEHOLDER-1))) (str PLACEHOLDER-4))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-6 num) PLACEHOLDER-3 (count PLACEHOLDER-6) PLACEHOLDER-8 (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-7 PLACEHOLDER-10 PLACEHOLDER-3)) PLACEHOLDER-6) PLACEHOLDER-9 (reduce - (into [num] PLACEHOLDER-8)) PLACEHOLDER-2 (bigint (reduce + PLACEHOLDER-8))] (= PLACEHOLDER-2 num)))))))