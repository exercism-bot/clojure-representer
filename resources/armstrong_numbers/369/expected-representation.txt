((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-2 PLACEHOLDER-5] (loop* [PLACEHOLDER-0 1 PLACEHOLDER-1 PLACEHOLDER-5] (if (= PLACEHOLDER-1 0) PLACEHOLDER-0 (recur (* PLACEHOLDER-2 PLACEHOLDER-0) (dec PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (loop* [PLACEHOLDER-7 (reverse (vec (str num))) PLACEHOLDER-4 (count (vec (str num))) PLACEHOLDER-3 0] (if (empty? PLACEHOLDER-7) (= PLACEHOLDER-3 num) (recur (rest PLACEHOLDER-7) PLACEHOLDER-4 (+ PLACEHOLDER-3 (PLACEHOLDER-6 (- (int (first PLACEHOLDER-7)) (int \0)) PLACEHOLDER-4))))))))))