((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (loop* [PLACEHOLDER-1 1 PLACEHOLDER-1 PLACEHOLDER-0] (if (= PLACEHOLDER-1 0) PLACEHOLDER-1 (recur (* PLACEHOLDER-0 PLACEHOLDER-1) (dec PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (loop* [PLACEHOLDER-4 (reverse (vec (str num))) PLACEHOLDER-4 (count (vec (str num))) PLACEHOLDER-4 0] (if (empty? PLACEHOLDER-4) (= PLACEHOLDER-4 num) (recur (rest PLACEHOLDER-4) PLACEHOLDER-4 (+ PLACEHOLDER-4 (PLACEHOLDER-0 (- (int (first PLACEHOLDER-4)) (int \0)) PLACEHOLDER-4))))))))))