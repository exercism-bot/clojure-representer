((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (seq (str PLACEHOLDER-0)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0] (count (PLACEHOLDER-0 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-3] (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-4 (PLACEHOLDER-5 PLACEHOLDER-4 PLACEHOLDER-3))) (map bigdec PLACEHOLDER-3))))) (def PLACEHOLDER-6 (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num) PLACEHOLDER-3 (PLACEHOLDER-2 num) ns (PLACEHOLDER-3 PLACEHOLDER-3 PLACEHOLDER-3)] (reduce + ns))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-6 num) num))))))