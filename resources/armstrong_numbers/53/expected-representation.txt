((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-3] (map (fn* [PLACEHOLDER-0] (Character/digit PLACEHOLDER-0 10)) (seq (str PLACEHOLDER-3)))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3] (count (PLACEHOLDER-7 PLACEHOLDER-3))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2 PLACEHOLDER-5] (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-8 (PLACEHOLDER-10 PLACEHOLDER-6 PLACEHOLDER-5))) (map bigdec PLACEHOLDER-2))))) (def PLACEHOLDER-9 (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-7 num) PLACEHOLDER-5 (PLACEHOLDER-1 num) ns (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-5)] (reduce + ns))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-9 num) num))))))