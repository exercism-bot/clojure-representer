((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-6] (Character/digit PLACEHOLDER-6 10)) (seq (str PLACEHOLDER-2)))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-2] (count (PLACEHOLDER-5 PLACEHOLDER-2))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-7 (PLACEHOLDER-10 PLACEHOLDER-8 PLACEHOLDER-4))) (map bigdec PLACEHOLDER-1))))) (def PLACEHOLDER-9 (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-5 num) PLACEHOLDER-4 (PLACEHOLDER-0 num) ns (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-4)] (reduce + ns))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-9 num) num))))))