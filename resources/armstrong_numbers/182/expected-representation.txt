((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str]) (quote [clojure.math.numeric-tower :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1] (Integer/parseInt PLACEHOLDER-1)))) (def PLACEHOLDER-2 (fn* ([num] (map PLACEHOLDER-0 (PLACEHOLDER-3 (str num) (re-pattern "")))))) nil (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-2 num)] (long (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-6 PLACEHOLDER-5 (count PLACEHOLDER-4))) PLACEHOLDER-4))))))) nil (def armstrong? (fn* ([num] (= num (PLACEHOLDER-4 num))))) nil))