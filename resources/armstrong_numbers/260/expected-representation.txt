((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (comp read-string str)) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0] (* PLACEHOLDER-0 PLACEHOLDER-0)))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (if (= PLACEHOLDER-3 0) 1 (if (even? PLACEHOLDER-3) (PLACEHOLDER-7 (PLACEHOLDER-4 PLACEHOLDER-2 (/ PLACEHOLDER-3 2))) (if :else (* PLACEHOLDER-2 (PLACEHOLDER-4 PLACEHOLDER-2 (dec PLACEHOLDER-3))) nil)))))) (def PLACEHOLDER-5 (fn* ([num] (map PLACEHOLDER-6 (str num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (count (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-3)) (PLACEHOLDER-5 num))))))))))