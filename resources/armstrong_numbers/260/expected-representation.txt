((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-4]
     (loop*
      [PLACEHOLDER-3 1 PLACEHOLDER-4 PLACEHOLDER-4]
      (if
       (zero? PLACEHOLDER-4)
       PLACEHOLDER-3
       (recur (* PLACEHOLDER-1 PLACEHOLDER-3) (dec PLACEHOLDER-4)))))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-2]
     (clojure.string/split
      (PLACEHOLDER-6 PLACEHOLDER-2)
      (re-pattern "")))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-6]
     (let*
      [PLACEHOLDER-4 (read-string PLACEHOLDER-6)]
      (if (number? PLACEHOLDER-4) PLACEHOLDER-4 PLACEHOLDER-0)))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-2]
     (let*
      [PLACEHOLDER-5 (count (PLACEHOLDER-6 PLACEHOLDER-2))]
      (reduce
       +
       (map
        (fn* [p1#] (PLACEHOLDER-7 p1# PLACEHOLDER-5))
        (map PLACEHOLDER-9 (PLACEHOLDER-8 PLACEHOLDER-2))))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-2]
     (if
      (= PLACEHOLDER-2 (PLACEHOLDER-10 PLACEHOLDER-2))
      true
      false))))))
