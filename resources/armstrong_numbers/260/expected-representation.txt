((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (comp read-string str)) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0] (* PLACEHOLDER-0 PLACEHOLDER-0)))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (if (= PLACEHOLDER-2 0) 1 (if (even? PLACEHOLDER-2) (PLACEHOLDER-6 (PLACEHOLDER-3 PLACEHOLDER-1 (/ PLACEHOLDER-2 2))) (if :else (* PLACEHOLDER-1 (PLACEHOLDER-3 PLACEHOLDER-1 (dec PLACEHOLDER-2))) nil)))))) (def PLACEHOLDER-4 (fn* ([num] (map PLACEHOLDER-5 (str num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (count (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-2)) (PLACEHOLDER-4 num))))))))))