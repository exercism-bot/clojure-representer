((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-2] (- (int PLACEHOLDER-2) 48)) (seq (str num)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-3 PLACEHOLDER-6] (reduce * 1 (repeat PLACEHOLDER-6 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (count (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-5)) (PLACEHOLDER-0 num))))))))))