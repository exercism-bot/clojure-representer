((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-6] (- (int PLACEHOLDER-6) 48)) (seq (str num)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1 PLACEHOLDER-5] (reduce * 1 (repeat PLACEHOLDER-5 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (count (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-2 PLACEHOLDER-4 PLACEHOLDER-3)) (PLACEHOLDER-0 num))))))))))