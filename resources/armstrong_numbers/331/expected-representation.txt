((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-2]
     "crude power function"
     (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-1)))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-3]
     "Turn an integer into a list of digits"
     (loop*
      [PLACEHOLDER-4 PLACEHOLDER-3 PLACEHOLDER-5 '()]
      (if
       (zero? PLACEHOLDER-4)
       PLACEHOLDER-5
       (recur
        (quot PLACEHOLDER-4 10)
        (conj PLACEHOLDER-5 (rem PLACEHOLDER-4 10))))))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-5]
     "Take a collection of digits and run the armstrong number formula on them"
     (let*
      [PLACEHOLDER-7 (count PLACEHOLDER-5)]
      (reduce
       +
       (map
        (fn* [p1#] (PLACEHOLDER-8 p1# PLACEHOLDER-7))
        PLACEHOLDER-5))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-3]
     (let*
      [PLACEHOLDER-5
       (PLACEHOLDER-9 PLACEHOLDER-3)
       PLACEHOLDER-6
       (PLACEHOLDER-10 PLACEHOLDER-5)]
      (= PLACEHOLDER-3 PLACEHOLDER-6)))))))
