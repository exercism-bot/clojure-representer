((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] "Return base-10 digits of a positive number." (loop* [PLACEHOLDER-2 num PLACEHOLDER-5 nil] (if (zero? PLACEHOLDER-2) PLACEHOLDER-5 (recur (quot PLACEHOLDER-2 10) (cons (rem PLACEHOLDER-2 10) PLACEHOLDER-5))))))) (def armstrong? (fn* ([num] "Return whether num is an Armstrong number." (let* [PLACEHOLDER-4 (PLACEHOLDER-3 num) PLACEHOLDER-1 (count PLACEHOLDER-4) PLACEHOLDER-6 (reduce (fn* [PLACEHOLDER-8 PLACEHOLDER-0] (+ PLACEHOLDER-8 (PLACEHOLDER-7 (biginteger PLACEHOLDER-0) PLACEHOLDER-1))) 0 PLACEHOLDER-4)] (= PLACEHOLDER-6 num)))))))