((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] "Return base-10 digits of a positive number." (loop* [PLACEHOLDER-0 num PLACEHOLDER-1 nil] (if (zero? PLACEHOLDER-0) PLACEHOLDER-1 (recur (quot PLACEHOLDER-0 10) (cons (rem PLACEHOLDER-0 10) PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] "Return whether num is an Armstrong number." (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num) PLACEHOLDER-4 (count PLACEHOLDER-3) PLACEHOLDER-4 (reduce (fn* [PLACEHOLDER-5 PLACEHOLDER-5] (+ PLACEHOLDER-5 (PLACEHOLDER-6 (biginteger PLACEHOLDER-5) PLACEHOLDER-4))) 0 PLACEHOLDER-3)] (= PLACEHOLDER-4 num)))))))