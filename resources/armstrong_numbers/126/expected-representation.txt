((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] "Return base-10 digits of a positive number." (loop* [PLACEHOLDER-2 num PLACEHOLDER-6 nil] (if (zero? PLACEHOLDER-2) PLACEHOLDER-6 (recur (quot PLACEHOLDER-2 10) (cons (rem PLACEHOLDER-2 10) PLACEHOLDER-6))))))) (def armstrong? (fn* ([num] "Return whether num is an Armstrong number." (let* [PLACEHOLDER-5 (PLACEHOLDER-3 num) PLACEHOLDER-0 (count PLACEHOLDER-5) PLACEHOLDER-7 (reduce (fn* [PLACEHOLDER-4 PLACEHOLDER-1] (+ PLACEHOLDER-4 (PLACEHOLDER-8 (biginteger PLACEHOLDER-1) PLACEHOLDER-0))) 0 PLACEHOLDER-5)] (= PLACEHOLDER-7 num)))))))