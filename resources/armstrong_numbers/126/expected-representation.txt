((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] "Return base-10 digits of a positive number." (loop* [PLACEHOLDER-1 num PLACEHOLDER-5 nil] (if (zero? PLACEHOLDER-1) PLACEHOLDER-5 (recur (quot PLACEHOLDER-1 10) (cons (rem PLACEHOLDER-1 10) PLACEHOLDER-5))))))) (def armstrong? (fn* ([num] "Return whether num is an Armstrong number." (let* [PLACEHOLDER-4 (PLACEHOLDER-2 num) PLACEHOLDER-0 (count PLACEHOLDER-4) PLACEHOLDER-6 (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-3] (+ PLACEHOLDER-7 (PLACEHOLDER-8 (biginteger PLACEHOLDER-3) PLACEHOLDER-0))) 0 PLACEHOLDER-4)] (= PLACEHOLDER-6 num)))))))