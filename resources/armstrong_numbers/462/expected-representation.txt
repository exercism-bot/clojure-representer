((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.math :as PLACEHOLDER-0])) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (atom 0)] [PLACEHOLDER-2 (atom num)] [PLACEHOLDER-4 (count (str num))] (loop* [] (if (> PLACEHOLDER-2 0) (do (reset! PLACEHOLDER-1 (+ PLACEHOLDER-1 (PLACEHOLDER-3 (mod PLACEHOLDER-2 10) PLACEHOLDER-4))) (reset! PLACEHOLDER-2 (/ PLACEHOLDER-2 10)) (recur)))) (= PLACEHOLDER-1 num)))))))