((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1 (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-2 PLACEHOLDER-0 (count (str num))))) (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (map str (seq (str num))))))))))))