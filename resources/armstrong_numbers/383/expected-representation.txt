((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (if (pos? num) (conj (PLACEHOLDER-1 (quot num 10)) (mod num 10)) [])))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1N (* PLACEHOLDER-0 (PLACEHOLDER-5 PLACEHOLDER-0 (dec PLACEHOLDER-3))))))) (def PLACEHOLDER-4 (fn* ([num] (reduce (fn* ([PLACEHOLDER-6 PLACEHOLDER-2] (+ (PLACEHOLDER-5 PLACEHOLDER-2 (count (PLACEHOLDER-1 num))) PLACEHOLDER-6))) 0 (PLACEHOLDER-1 num))))) (def armstrong? (fn* ([num] (if (= 0 num) true (if (= (PLACEHOLDER-4 num) num) true (if :else false nil))))))))