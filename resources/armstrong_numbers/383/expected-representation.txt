((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (if (pos? num) (conj (PLACEHOLDER-0 (quot num 10)) (mod num 10)) [])))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1N (* PLACEHOLDER-1 (PLACEHOLDER-0 PLACEHOLDER-1 (dec PLACEHOLDER-1))))))) (def PLACEHOLDER-3 (fn* ([num] (reduce (fn* ([PLACEHOLDER-3 PLACEHOLDER-4] (+ (PLACEHOLDER-0 PLACEHOLDER-4 (count (PLACEHOLDER-0 num))) PLACEHOLDER-3))) 0 (PLACEHOLDER-0 num))))) (def armstrong? (fn* ([num] (if (= 0 num) true (if (= (PLACEHOLDER-3 num) num) true (if :else false nil))))))))