((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (apply * (repeat PLACEHOLDER-2 (bigdec PLACEHOLDER-1)))))) (def PLACEHOLDER-3 (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-4 (str num) (re-pattern "")) PLACEHOLDER-5 (count PLACEHOLDER-4)] (reduce (fn* ([PLACEHOLDER-5 PLACEHOLDER-6] (+' PLACEHOLDER-5 (PLACEHOLDER-0 (Integer/parseInt PLACEHOLDER-6) PLACEHOLDER-5)))) 0 PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (== (bigdec num) (PLACEHOLDER-3 num)))))))