((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as PLACEHOLDER-1])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (apply * (repeat PLACEHOLDER-2 (bigdec PLACEHOLDER-0)))))) (def PLACEHOLDER-6 (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-9 (str num) (re-pattern "")) PLACEHOLDER-7 (count PLACEHOLDER-5)] (reduce (fn* ([PLACEHOLDER-3 PLACEHOLDER-8] (+' PLACEHOLDER-3 (PLACEHOLDER-4 (Integer/parseInt PLACEHOLDER-8) PLACEHOLDER-7)))) 0 PLACEHOLDER-5))))) (def armstrong? (fn* ([num] (== (bigdec num) (PLACEHOLDER-6 num)))))))