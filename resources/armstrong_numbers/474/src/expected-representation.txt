(do
 (do
  (clojure.core/in-ns 'PLACEHOLDER-4-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'PLACEHOLDER-4-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'PLACEHOLDER-4-numbers))))
    nil)))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-1]
    (reduce
     +
     (map
      (fn*
       ([PLACEHOLDER-2]
        (reduce
         *
         (repeat
          (clojure.lang.RT/count (str PLACEHOLDER-1))
          PLACEHOLDER-2))))
      (map
       biginteger
       (clojure.string/split (str PLACEHOLDER-1) (re-pattern ""))))))))
 (def
  PLACEHOLDER-4?
  (fn*
   ([PLACEHOLDER-3]
    (clojure.lang.Util/equiv
     PLACEHOLDER-3
     (PLACEHOLDER-4 PLACEHOLDER-3))))))
