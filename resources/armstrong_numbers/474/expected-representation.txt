((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-2] (loop* [num PLACEHOLDER-2 PLACEHOLDER-3 nil] (if (< num 10) (conj PLACEHOLDER-3 num) (recur (quot num 10) (conj PLACEHOLDER-3 (rem num 10)))))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (apply * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-3 (PLACEHOLDER-6 PLACEHOLDER-2) PLACEHOLDER-5 (count PLACEHOLDER-3)] (= (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-4] (+ PLACEHOLDER-7 (PLACEHOLDER-1 PLACEHOLDER-4 PLACEHOLDER-5))) 0 PLACEHOLDER-3) PLACEHOLDER-2)))))))