((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (loop* [num PLACEHOLDER-0 PLACEHOLDER-1 nil] (if (< num 10) (conj PLACEHOLDER-1 num) (recur (quot num 10) (conj PLACEHOLDER-1 (rem num 10)))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0] (apply * (repeat PLACEHOLDER-0 PLACEHOLDER-3))))) (def armstrong? (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-1 (PLACEHOLDER-0 PLACEHOLDER-0) PLACEHOLDER-5 (count PLACEHOLDER-1)] (= (reduce (fn* [PLACEHOLDER-5 PLACEHOLDER-5] (+ PLACEHOLDER-5 (PLACEHOLDER-3 PLACEHOLDER-5 PLACEHOLDER-5))) 0 PLACEHOLDER-1) PLACEHOLDER-0)))))))