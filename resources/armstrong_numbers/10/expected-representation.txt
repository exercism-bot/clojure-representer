(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-2 PLACEHOLDER-7] (loop* [result 1N PLACEHOLDER-3 PLACEHOLDER-7 acc (bigint PLACEHOLDER-2)] (if (= PLACEHOLDER-3 0) result (recur (if (= (rem PLACEHOLDER-3 2) 0) result (* result acc)) (quot PLACEHOLDER-3 2) (* acc acc))))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-5 (str PLACEHOLDER-1) PLACEHOLDER-3 (count PLACEHOLDER-5) PLACEHOLDER-4 (map (comp (fn* [PLACEHOLDER-6] (PLACEHOLDER-8 PLACEHOLDER-6 PLACEHOLDER-3)) (fn* [PLACEHOLDER-0] (- (int PLACEHOLDER-0) (int \0)))) PLACEHOLDER-5)] (= PLACEHOLDER-1 (apply + PLACEHOLDER-4)))))))))