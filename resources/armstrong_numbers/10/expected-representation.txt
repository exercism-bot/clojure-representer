(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-3 PLACEHOLDER-7] (loop* [result 1N PLACEHOLDER-4 PLACEHOLDER-7 acc (bigint PLACEHOLDER-3)] (if (= PLACEHOLDER-4 0) result (recur (if (= (rem PLACEHOLDER-4 2) 0) result (* result acc)) (quot PLACEHOLDER-4 2) (* acc acc))))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-6 (str PLACEHOLDER-1) PLACEHOLDER-4 (count PLACEHOLDER-6) PLACEHOLDER-5 (map (comp (fn* [PLACEHOLDER-2] (PLACEHOLDER-8 PLACEHOLDER-2 PLACEHOLDER-4)) (fn* [PLACEHOLDER-0] (- (int PLACEHOLDER-0) (int \0)))) PLACEHOLDER-6)] (= PLACEHOLDER-1 (apply + PLACEHOLDER-5)))))))))