((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (count (str num)) PLACEHOLDER-3 (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-4] (+ PLACEHOLDER-3 (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-2))) 0 (map (comp (fn* [PLACEHOLDER-6] (- PLACEHOLDER-6 48)) int) (str num)))] (= num PLACEHOLDER-3)))))))