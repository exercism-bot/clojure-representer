((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-3]
     (let*
      [PLACEHOLDER-1
       (mod PLACEHOLDER-3 10)
       PLACEHOLDER-4
       (if (zero? PLACEHOLDER-3) 0 (bigint (/ PLACEHOLDER-3 10)))]
      (if
       (zero? PLACEHOLDER-4)
       [(int PLACEHOLDER-1)]
       (conj (PLACEHOLDER-6 PLACEHOLDER-4) (int PLACEHOLDER-1)))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-5 PLACEHOLDER-0]
     (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0)))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-3]
     (let*
      [PLACEHOLDER-6
       (PLACEHOLDER-6 PLACEHOLDER-3)
       PLACEHOLDER-2
       (partial PLACEHOLDER-7 (count PLACEHOLDER-6))]
      (==
       PLACEHOLDER-3
       (reduce + (map PLACEHOLDER-2 PLACEHOLDER-6)))))))))
