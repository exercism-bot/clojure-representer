((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) 1 (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (dec PLACEHOLDER-0))))))) (let* [PLACEHOLDER-3 (str num)] (= (reduce + (map (fn* [PLACEHOLDER-3] (long (PLACEHOLDER-0 PLACEHOLDER-3 (count PLACEHOLDER-3)))) (map (fn* [PLACEHOLDER-5] (Character/digit PLACEHOLDER-5 10)) PLACEHOLDER-3))) num)))))))