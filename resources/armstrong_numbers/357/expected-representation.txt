((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) 1 (* PLACEHOLDER-1 (PLACEHOLDER-3 PLACEHOLDER-1 (dec PLACEHOLDER-2))))))) (let* [PLACEHOLDER-4 (str num)] (= (reduce + (map (fn* [PLACEHOLDER-0] (long (PLACEHOLDER-3 PLACEHOLDER-0 (count PLACEHOLDER-4)))) (map (fn* [PLACEHOLDER-5] (Character/digit PLACEHOLDER-5 10)) PLACEHOLDER-4))) num)))))))