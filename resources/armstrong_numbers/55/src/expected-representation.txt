(do
 (do
  (clojure.core/in-ns 'armstrong-PLACEHOLDER-8)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-PLACEHOLDER-8 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-PLACEHOLDER-8))))
    nil)))
 (def
  PLACEHOLDER-5
  (fn*
   ([PLACEHOLDER-1]
    (if
     (clojure.lang.Numbers/isPos PLACEHOLDER-1)
     (conj
      (PLACEHOLDER-5 (clojure.lang.Numbers/quotient PLACEHOLDER-1 10))
      (mod PLACEHOLDER-1 10))
     []))))
 (def
  PLACEHOLDER-6
  (fn*
   ([PLACEHOLDER-2 PLACEHOLDER-3]
    (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-3)))))
 (def
  PLACEHOLDER-7
  (fn*
   ([PLACEHOLDER-4]
    (do
     (def PLACEHOLDER-8 (PLACEHOLDER-5 PLACEHOLDER-4))
     (clojure.lang.Util/equiv
      PLACEHOLDER-4
      (reduce
       +
       (map
        (partial PLACEHOLDER-6 (clojure.lang.RT/count PLACEHOLDER-8))
        PLACEHOLDER-8))))))))
