((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.math :as PLACEHOLDER-2])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-6] (int (inc (PLACEHOLDER-1 PLACEHOLDER-6)))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-6 PLACEHOLDER-8] (loop* [num (bigint PLACEHOLDER-6) PLACEHOLDER-8 PLACEHOLDER-8 PLACEHOLDER-3 1] (if (<= PLACEHOLDER-8 0) PLACEHOLDER-3 (recur num (dec PLACEHOLDER-8) (* PLACEHOLDER-3 num))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-6 PLACEHOLDER-10] (loop* [num (bigint PLACEHOLDER-6) PLACEHOLDER-8 PLACEHOLDER-10 PLACEHOLDER-9 (bigint 0)] (if (<= num 0) PLACEHOLDER-9 (recur (bigint (/ num 10)) PLACEHOLDER-8 (+ PLACEHOLDER-9 (PLACEHOLDER-7 (mod num 10) PLACEHOLDER-8)))))))) (def armstrong? (fn* ([PLACEHOLDER-4] (if (< PLACEHOLDER-4 10) true (= PLACEHOLDER-4 (PLACEHOLDER-5 PLACEHOLDER-4 (PLACEHOLDER-0 PLACEHOLDER-4)))))))))