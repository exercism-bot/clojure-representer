((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num PLACEHOLDER-4 PLACEHOLDER-5] (if (= PLACEHOLDER-4 0) PLACEHOLDER-5 (recur num (- PLACEHOLDER-4 1) (* num PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-2 (into [] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (into [] (map str (reduce conj [] (str num))))))) (if (= (reduce + (into [] (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-1 PLACEHOLDER-0 (count PLACEHOLDER-2) 1)) PLACEHOLDER-2))) num) true false))))))