((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num PLACEHOLDER-0 PLACEHOLDER-1] (if (= PLACEHOLDER-0 0) PLACEHOLDER-1 (recur num (- PLACEHOLDER-0 1) (* num PLACEHOLDER-1)))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-3 (into [] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (into [] (map str (reduce conj [] (str num))))))) (if (= (reduce + (into [] (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 (count PLACEHOLDER-3) 1)) PLACEHOLDER-3))) num) true false))))))