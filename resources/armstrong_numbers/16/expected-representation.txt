((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num PLACEHOLDER-3 PLACEHOLDER-4] (if (= PLACEHOLDER-3 0) PLACEHOLDER-4 (recur num (- PLACEHOLDER-3 1) (* num PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-1 (into [] (map (fn* [PLACEHOLDER-2] (Integer/parseInt PLACEHOLDER-2)) (into [] (map str (reduce conj [] (str num))))))) (if (= (reduce + (into [] (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 (count PLACEHOLDER-1) 1)) PLACEHOLDER-1))) num) true false))))))