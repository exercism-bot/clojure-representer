((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-4] (PLACEHOLDER-5 PLACEHOLDER-4 (if (= PLACEHOLDER-4 0) (quote (0)) (quote ())))) ([PLACEHOLDER-4 list] (let* [PLACEHOLDER-7 (bigint PLACEHOLDER-4)] (if (= 0 PLACEHOLDER-7) list (recur (/ PLACEHOLDER-7 10) (cons (mod PLACEHOLDER-7 10) list))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (bigint num)] (let* [PLACEHOLDER-1 (PLACEHOLDER-5 PLACEHOLDER-2) PLACEHOLDER-1 (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-0] (+' PLACEHOLDER-3 (PLACEHOLDER-6 (bigdec PLACEHOLDER-0) (count PLACEHOLDER-1)))) 0N PLACEHOLDER-1) PLACEHOLDER-1 (bigint PLACEHOLDER-1)] (= PLACEHOLDER-2 PLACEHOLDER-1))))))))