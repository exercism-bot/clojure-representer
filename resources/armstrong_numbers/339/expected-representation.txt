((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3] (map (fn* [PLACEHOLDER-8] (Character/getNumericValue PLACEHOLDER-8)) (str (bigint PLACEHOLDER-3)))))) (def PLACEHOLDER-4 (fn* ([val PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 val))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-1 num) PLACEHOLDER-2 (count PLACEHOLDER-6) PLACEHOLDER-9 (map (fn* [PLACEHOLDER-7] (bigint (PLACEHOLDER-4 PLACEHOLDER-7 PLACEHOLDER-2))) PLACEHOLDER-6) PLACEHOLDER-0 (apply + PLACEHOLDER-9)] (= num PLACEHOLDER-0)))))))