((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-4] (map (fn* [PLACEHOLDER-8] (Character/getNumericValue PLACEHOLDER-8)) (str (bigint PLACEHOLDER-4)))))) (def PLACEHOLDER-5 (fn* ([val PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 val))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-2 num) PLACEHOLDER-3 (count PLACEHOLDER-7) PLACEHOLDER-9 (map (fn* [PLACEHOLDER-1] (bigint (PLACEHOLDER-5 PLACEHOLDER-1 PLACEHOLDER-3))) PLACEHOLDER-7) PLACEHOLDER-0 (apply + PLACEHOLDER-9)] (= num PLACEHOLDER-0)))))))