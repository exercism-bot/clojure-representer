((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-5] (map (fn* [PLACEHOLDER-4] (Character/getNumericValue PLACEHOLDER-4)) (str (bigint PLACEHOLDER-5)))))) (def PLACEHOLDER-6 (fn* ([val PLACEHOLDER-7] (reduce * (repeat PLACEHOLDER-7 val))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-2 num) PLACEHOLDER-3 (count PLACEHOLDER-8) PLACEHOLDER-9 (map (fn* [PLACEHOLDER-0] (bigint (PLACEHOLDER-6 PLACEHOLDER-0 PLACEHOLDER-3))) PLACEHOLDER-8) PLACEHOLDER-1 (apply + PLACEHOLDER-9)] (= num PLACEHOLDER-1)))))))