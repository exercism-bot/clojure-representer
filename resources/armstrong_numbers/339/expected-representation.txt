((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-1] (Character/getNumericValue PLACEHOLDER-1)) (str (bigint PLACEHOLDER-0)))))) (def PLACEHOLDER-2 (fn* ([val PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 val))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 num) PLACEHOLDER-5 (count PLACEHOLDER-4) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-6] (bigint (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5))) PLACEHOLDER-4) PLACEHOLDER-8 (apply + PLACEHOLDER-6)] (= num PLACEHOLDER-8)))))))