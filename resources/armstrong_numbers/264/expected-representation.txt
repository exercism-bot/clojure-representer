((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (str PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 num)] (= num (reduce + (map (fn* ([PLACEHOLDER-2] (PLACEHOLDER-1 PLACEHOLDER-2 (count PLACEHOLDER-4)))) PLACEHOLDER-4)))))))))