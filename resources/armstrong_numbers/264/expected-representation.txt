((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-5] (Character/digit PLACEHOLDER-5 10)) (str PLACEHOLDER-1))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-3 num)] (= num (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-4 PLACEHOLDER-0 (count PLACEHOLDER-6)))) PLACEHOLDER-6)))))))))