((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (map read-string (map str (vec (seq (str num))))) PLACEHOLDER-1 (count PLACEHOLDER-4) PLACEHOLDER-5 (reduce + (map (fn* ([PLACEHOLDER-6] (PLACEHOLDER-3 PLACEHOLDER-6 PLACEHOLDER-1))) PLACEHOLDER-4))] (= num PLACEHOLDER-5)))))))