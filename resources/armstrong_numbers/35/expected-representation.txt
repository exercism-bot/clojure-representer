((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (map read-string (map str (vec (seq (str num))))) PLACEHOLDER-3 (count PLACEHOLDER-2) PLACEHOLDER-4 (reduce + (map (fn* ([PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-3))) PLACEHOLDER-2))] (= num PLACEHOLDER-4)))))))