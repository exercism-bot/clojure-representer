((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([num] (str num)))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-5] (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-1 (str PLACEHOLDER-3))) PLACEHOLDER-5)))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-11] (reduce * 1 (repeat PLACEHOLDER-11 PLACEHOLDER-0))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-8] (let* [PLACEHOLDER-12 (count PLACEHOLDER-8)] (reduce (fn* [PLACEHOLDER-10 PLACEHOLDER-4] (+' PLACEHOLDER-10 (PLACEHOLDER-7 PLACEHOLDER-4 PLACEHOLDER-12))) 0 PLACEHOLDER-8))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-9 (PLACEHOLDER-2 (PLACEHOLDER-6 num))) num)))) (PLACEHOLDER-9 (PLACEHOLDER-2 (PLACEHOLDER-6 21897142587612075)))))