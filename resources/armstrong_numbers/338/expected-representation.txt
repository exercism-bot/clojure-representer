((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([num] (str num)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-6] (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-3 (str PLACEHOLDER-0))) PLACEHOLDER-6)))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-1 PLACEHOLDER-11] (reduce * 1 (repeat PLACEHOLDER-11 PLACEHOLDER-1))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-9] (let* [PLACEHOLDER-12 (count PLACEHOLDER-9)] (reduce (fn* [PLACEHOLDER-2 PLACEHOLDER-4] (+' PLACEHOLDER-2 (PLACEHOLDER-8 PLACEHOLDER-4 PLACEHOLDER-12))) 0 PLACEHOLDER-9))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-10 (PLACEHOLDER-5 (PLACEHOLDER-7 num))) num)))) (PLACEHOLDER-10 (PLACEHOLDER-5 (PLACEHOLDER-7 21897142587612075)))))