((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (str num)))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-2 (str PLACEHOLDER-2))) PLACEHOLDER-1)))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (reduce * 1 (repeat PLACEHOLDER-4 PLACEHOLDER-4))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-6] (let* [PLACEHOLDER-6 (count PLACEHOLDER-6)] (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-7] (+' PLACEHOLDER-7 (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-6))) 0 PLACEHOLDER-6))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-5 (PLACEHOLDER-0 (PLACEHOLDER-0 num))) num)))) (PLACEHOLDER-5 (PLACEHOLDER-0 (PLACEHOLDER-0 21897142587612075)))))