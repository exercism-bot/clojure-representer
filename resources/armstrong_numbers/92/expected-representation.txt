((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-4]
     (if
      (int? PLACEHOLDER-4)
      PLACEHOLDER-0
      (do
       (throw
        (java.lang.AssertionError.
         (clojure.core/str
          "Assert failed: "
          (clojure.core/pr-str '(int? PLACEHOLDER-4)))))))
     (loop*
      [PLACEHOLDER-5 PLACEHOLDER-4 PLACEHOLDER-2 ()]
      (if
       (zero? PLACEHOLDER-5)
       PLACEHOLDER-2
       (recur
        (quot PLACEHOLDER-5 10)
        (conj PLACEHOLDER-2 (rem PLACEHOLDER-5 10))))))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-3]
     (apply *' (repeat PLACEHOLDER-3 PLACEHOLDER-1)))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-4]
     (let*
      [PLACEHOLDER-7
       (PLACEHOLDER-8 PLACEHOLDER-4)
       PLACEHOLDER-6
       (count PLACEHOLDER-7)]
      (reduce
       +
       (map
        (fn* [p1#] (PLACEHOLDER-9 p1# PLACEHOLDER-6))
        PLACEHOLDER-7))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-4]
     (= PLACEHOLDER-4 (PLACEHOLDER-10 PLACEHOLDER-4)))))))
