((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-5
   (fn*
    ([PLACEHOLDER-2]
     (if
      (zero? PLACEHOLDER-2)
      '[]
      (if
       :else
       (vec
        (concat
         (PLACEHOLDER-5 (quot PLACEHOLDER-2 10))
         [(mod PLACEHOLDER-2 10)]))
       PLACEHOLDER-0)))))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-4]
     (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-1)))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-5 PLACEHOLDER-4]
     (reduce
      +
      (map
       (fn* [p1#] (PLACEHOLDER-6 p1# PLACEHOLDER-4))
       PLACEHOLDER-5)))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-3]
     (let*
      [PLACEHOLDER-5
       (PLACEHOLDER-5 PLACEHOLDER-3)
       PLACEHOLDER-4
       (count PLACEHOLDER-5)]
      (==
       (PLACEHOLDER-7 PLACEHOLDER-5 PLACEHOLDER-4)
       PLACEHOLDER-3)))))))
