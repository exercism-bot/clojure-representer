((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (loop* [PLACEHOLDER-0 num PLACEHOLDER-0 (vector)] (if (< PLACEHOLDER-0 1) (if (empty? PLACEHOLDER-0) [0] PLACEHOLDER-0) (recur (quot PLACEHOLDER-0 10) (conj PLACEHOLDER-0 (mod PLACEHOLDER-0 10)))))))) (def armstrong? (fn* ([num] (= (bigdec num) (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-3 (bigdec PLACEHOLDER-2) (count (PLACEHOLDER-0 num)))) (PLACEHOLDER-0 num)))))))))