((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (loop* [PLACEHOLDER-1 num PLACEHOLDER-0 (vector)] (if (< PLACEHOLDER-1 1) (if (empty? PLACEHOLDER-0) [0] PLACEHOLDER-0) (recur (quot PLACEHOLDER-1 10) (conj PLACEHOLDER-0 (mod PLACEHOLDER-1 10)))))))) (def armstrong? (fn* ([num] (= (bigdec num) (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-4 (bigdec PLACEHOLDER-3) (count (PLACEHOLDER-2 num)))) (PLACEHOLDER-2 num)))))))))