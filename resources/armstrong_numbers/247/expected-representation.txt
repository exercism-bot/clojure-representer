((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (loop* [PLACEHOLDER-2 num PLACEHOLDER-0 (vector)] (if (< PLACEHOLDER-2 1) (if (empty? PLACEHOLDER-0) [0] PLACEHOLDER-0) (recur (quot PLACEHOLDER-2 10) (conj PLACEHOLDER-0 (mod PLACEHOLDER-2 10)))))))) (def armstrong? (fn* ([num] (= (bigdec num) (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 (bigdec PLACEHOLDER-1) (count (PLACEHOLDER-3 num)))) (PLACEHOLDER-3 num)))))))))