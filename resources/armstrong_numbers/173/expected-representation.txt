((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (map (fn* [PLACEHOLDER-2] (bigint (bigdec PLACEHOLDER-2))) (PLACEHOLDER-3 (str num) (re-pattern "")))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-1 num)] (== num (bigint (apply + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-4 PLACEHOLDER-7 (count PLACEHOLDER-6))) PLACEHOLDER-6))))))))))