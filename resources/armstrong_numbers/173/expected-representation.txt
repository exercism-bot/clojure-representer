((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-0] (bigint (bigdec PLACEHOLDER-0))) (PLACEHOLDER-1 (str num) (re-pattern "")))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 num)] (== num (bigint (apply + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 (count PLACEHOLDER-5))) PLACEHOLDER-5))))))))))