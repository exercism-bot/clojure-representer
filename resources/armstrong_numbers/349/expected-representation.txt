((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-1] (- (int PLACEHOLDER-1) (int \0))) (seq (str num))) PLACEHOLDER-2 (count PLACEHOLDER-3) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))) PLACEHOLDER-3)] (= (reduce + PLACEHOLDER-4) num)))))))