((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-4 (quot num 10)) (mod num 10)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-4 num) PLACEHOLDER-2 (count PLACEHOLDER-1) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-2)) PLACEHOLDER-1) PLACEHOLDER-5 (reduce + PLACEHOLDER-6)] (= num PLACEHOLDER-5)))))))