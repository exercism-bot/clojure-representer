((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-2 (quot num 10)) (mod num 10)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (apply * (take PLACEHOLDER-4 (repeat PLACEHOLDER-1)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-2 num) PLACEHOLDER-8 (count PLACEHOLDER-5) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-3 (bigint PLACEHOLDER-0) PLACEHOLDER-8)) PLACEHOLDER-5) PLACEHOLDER-6 (apply + PLACEHOLDER-7)] (= (bigint num) PLACEHOLDER-6)))))))