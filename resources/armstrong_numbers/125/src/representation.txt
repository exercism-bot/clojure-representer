(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (do
        (clojure.core/refer 'clojure.core)
        (clojure.core/require '[clojure.string :refer [split]]))
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-1]
    (fn*
     ([PLACEHOLDER-2 PLACEHOLDER-3]
      (clojure.lang.Numbers/add
       PLACEHOLDER-2
       (.pow
        (java.math.BigInteger/valueOf
         (java.lang.Integer/parseInt PLACEHOLDER-3))
        PLACEHOLDER-1)))))))
 (def
  PLACEHOLDER-9
  (fn*
   ([PLACEHOLDER-4]
    (let*
     [PLACEHOLDER-5
      (str PLACEHOLDER-4)
      PLACEHOLDER-6
      (clojure.lang.RT/count PLACEHOLDER-5)]
     (clojure.lang.Util/equiv
      PLACEHOLDER-4
      (clojure.lang.RT/longCast
       (reduce
        (PLACEHOLDER-8 PLACEHOLDER-6)
        0
        ((fn* ([PLACEHOLDER-7] (split PLACEHOLDER-7 (re-pattern ""))))
         PLACEHOLDER-5)))))))))
