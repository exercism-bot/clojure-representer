((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-4] (PLACEHOLDER-9 PLACEHOLDER-4 [])) ([PLACEHOLDER-4 PLACEHOLDER-3] (if (= PLACEHOLDER-4 0) PLACEHOLDER-3 (let* [PLACEHOLDER-11 (mod PLACEHOLDER-4 10) PLACEHOLDER-7 (quot PLACEHOLDER-4 10)] (recur PLACEHOLDER-7 (conj PLACEHOLDER-3 PLACEHOLDER-11))))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce (fn* ([PLACEHOLDER-3 PLACEHOLDER-2] (* PLACEHOLDER-3 PLACEHOLDER-0))) 1N (range 0 PLACEHOLDER-5))))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-6 (PLACEHOLDER-9 PLACEHOLDER-4) PLACEHOLDER-1 (count PLACEHOLDER-6)] (= PLACEHOLDER-4 (reduce + (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-8 PLACEHOLDER-10 PLACEHOLDER-1)) PLACEHOLDER-6)))))))))