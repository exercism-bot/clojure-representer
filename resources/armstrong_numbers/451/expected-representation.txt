((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 [])) ([PLACEHOLDER-0 PLACEHOLDER-3] (if (= PLACEHOLDER-0 0) PLACEHOLDER-3 (let* [PLACEHOLDER-3 (mod PLACEHOLDER-0 10) PLACEHOLDER-4 (quot PLACEHOLDER-0 10)] (recur PLACEHOLDER-4 (conj PLACEHOLDER-3 PLACEHOLDER-3))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (reduce (fn* ([PLACEHOLDER-3 PLACEHOLDER-5] (* PLACEHOLDER-3 PLACEHOLDER-4))) 1N (range 0 PLACEHOLDER-4))))) (def armstrong? (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-7 (PLACEHOLDER-0 PLACEHOLDER-0) PLACEHOLDER-8 (count PLACEHOLDER-7)] (= PLACEHOLDER-0 (reduce + (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-4 PLACEHOLDER-9 PLACEHOLDER-8)) PLACEHOLDER-7)))))))))