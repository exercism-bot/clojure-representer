((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-5] (PLACEHOLDER-10 PLACEHOLDER-5 [])) ([PLACEHOLDER-5 PLACEHOLDER-4] (if (= PLACEHOLDER-5 0) PLACEHOLDER-4 (let* [PLACEHOLDER-11 (mod PLACEHOLDER-5 10) PLACEHOLDER-8 (quot PLACEHOLDER-5 10)] (recur PLACEHOLDER-8 (conj PLACEHOLDER-4 PLACEHOLDER-11))))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce (fn* ([PLACEHOLDER-4 PLACEHOLDER-3] (* PLACEHOLDER-4 PLACEHOLDER-0))) 1N (range 0 PLACEHOLDER-6))))) (def armstrong? (fn* ([PLACEHOLDER-5] (let* [PLACEHOLDER-7 (PLACEHOLDER-10 PLACEHOLDER-5) PLACEHOLDER-2 (count PLACEHOLDER-7)] (= PLACEHOLDER-5 (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-9 PLACEHOLDER-1 PLACEHOLDER-2)) PLACEHOLDER-7)))))))))