((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3] (loop* [num PLACEHOLDER-3 PLACEHOLDER-4 nil] (if (< num 10) (conj PLACEHOLDER-4 num) (recur (quot num 10) (conj PLACEHOLDER-4 (rem num 10)))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (apply * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-4 (PLACEHOLDER-6 PLACEHOLDER-3) PLACEHOLDER-5 (count PLACEHOLDER-4)] (= (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-1] (+ PLACEHOLDER-7 (PLACEHOLDER-2 PLACEHOLDER-1 PLACEHOLDER-5))) 0 PLACEHOLDER-4) PLACEHOLDER-3)))))))