((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([num] (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (str num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-3 num) PLACEHOLDER-7 (count PLACEHOLDER-6)] (= (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-5 PLACEHOLDER-7 PLACEHOLDER-4)) PLACEHOLDER-6)) num)))))))