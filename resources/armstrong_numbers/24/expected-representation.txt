((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([num] (map (fn* [PLACEHOLDER-6] (Character/digit PLACEHOLDER-6 10)) (str num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-3 num) PLACEHOLDER-7 (count PLACEHOLDER-5)] (= (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-7 PLACEHOLDER-1)) PLACEHOLDER-5)) num)))))))