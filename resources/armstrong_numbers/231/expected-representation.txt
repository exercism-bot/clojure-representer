((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([num] (map (fn* [PLACEHOLDER-2] (Integer/parseInt PLACEHOLDER-2)) (clojure.string/split (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-3 num)] (let* [PLACEHOLDER-7 (count PLACEHOLDER-0)] (let* [PLACEHOLDER-6 (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-5 PLACEHOLDER-1 PLACEHOLDER-7)) PLACEHOLDER-0))] (= num PLACEHOLDER-6)))))))))