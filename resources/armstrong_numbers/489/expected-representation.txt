((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (require '[clojure.string :as str])
  (def
   PLACEHOLDER-4
   (fn*
    ([PLACEHOLDER-1]
     (map
      read-string
      (str/split (str PLACEHOLDER-1) (re-pattern ""))))))
  (def
   PLACEHOLDER-5
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-3]
     (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0)))))
  (def
   PLACEHOLDER-6
   (fn* ([PLACEHOLDER-1] (count (str PLACEHOLDER-1)))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-2 PLACEHOLDER-3]
     (map
      (fn*
       ([PLACEHOLDER-0] (PLACEHOLDER-5 PLACEHOLDER-0 PLACEHOLDER-3)))
      PLACEHOLDER-2))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-1]
     (=
      PLACEHOLDER-1
      (reduce
       +
       (PLACEHOLDER-7
        (PLACEHOLDER-4 PLACEHOLDER-1)
        (PLACEHOLDER-6 PLACEHOLDER-1)))))))))
