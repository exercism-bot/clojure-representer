((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4 PLACEHOLDER-10] (if (zero? PLACEHOLDER-10) 1 (if :else (* PLACEHOLDER-4 (PLACEHOLDER-6 PLACEHOLDER-4 (- PLACEHOLDER-10 1))) nil))))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-9 (str PLACEHOLDER-4) PLACEHOLDER-7 (map read-string (PLACEHOLDER-5 PLACEHOLDER-9 (re-pattern ""))) PLACEHOLDER-8 (count PLACEHOLDER-7) PLACEHOLDER-2 (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-0 PLACEHOLDER-1 PLACEHOLDER-8))) PLACEHOLDER-7) PLACEHOLDER-11 (apply + PLACEHOLDER-2) PLACEHOLDER-3 (= PLACEHOLDER-4 PLACEHOLDER-11)] PLACEHOLDER-3))))))