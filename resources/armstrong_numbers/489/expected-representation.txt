((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1 (if :else (* PLACEHOLDER-1 (PLACEHOLDER-0 PLACEHOLDER-1 (- PLACEHOLDER-1 1))) nil))))) (def armstrong? (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-4 (str PLACEHOLDER-1) PLACEHOLDER-4 (map read-string (PLACEHOLDER-4 PLACEHOLDER-4 (re-pattern ""))) PLACEHOLDER-6 (count PLACEHOLDER-4) PLACEHOLDER-7 (map (fn* ([PLACEHOLDER-7] (PLACEHOLDER-7 PLACEHOLDER-7 PLACEHOLDER-6))) PLACEHOLDER-4) PLACEHOLDER-9 (apply + PLACEHOLDER-7) PLACEHOLDER-10 (= PLACEHOLDER-1 PLACEHOLDER-9)] PLACEHOLDER-10))))))