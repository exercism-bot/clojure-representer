((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-1 (quot num 10)) (rem num 10)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (if (= PLACEHOLDER-2 0) 1 (if (= PLACEHOLDER-2 1) PLACEHOLDER-0 (if :else (* PLACEHOLDER-0 (PLACEHOLDER-4 PLACEHOLDER-0 (- PLACEHOLDER-2 1))) nil)))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-3 (PLACEHOLDER-1 num)) (= num (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-4 PLACEHOLDER-0 (count PLACEHOLDER-3)))) PLACEHOLDER-3))))))))