((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-0 (quot num 10)) (rem num 10)))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (if (= PLACEHOLDER-0 0) 1 (if (= PLACEHOLDER-0 1) PLACEHOLDER-0 (if :else (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (- PLACEHOLDER-0 1))) nil)))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-2 (PLACEHOLDER-0 num)) (= num (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 (count PLACEHOLDER-2)))) PLACEHOLDER-2))))))))