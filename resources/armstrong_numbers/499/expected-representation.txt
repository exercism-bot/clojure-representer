((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (str num) PLACEHOLDER-1 (count PLACEHOLDER-7) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-3 (Integer/parseInt (str PLACEHOLDER-5)) PLACEHOLDER-1)) PLACEHOLDER-7) PLACEHOLDER-4 (reduce + PLACEHOLDER-6)] (= num PLACEHOLDER-4)))))))