((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-0]
     "Return base-10 digits of a positive number."
     (loop*
      [PLACEHOLDER-2 PLACEHOLDER-0 PLACEHOLDER-4 nil]
      (if
       (zero? PLACEHOLDER-2)
       PLACEHOLDER-4
       (recur
        (quot PLACEHOLDER-2 10)
        (cons (rem PLACEHOLDER-2 10) PLACEHOLDER-4)))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-0]
     "Return whether num is an Armstrong number."
     (let*
      [PLACEHOLDER-3
       (PLACEHOLDER-6 PLACEHOLDER-0)
       PLACEHOLDER-1
       (count PLACEHOLDER-3)
       PLACEHOLDER-5
       (reduce
        (fn* [p1# p2#] (+ p1# (.pow (biginteger p2#) PLACEHOLDER-1)))
        0
        PLACEHOLDER-3)]
      (= PLACEHOLDER-5 PLACEHOLDER-0)))))))
