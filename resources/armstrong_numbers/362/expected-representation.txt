((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 num] (loop* [num num PLACEHOLDER-2 []] (if (zero? num) (let* [PLACEHOLDER-4 (count PLACEHOLDER-2)] (= (reduce (fn* [PLACEHOLDER-1 PLACEHOLDER-3] (+ PLACEHOLDER-1 (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-3)))) 0 PLACEHOLDER-2) PLACEHOLDER-0)) (recur (quot num 10) (conj PLACEHOLDER-2 (mod num 10)))))))))))