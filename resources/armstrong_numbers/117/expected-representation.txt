((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/import (quote PLACEHOLDER-13)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-7 PLACEHOLDER-2] (let* [PLACEHOLDER-0 (new PLACEHOLDER-14 PLACEHOLDER-7)] (. PLACEHOLDER-0 (PLACEHOLDER-8 PLACEHOLDER-2)))))) (def PLACEHOLDER-12 (fn* ([PLACEHOLDER-7] (let* [PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] (if (zero? PLACEHOLDER-1) PLACEHOLDER-6 (recur (quot PLACEHOLDER-1 10) (cons (mod PLACEHOLDER-1 10) PLACEHOLDER-6)))))] (if (zero? PLACEHOLDER-7) (quote (0)) (PLACEHOLDER-3 PLACEHOLDER-7 (quote ()))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (new PLACEHOLDER-14 num) is (PLACEHOLDER-12 num) PLACEHOLDER-15 (count is) PLACEHOLDER-11 (reduce (fn* [PLACEHOLDER-10 PLACEHOLDER-5] (+ PLACEHOLDER-10 (PLACEHOLDER-9 PLACEHOLDER-5 PLACEHOLDER-15))) 0 is)] (= PLACEHOLDER-4 PLACEHOLDER-11)))))))