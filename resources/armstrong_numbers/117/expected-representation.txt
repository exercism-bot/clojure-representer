((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/import (quote PLACEHOLDER-12)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-7 PLACEHOLDER-3] (let* [PLACEHOLDER-0 (new PLACEHOLDER-13 PLACEHOLDER-7)] (. PLACEHOLDER-0 (PLACEHOLDER-8 PLACEHOLDER-3)))))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-7] (let* [PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] (if (zero? PLACEHOLDER-1) PLACEHOLDER-6 (recur (quot PLACEHOLDER-1 10) (cons (mod PLACEHOLDER-1 10) PLACEHOLDER-6)))))] (if (zero? PLACEHOLDER-7) (quote (0)) (PLACEHOLDER-4 PLACEHOLDER-7 (quote ()))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (new PLACEHOLDER-13 num) is (PLACEHOLDER-11 num) PLACEHOLDER-14 (count is) PLACEHOLDER-10 (reduce (fn* [PLACEHOLDER-15 PLACEHOLDER-2] (+ PLACEHOLDER-15 (PLACEHOLDER-9 PLACEHOLDER-2 PLACEHOLDER-14))) 0 is)] (= PLACEHOLDER-5 PLACEHOLDER-10)))))))