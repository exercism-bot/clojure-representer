((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/import (quote PLACEHOLDER-0)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (let* [PLACEHOLDER-1 (new PLACEHOLDER-1 PLACEHOLDER-1)] (. PLACEHOLDER-1 (PLACEHOLDER-3 PLACEHOLDER-1)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-5 (fn* ([PLACEHOLDER-5 PLACEHOLDER-6] (if (zero? PLACEHOLDER-5) PLACEHOLDER-6 (recur (quot PLACEHOLDER-5 10) (cons (mod PLACEHOLDER-5 10) PLACEHOLDER-6)))))] (if (zero? PLACEHOLDER-1) (quote (0)) (PLACEHOLDER-5 PLACEHOLDER-1 (quote ()))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-9 (new PLACEHOLDER-1 num) is (PLACEHOLDER-4 num) PLACEHOLDER-10 (count is) PLACEHOLDER-11 (reduce (fn* [PLACEHOLDER-11 PLACEHOLDER-12] (+ PLACEHOLDER-11 (PLACEHOLDER-0 PLACEHOLDER-12 PLACEHOLDER-10))) 0 is)] (= PLACEHOLDER-9 PLACEHOLDER-11)))))))