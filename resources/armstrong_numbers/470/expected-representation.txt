((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (if (= PLACEHOLDER-3 0) 1 (* PLACEHOLDER-0 (PLACEHOLDER-7 PLACEHOLDER-0 (dec PLACEHOLDER-3))))))) (def PLACEHOLDER-4 (fn* ([num] (PLACEHOLDER-4 num (quote ()))) ([num PLACEHOLDER-5] (if (= num 0) PLACEHOLDER-5 (recur (long (/ num 10)) (cons (mod num 10) PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-4 num) PLACEHOLDER-6 (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-7 PLACEHOLDER-1 (count PLACEHOLDER-8)))) PLACEHOLDER-8) PLACEHOLDER-2 (reduce + PLACEHOLDER-6)] (= PLACEHOLDER-2 num)))))))