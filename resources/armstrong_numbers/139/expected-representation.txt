((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2] (PLACEHOLDER-1 PLACEHOLDER-2 ())) ([PLACEHOLDER-2 PLACEHOLDER-8] (if (< PLACEHOLDER-2 10) (conj PLACEHOLDER-8 PLACEHOLDER-2) (PLACEHOLDER-1 (bigint (/ PLACEHOLDER-2 10)) (conj PLACEHOLDER-8 (mod PLACEHOLDER-2 10))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-4 (PLACEHOLDER-1 num)) (def PLACEHOLDER-5 (count PLACEHOLDER-4)) (= num (reduce (fn* ([PLACEHOLDER-6 PLACEHOLDER-7] (+ PLACEHOLDER-6 (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-5)))) 0 PLACEHOLDER-4)))))))