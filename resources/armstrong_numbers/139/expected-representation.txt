((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 ())) ([PLACEHOLDER-0 PLACEHOLDER-1] (if (< PLACEHOLDER-0 10) (conj PLACEHOLDER-1 PLACEHOLDER-0) (PLACEHOLDER-0 (bigint (/ PLACEHOLDER-0 10)) (conj PLACEHOLDER-1 (mod PLACEHOLDER-0 10))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-4 (PLACEHOLDER-0 num)) (def PLACEHOLDER-5 (count PLACEHOLDER-4)) (= num (reduce (fn* ([PLACEHOLDER-6 PLACEHOLDER-6] (+ PLACEHOLDER-6 (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5)))) 0 PLACEHOLDER-4)))))))