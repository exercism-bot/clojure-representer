((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (clojure.core/import 'java.math.BigDecimal)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-8 PLACEHOLDER-3]
     (let*
      [PLACEHOLDER-0 (new BigDecimal PLACEHOLDER-8)]
      (. PLACEHOLDER-0 (pow PLACEHOLDER-3))))))
  (def
   PLACEHOLDER-12
   (fn*
    ([PLACEHOLDER-8]
     (let*
      [PLACEHOLDER-4
       (fn*
        ([PLACEHOLDER-1 PLACEHOLDER-7]
         (if
          (zero? PLACEHOLDER-1)
          PLACEHOLDER-7
          (recur
           (quot PLACEHOLDER-1 10)
           (cons (mod PLACEHOLDER-1 10) PLACEHOLDER-7)))))]
      (if
       (zero? PLACEHOLDER-8)
       '(0)
       (PLACEHOLDER-4 PLACEHOLDER-8 '()))))))
  (def
   PLACEHOLDER-13
   (fn*
    ([PLACEHOLDER-2]
     (let*
      [PLACEHOLDER-5
       (new BigDecimal PLACEHOLDER-2)
       PLACEHOLDER-6
       (PLACEHOLDER-12 PLACEHOLDER-2)
       PLACEHOLDER-10
       (count PLACEHOLDER-6)
       PLACEHOLDER-9
       (reduce
        (fn* [p1# p2#] (+ p1# (PLACEHOLDER-11 p2# PLACEHOLDER-10)))
        0
        PLACEHOLDER-6)]
      (= PLACEHOLDER-5 PLACEHOLDER-9)))))))
