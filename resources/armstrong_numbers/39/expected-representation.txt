((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (let* [PLACEHOLDER-9 (fn* ([PLACEHOLDER-0] (* PLACEHOLDER-0 PLACEHOLDER-0)))] (if (zero? PLACEHOLDER-2) 1 (if (even? PLACEHOLDER-2) (PLACEHOLDER-9 (PLACEHOLDER-3 PLACEHOLDER-0 (/ PLACEHOLDER-2 2))) (if :else (* PLACEHOLDER-0 (PLACEHOLDER-3 PLACEHOLDER-0 (dec PLACEHOLDER-2))) nil))))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (PLACEHOLDER-5 (PLACEHOLDER-6 PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-7 num) PLACEHOLDER-10 (count PLACEHOLDER-4) PLACEHOLDER-8 (reduce + (map (fn* [PLACEHOLDER-11] (PLACEHOLDER-3 PLACEHOLDER-11 PLACEHOLDER-10)) PLACEHOLDER-4))] (= PLACEHOLDER-8 num)))))))