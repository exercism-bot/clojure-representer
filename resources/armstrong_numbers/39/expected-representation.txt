((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (let* [PLACEHOLDER-10 (fn* ([PLACEHOLDER-0] (* PLACEHOLDER-0 PLACEHOLDER-0)))] (if (zero? PLACEHOLDER-1) 1 (if (even? PLACEHOLDER-1) (PLACEHOLDER-10 (PLACEHOLDER-2 PLACEHOLDER-0 (/ PLACEHOLDER-1 2))) (if :else (* PLACEHOLDER-0 (PLACEHOLDER-2 PLACEHOLDER-0 (dec PLACEHOLDER-1))) nil))))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-8] (Character/digit PLACEHOLDER-8 10)) (PLACEHOLDER-4 (PLACEHOLDER-5 PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-6 num) PLACEHOLDER-11 (count PLACEHOLDER-3) PLACEHOLDER-9 (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-2 PLACEHOLDER-7 PLACEHOLDER-11)) PLACEHOLDER-3))] (= PLACEHOLDER-9 num)))))))