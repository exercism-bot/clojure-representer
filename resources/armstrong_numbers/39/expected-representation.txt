((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (let* [PLACEHOLDER-10 (fn* ([PLACEHOLDER-1] (* PLACEHOLDER-1 PLACEHOLDER-1)))] (if (zero? PLACEHOLDER-3) 1 (if (even? PLACEHOLDER-3) (PLACEHOLDER-10 (PLACEHOLDER-4 PLACEHOLDER-1 (/ PLACEHOLDER-3 2))) (if :else (* PLACEHOLDER-1 (PLACEHOLDER-4 PLACEHOLDER-1 (dec PLACEHOLDER-3))) nil))))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-0] (Character/digit PLACEHOLDER-0 10)) (PLACEHOLDER-6 (PLACEHOLDER-7 PLACEHOLDER-1)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-8 num) PLACEHOLDER-11 (count PLACEHOLDER-5) PLACEHOLDER-9 (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-11)) PLACEHOLDER-5))] (= PLACEHOLDER-9 num)))))))