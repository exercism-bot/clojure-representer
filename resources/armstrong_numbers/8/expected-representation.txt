((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-0 (str num) (re-pattern "")) PLACEHOLDER-3 (count PLACEHOLDER-1)] (= (bigdec num) (reduce +' (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-2 (bigdec PLACEHOLDER-4) PLACEHOLDER-3)) PLACEHOLDER-1)))))))))