((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-2 (str num) (re-pattern "")) PLACEHOLDER-0 (count PLACEHOLDER-2)] (= (bigdec num) (reduce +' (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-0 (bigdec PLACEHOLDER-3) PLACEHOLDER-0)) PLACEHOLDER-2)))))))))