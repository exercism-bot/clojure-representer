((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-0 (str num) (re-pattern "")) PLACEHOLDER-4 (count PLACEHOLDER-2)] (= (bigdec num) (reduce +' (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 (bigdec PLACEHOLDER-1) PLACEHOLDER-4)) PLACEHOLDER-2)))))))))