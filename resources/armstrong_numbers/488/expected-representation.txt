((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-3 (mod PLACEHOLDER-4 10) rest (quot PLACEHOLDER-4 10)] (if (zero? PLACEHOLDER-4) nil (cons PLACEHOLDER-3 (PLACEHOLDER-1 rest))))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-1 num) PLACEHOLDER-2 (count PLACEHOLDER-7)] (= num (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-8 PLACEHOLDER-6 PLACEHOLDER-2)) PLACEHOLDER-7)))))))))