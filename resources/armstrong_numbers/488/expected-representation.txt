((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-1 (mod PLACEHOLDER-0 10) rest (quot PLACEHOLDER-0 10)] (if (zero? PLACEHOLDER-0) nil (cons PLACEHOLDER-1 (PLACEHOLDER-0 rest))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 num) PLACEHOLDER-6 (count PLACEHOLDER-5)] (= num (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-3 PLACEHOLDER-6 PLACEHOLDER-6)) PLACEHOLDER-5)))))))))