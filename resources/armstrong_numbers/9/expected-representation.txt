((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([val PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 (read-string (str val))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (str num) PLACEHOLDER-6 (count PLACEHOLDER-4) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-2 PLACEHOLDER-0 PLACEHOLDER-6)) (seq PLACEHOLDER-4)) PLACEHOLDER-3 (reduce + PLACEHOLDER-5)] (= PLACEHOLDER-3 num)))))))