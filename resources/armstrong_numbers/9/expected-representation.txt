((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([val PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 (read-string (str val))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (str num) PLACEHOLDER-2 (count PLACEHOLDER-1) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-0 PLACEHOLDER-3 PLACEHOLDER-2)) (seq PLACEHOLDER-1)) PLACEHOLDER-5 (reduce + PLACEHOLDER-3)] (= PLACEHOLDER-5 num)))))))