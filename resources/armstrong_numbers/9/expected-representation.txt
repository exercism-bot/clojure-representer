((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([val PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 (read-string (str val))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (str num) PLACEHOLDER-6 (count PLACEHOLDER-3) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-1 PLACEHOLDER-4 PLACEHOLDER-6)) (seq PLACEHOLDER-3)) PLACEHOLDER-2 (reduce + PLACEHOLDER-5)] (= PLACEHOLDER-2 num)))))))