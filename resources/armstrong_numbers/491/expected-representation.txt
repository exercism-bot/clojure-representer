((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (loop* [PLACEHOLDER-4 1 PLACEHOLDER-5 PLACEHOLDER-5] (if (zero? PLACEHOLDER-5) PLACEHOLDER-4 (recur (* PLACEHOLDER-0 PLACEHOLDER-4) (dec PLACEHOLDER-5))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (count (str num)) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10)) (seq (str num))) PLACEHOLDER-2 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-6 PLACEHOLDER-1 PLACEHOLDER-8)) PLACEHOLDER-7)] (= (reduce + PLACEHOLDER-2) num)))))))