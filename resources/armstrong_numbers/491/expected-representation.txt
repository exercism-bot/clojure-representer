((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (loop* [PLACEHOLDER-1 1 PLACEHOLDER-1 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) PLACEHOLDER-1 (recur (* PLACEHOLDER-0 PLACEHOLDER-1) (dec PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (count (str num)) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-4] (Character/digit PLACEHOLDER-4 10)) (seq (str num))) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-3)) PLACEHOLDER-4)] (= (reduce + PLACEHOLDER-5) num)))))))