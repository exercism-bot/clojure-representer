((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (loop* [PLACEHOLDER-2 1 PLACEHOLDER-3 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) PLACEHOLDER-2 (recur (* PLACEHOLDER-0 PLACEHOLDER-2) (dec PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (count (str num)) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-7] (Character/digit PLACEHOLDER-7 10)) (seq (str num))) PLACEHOLDER-1 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-4 PLACEHOLDER-5 PLACEHOLDER-8)) PLACEHOLDER-6)] (= (reduce + PLACEHOLDER-1) num)))))))