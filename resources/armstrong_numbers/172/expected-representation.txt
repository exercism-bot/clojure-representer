((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (bigint (if (zero? PLACEHOLDER-0) 1 (PLACEHOLDER-8 PLACEHOLDER-0 PLACEHOLDER-1)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (str num) PLACEHOLDER-7 (count PLACEHOLDER-3) PLACEHOLDER-6 (map (comp read-string str) PLACEHOLDER-3)] (let* [PLACEHOLDER-2 (zero? num)] (if PLACEHOLDER-2 PLACEHOLDER-2 (= num (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-4 PLACEHOLDER-5 PLACEHOLDER-7)) PLACEHOLDER-6)))))))))))