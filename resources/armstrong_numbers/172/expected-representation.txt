((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (bigint (if (zero? PLACEHOLDER-0) 1 (PLACEHOLDER-1 PLACEHOLDER-0 PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (str num) PLACEHOLDER-3 (count PLACEHOLDER-3) PLACEHOLDER-4 (map (comp read-string str) PLACEHOLDER-3)] (let* [PLACEHOLDER-4 (zero? num)] (if PLACEHOLDER-4 PLACEHOLDER-4 (= num (apply + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-3)) PLACEHOLDER-4)))))))))))