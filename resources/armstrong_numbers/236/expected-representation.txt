((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-2] (count (str PLACEHOLDER-2))))) (def PLACEHOLDER-13 (fn* ([PLACEHOLDER-2 PLACEHOLDER-5] (reduce (fn* ([PLACEHOLDER-3 PLACEHOLDER-4] (PLACEHOLDER-11 PLACEHOLDER-3 PLACEHOLDER-4))) (PLACEHOLDER-0) (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-14 (PLACEHOLDER-8 (PLACEHOLDER-10 (PLACEHOLDER-12 PLACEHOLDER-6))) PLACEHOLDER-5)) (clojure.string/split (str PLACEHOLDER-2) (re-pattern ""))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-8 num) PLACEHOLDER-5 (PLACEHOLDER-9 num) PLACEHOLDER-1 (PLACEHOLDER-13 PLACEHOLDER-2 PLACEHOLDER-5)] (PLACEHOLDER-7 PLACEHOLDER-2 PLACEHOLDER-1)))))))