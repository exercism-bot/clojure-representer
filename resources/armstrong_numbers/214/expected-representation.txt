((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-5] (loop* [PLACEHOLDER-2 PLACEHOLDER-5 PLACEHOLDER-4 []] (if (zero? PLACEHOLDER-2) PLACEHOLDER-4 (recur (quot PLACEHOLDER-2 10) (conj PLACEHOLDER-4 (mod PLACEHOLDER-2 10)))))))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-8 (PLACEHOLDER-3 num)] (apply + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-7 PLACEHOLDER-1 (count PLACEHOLDER-8))) PLACEHOLDER-8)))))))))