((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (clojure.core/require '[clojure.math :as ma])
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-7
   (fn* ([PLACEHOLDER-3] (int (inc (ma/log10 PLACEHOLDER-3))))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-3 PLACEHOLDER-4]
     (loop*
      [PLACEHOLDER-2
       (bigint PLACEHOLDER-3)
       PLACEHOLDER-4
       PLACEHOLDER-4
       PLACEHOLDER-0
       1]
      (if
       (<= PLACEHOLDER-4 0)
       PLACEHOLDER-0
       (recur
        PLACEHOLDER-2
        (dec PLACEHOLDER-4)
        (* PLACEHOLDER-0 PLACEHOLDER-2)))))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-3 PLACEHOLDER-6]
     (loop*
      [PLACEHOLDER-2
       (bigint PLACEHOLDER-3)
       PLACEHOLDER-4
       PLACEHOLDER-6
       PLACEHOLDER-5
       (bigint 0)]
      (if
       (<= PLACEHOLDER-2 0)
       PLACEHOLDER-5
       (recur
        (bigint (/ PLACEHOLDER-2 10))
        PLACEHOLDER-4
        (+
         PLACEHOLDER-5
         (PLACEHOLDER-8 (mod PLACEHOLDER-2 10) PLACEHOLDER-4))))))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-1]
     (if
      (< PLACEHOLDER-1 10)
      true
      (=
       PLACEHOLDER-1
       (PLACEHOLDER-9
        PLACEHOLDER-1
        (PLACEHOLDER-7 PLACEHOLDER-1)))))))))
