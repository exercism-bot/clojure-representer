(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (quot (mod PLACEHOLDER-0 (PLACEHOLDER-6 10 (+ PLACEHOLDER-2 1))) (PLACEHOLDER-6 10 PLACEHOLDER-2))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-4 (count (str PLACEHOLDER-0))] (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-7 PLACEHOLDER-0 PLACEHOLDER-5)) (take PLACEHOLDER-4 (range))))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-2 (count (str PLACEHOLDER-1))] (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-6 PLACEHOLDER-3 PLACEHOLDER-2)) (PLACEHOLDER-8 PLACEHOLDER-1))))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-1] (= PLACEHOLDER-1 (PLACEHOLDER-9 PLACEHOLDER-1))))))))