((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (- (int PLACEHOLDER-0) 48)))) (def PLACEHOLDER-1 (fn* ([num] (map PLACEHOLDER-0 (str num))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (fn* ([num] (reduce * (repeat PLACEHOLDER-3 num))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (count (str num))] (= num (reduce + (map (PLACEHOLDER-2 PLACEHOLDER-4) (PLACEHOLDER-1 num))))))))))