((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (map (comp read-string str) (str PLACEHOLDER-3))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-5 (PLACEHOLDER-5 PLACEHOLDER-3) count (count PLACEHOLDER-5)] (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1 count))) PLACEHOLDER-5))))) (def armstrong? (fn* ([PLACEHOLDER-3] (= PLACEHOLDER-3 (reduce + (PLACEHOLDER-2 PLACEHOLDER-3))))))))