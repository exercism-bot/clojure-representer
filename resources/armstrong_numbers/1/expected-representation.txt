((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str :refer [PLACEHOLDER-7]])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-4] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (PLACEHOLDER-7 (str PLACEHOLDER-4) (re-pattern "")))))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 PLACEHOLDER-4) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-5 PLACEHOLDER-0 (count PLACEHOLDER-6))) PLACEHOLDER-6) PLACEHOLDER-6 (reduce + PLACEHOLDER-6)] (= PLACEHOLDER-6 PLACEHOLDER-4)))))))