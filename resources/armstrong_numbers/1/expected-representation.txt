((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str :refer [PLACEHOLDER-0]])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-1))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (PLACEHOLDER-0 (str PLACEHOLDER-1) (re-pattern "")))))) (def armstrong? (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-4 (PLACEHOLDER-3 PLACEHOLDER-1) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 (count PLACEHOLDER-4))) PLACEHOLDER-4) PLACEHOLDER-4 (reduce + PLACEHOLDER-4)] (= PLACEHOLDER-4 PLACEHOLDER-1)))))))