((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2] (* 10 (- (/ PLACEHOLDER-2 10) (bigint (/ PLACEHOLDER-2 10))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2 & PLACEHOLDER-3] (if (< PLACEHOLDER-2 1) (reduce + (map (fn* ([PLACEHOLDER-3] (PLACEHOLDER-0 PLACEHOLDER-3 PLACEHOLDER-2))) PLACEHOLDER-3)) (apply PLACEHOLDER-2 (bigint (/ PLACEHOLDER-2 10)) (+ PLACEHOLDER-2 1) (PLACEHOLDER-2 PLACEHOLDER-2) PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 (bigint (/ num 10)) 1 (PLACEHOLDER-2 num))))))))