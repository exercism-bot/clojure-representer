((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([num] (PLACEHOLDER-9 (str num))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-0] (Integer/parseInt (str PLACEHOLDER-0))) PLACEHOLDER-1)))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-5 PLACEHOLDER-2] (if (= PLACEHOLDER-5 0) 0 (if (= PLACEHOLDER-2 1) PLACEHOLDER-5 (if (= PLACEHOLDER-2 0) 1 (apply * (repeat PLACEHOLDER-2 PLACEHOLDER-5)))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-4 num) PLACEHOLDER-7 (PLACEHOLDER-3 (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-6 PLACEHOLDER-8 PLACEHOLDER-5)) PLACEHOLDER-7)))))))))