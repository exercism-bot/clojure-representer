((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (PLACEHOLDER-0 (str num))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-1] (Integer/parseInt (str PLACEHOLDER-1))) PLACEHOLDER-1)))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-3] (if (= PLACEHOLDER-3 0) 0 (if (= PLACEHOLDER-3 1) PLACEHOLDER-3 (if (= PLACEHOLDER-3 0) 1 (apply * (repeat PLACEHOLDER-3 PLACEHOLDER-3)))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num) PLACEHOLDER-6 (PLACEHOLDER-1 (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-2 PLACEHOLDER-7 PLACEHOLDER-3)) PLACEHOLDER-6)))))))))