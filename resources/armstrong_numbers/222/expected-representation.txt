((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (PLACEHOLDER-8 (str num))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-7] (Integer/parseInt (str PLACEHOLDER-7))) PLACEHOLDER-0)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-4 PLACEHOLDER-1] (if (= PLACEHOLDER-4 0) 0 (if (= PLACEHOLDER-1 1) PLACEHOLDER-4 (if (= PLACEHOLDER-1 0) 1 (apply * (repeat PLACEHOLDER-1 PLACEHOLDER-4)))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-3 num) PLACEHOLDER-6 (PLACEHOLDER-2 (str num))] (= num (reduce + (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-5 PLACEHOLDER-9 PLACEHOLDER-4)) PLACEHOLDER-6)))))))))