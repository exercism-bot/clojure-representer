(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-7] (Integer/parseInt PLACEHOLDER-7)) (clojure.string/split (str PLACEHOLDER-2) (re-pattern "")))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-6] (let* [PLACEHOLDER-3 (count PLACEHOLDER-6)] (reduce (fn* ([PLACEHOLDER-4 PLACEHOLDER-1] (+ (PLACEHOLDER-8 PLACEHOLDER-1 PLACEHOLDER-3) PLACEHOLDER-4))) 0 PLACEHOLDER-6))))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-6 (PLACEHOLDER-9 PLACEHOLDER-2)] (= (PLACEHOLDER-10 PLACEHOLDER-6) PLACEHOLDER-2))))))))