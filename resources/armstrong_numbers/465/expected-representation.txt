((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (map (fn* [PLACEHOLDER-7] (read-string (str PLACEHOLDER-7))) (str num))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * 1 (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-2 num) PLACEHOLDER-5 (count PLACEHOLDER-1)] (= (apply + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-4 PLACEHOLDER-3 PLACEHOLDER-5)) PLACEHOLDER-1)) num)))))))