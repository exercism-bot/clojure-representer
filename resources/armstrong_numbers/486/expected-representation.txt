((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([str] (map (fn* [PLACEHOLDER-6] (- (int PLACEHOLDER-6) (int \0))) (seq str))))) (def armstrong? (fn* ([num] (let* [str (print-str num) PLACEHOLDER-4 (count str)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-2 PLACEHOLDER-5 PLACEHOLDER-4)) (PLACEHOLDER-3 str))))))))))