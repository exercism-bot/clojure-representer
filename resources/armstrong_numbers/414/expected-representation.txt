((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0] (if (>= PLACEHOLDER-0 10) (conj (PLACEHOLDER-5 (quot PLACEHOLDER-0 10)) (long (rem PLACEHOLDER-0 10))) (if :else [PLACEHOLDER-0] nil))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4] (fn* [PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-2)))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-5] (reduce + (map (PLACEHOLDER-3 (count PLACEHOLDER-5)) PLACEHOLDER-5))))) (def armstrong? (fn* ([num] (= (long num) (PLACEHOLDER-1 (PLACEHOLDER-5 num))))))))