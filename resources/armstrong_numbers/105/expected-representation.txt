((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-4
   (fn*
    ([PLACEHOLDER-1]
     (int (Math/floor (inc (Math/log10 PLACEHOLDER-1)))))))
  (def
   PLACEHOLDER-5
   (fn*
    ([PLACEHOLDER-2 PLACEHOLDER-3]
     (reduce
      +
      (map
       (fn* [p1#] (.pow p1# PLACEHOLDER-2))
       (map
        biginteger
        (map (fn* [p1#] (rem p1# 10)) PLACEHOLDER-3)))))))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-1]
     (if
      (zero? PLACEHOLDER-1)
      0
      (let*
       [PLACEHOLDER-2 (PLACEHOLDER-4 PLACEHOLDER-1)]
       (PLACEHOLDER-5
        PLACEHOLDER-2
        (take-while
         pos?
         (iterate (fn* [p1#] (quot p1# 10)) PLACEHOLDER-1))))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-1]
     (= (PLACEHOLDER-6 PLACEHOLDER-1) PLACEHOLDER-1))))))
