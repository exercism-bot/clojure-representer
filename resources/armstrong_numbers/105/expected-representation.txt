((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0] (if (= PLACEHOLDER-0 \0) 0 (if (= PLACEHOLDER-0 \1) 1 (if (= PLACEHOLDER-0 \2) 2 (if (= PLACEHOLDER-0 \3) 3 (if (= PLACEHOLDER-0 \4) 4 (if (= PLACEHOLDER-0 \5) 5 (if (= PLACEHOLDER-0 \6) 6 (if (= PLACEHOLDER-0 \7) 7 (if (= PLACEHOLDER-0 \8) 8 (if (= PLACEHOLDER-0 \9) 9 nil))))))))))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-3 PLACEHOLDER-5 (count (str num)))) (map PLACEHOLDER-2 (str num))))))))))