((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-2))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1] (if (= PLACEHOLDER-1 \0) 0 (if (= PLACEHOLDER-1 \1) 1 (if (= PLACEHOLDER-1 \2) 2 (if (= PLACEHOLDER-1 \3) 3 (if (= PLACEHOLDER-1 \4) 4 (if (= PLACEHOLDER-1 \5) 5 (if (= PLACEHOLDER-1 \6) 6 (if (= PLACEHOLDER-1 \7) 7 (if (= PLACEHOLDER-1 \8) 8 (if (= PLACEHOLDER-1 \9) 9 nil))))))))))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-4 PLACEHOLDER-0 (count (str num)))) (map PLACEHOLDER-3 (str num))))))))))