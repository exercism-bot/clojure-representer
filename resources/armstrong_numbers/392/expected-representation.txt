((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (loop* [PLACEHOLDER-4 num PLACEHOLDER-6 1 PLACEHOLDER-0 0] (if (= PLACEHOLDER-6 0) PLACEHOLDER-0 (recur (/ PLACEHOLDER-4 10) (- PLACEHOLDER-6 1) (+ PLACEHOLDER-0 (PLACEHOLDER-7 (mod PLACEHOLDER-4 10) PLACEHOLDER-6)))))))) (def PLACEHOLDER-5 (fn* ([num] (loop* [PLACEHOLDER-3 num PLACEHOLDER-0 1] (if (= PLACEHOLDER-3 1) PLACEHOLDER-0 (recur (- PLACEHOLDER-3 1) (* PLACEHOLDER-0 PLACEHOLDER-3))))))) (def PLACEHOLDER-2 (fn* ([& PLACEHOLDER-1] (println (armstrong? 5)))))))