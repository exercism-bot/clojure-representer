((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (loop* [PLACEHOLDER-0 num PLACEHOLDER-0 1 PLACEHOLDER-0 0] (if (= PLACEHOLDER-0 0) PLACEHOLDER-0 (recur (/ PLACEHOLDER-0 10) (- PLACEHOLDER-0 1) (+ PLACEHOLDER-0 (PLACEHOLDER-3 (mod PLACEHOLDER-0 10) PLACEHOLDER-0)))))))) (def PLACEHOLDER-3 (fn* ([num] (loop* [PLACEHOLDER-4 num PLACEHOLDER-0 1] (if (= PLACEHOLDER-4 1) PLACEHOLDER-0 (recur (- PLACEHOLDER-4 1) (* PLACEHOLDER-0 PLACEHOLDER-4))))))) (def PLACEHOLDER-6 (fn* ([& PLACEHOLDER-7] (println (armstrong? 5)))))))