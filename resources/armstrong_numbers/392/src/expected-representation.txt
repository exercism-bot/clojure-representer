(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-10
  (fn*
   ([PLACEHOLDER-1 PLACEHOLDER-2]
    (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-1)))))
 (def
  PLACEHOLDER-11
  (fn*
   ([PLACEHOLDER-3]
    (map
     (fn*
      ([PLACEHOLDER-4] (java.lang.Character/digit PLACEHOLDER-4 10)))
     (seq PLACEHOLDER-3)))))
 (def
  PLACEHOLDER-12
  (fn*
   ([PLACEHOLDER-5 PLACEHOLDER-6]
    (map
     (fn*
      ([PLACEHOLDER-7] (PLACEHOLDER-10 PLACEHOLDER-7 PLACEHOLDER-5)))
     PLACEHOLDER-6))))
 (def
  PLACEHOLDER-13
  (fn*
   ([PLACEHOLDER-8]
    (let*
     [PLACEHOLDER-9 (str PLACEHOLDER-8)]
     (clojure.lang.Util/equiv
      PLACEHOLDER-8
      (reduce
       +
       (PLACEHOLDER-12
        (clojure.lang.RT/count PLACEHOLDER-9)
        (PLACEHOLDER-11 PLACEHOLDER-9)))))))))
