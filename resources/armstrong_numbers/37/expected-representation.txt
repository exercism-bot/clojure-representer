((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 (str num) (re-pattern "")) PLACEHOLDER-0 (count PLACEHOLDER-6)] (reduce (fn* ([PLACEHOLDER-4 val] (+ PLACEHOLDER-4 (PLACEHOLDER-5 (Integer/parseInt val) PLACEHOLDER-0)))) 0 PLACEHOLDER-6))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (float (PLACEHOLDER-1 num))] (if (= PLACEHOLDER-3 (float num)) true false)))))))