((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-1 (str num) (re-pattern "")) PLACEHOLDER-1 (count PLACEHOLDER-0)] (reduce (fn* ([PLACEHOLDER-3 val] (+ PLACEHOLDER-3 (PLACEHOLDER-4 (Integer/parseInt val) PLACEHOLDER-1)))) 0 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (float (PLACEHOLDER-0 num))] (if (= PLACEHOLDER-6 (float num)) true false)))))))