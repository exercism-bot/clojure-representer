((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (comp read-string str) (str num))))) (def PLACEHOLDER-0 (fn* ([num PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-0 num) PLACEHOLDER-3 (count PLACEHOLDER-2) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-3)) PLACEHOLDER-2) PLACEHOLDER-6 (reduce + 0 PLACEHOLDER-4)] (= PLACEHOLDER-6 num)))))))