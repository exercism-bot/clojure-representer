((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (map (comp read-string str) (str num))))) (def PLACEHOLDER-3 (fn* ([num PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-1 num) PLACEHOLDER-4 (count PLACEHOLDER-5) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-3 PLACEHOLDER-0 PLACEHOLDER-4)) PLACEHOLDER-5) PLACEHOLDER-6 (reduce + 0 PLACEHOLDER-7)] (= PLACEHOLDER-6 num)))))))