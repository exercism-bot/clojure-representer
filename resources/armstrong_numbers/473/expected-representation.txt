((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-2 (quot num 10)) (rem num 10)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-2 num) PLACEHOLDER-1 (count PLACEHOLDER-5)] (== (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-4 PLACEHOLDER-6 PLACEHOLDER-1)) PLACEHOLDER-5)) num)))))))