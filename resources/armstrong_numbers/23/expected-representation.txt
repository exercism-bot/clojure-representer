((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1 (* PLACEHOLDER-0 (PLACEHOLDER-4 PLACEHOLDER-0 (dec PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-2 (str num) (re-pattern "")) PLACEHOLDER-7 (count PLACEHOLDER-5)] (= num (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 (PLACEHOLDER-6 PLACEHOLDER-1) PLACEHOLDER-7)) PLACEHOLDER-5)))))))))