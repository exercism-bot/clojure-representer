((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) 1 (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (dec PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-4 (str num) (re-pattern "")) PLACEHOLDER-4 (count PLACEHOLDER-3)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 (PLACEHOLDER-5 PLACEHOLDER-5) PLACEHOLDER-4)) PLACEHOLDER-3)))))))))