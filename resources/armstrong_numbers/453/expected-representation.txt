((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (loop* [PLACEHOLDER-1 1 PLACEHOLDER-2 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) PLACEHOLDER-1 (recur (* PLACEHOLDER-0 PLACEHOLDER-1) (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (str num) PLACEHOLDER-4 (PLACEHOLDER-6 PLACEHOLDER-7)] (loop* [PLACEHOLDER-5 0 PLACEHOLDER-8 0] (if (= PLACEHOLDER-5 PLACEHOLDER-4) (= PLACEHOLDER-8 num) (recur (inc PLACEHOLDER-5) (+ PLACEHOLDER-8 (PLACEHOLDER-3 (Character/digit (get PLACEHOLDER-7 PLACEHOLDER-5) 10) PLACEHOLDER-4)))))))))))