((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/use (quote [clojure.math :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1] (map (comp read-string str) (str PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 num PLACEHOLDER-1 (PLACEHOLDER-2 PLACEHOLDER-1) PLACEHOLDER-1 (reduce (fn* [PLACEHOLDER-4 PLACEHOLDER-3] (+ PLACEHOLDER-4 (apply * (repeat (count PLACEHOLDER-1) PLACEHOLDER-3)))) 0 PLACEHOLDER-1) PLACEHOLDER-1 (bigint PLACEHOLDER-1)] (= num PLACEHOLDER-1)))))))