((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (clojure.core/require '[clojure.math])
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-2 PLACEHOLDER-7]
     (reduce
      (fn*
       ([PLACEHOLDER-1 PLACEHOLDER-4]
        (*' PLACEHOLDER-1 PLACEHOLDER-2)))
      1N
      (range PLACEHOLDER-7)))))
  (def
   PLACEHOLDER-9
   (fn* ([PLACEHOLDER-5] (int (clojure.math/log10 PLACEHOLDER-5)))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-5]
     (let*
      [or__auto__ (zero? PLACEHOLDER-5)]
      (if
       or__auto__
       or__auto__
       (let*
        [PLACEHOLDER-0
         (bigint PLACEHOLDER-5)
         PLACEHOLDER-3
         (inc (PLACEHOLDER-9 PLACEHOLDER-5))]
        (loop*
         [PLACEHOLDER-6 PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-0]
         (if
          (zero? PLACEHOLDER-5)
          (zero? PLACEHOLDER-6)
          (recur
           (-'
            PLACEHOLDER-6
            (PLACEHOLDER-8 (rem PLACEHOLDER-5 10) PLACEHOLDER-3))
           (quot PLACEHOLDER-5 10))))))))))))
