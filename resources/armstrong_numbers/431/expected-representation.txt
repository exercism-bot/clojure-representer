((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/use (quote [clojure.math :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-3] (map (comp read-string str) (str PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 num PLACEHOLDER-3 (PLACEHOLDER-4 PLACEHOLDER-3) PLACEHOLDER-3 (reduce (fn* [PLACEHOLDER-2 PLACEHOLDER-1] (+ PLACEHOLDER-2 (apply * (repeat (count PLACEHOLDER-3) PLACEHOLDER-1)))) 0 PLACEHOLDER-3) PLACEHOLDER-3 (bigint PLACEHOLDER-3)] (= num PLACEHOLDER-3)))))))