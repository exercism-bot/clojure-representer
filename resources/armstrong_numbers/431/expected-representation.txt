((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/use (quote [clojure.math :as PLACEHOLDER-1])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-2] (map (comp read-string str) (str PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 num PLACEHOLDER-2 (PLACEHOLDER-3 PLACEHOLDER-2) PLACEHOLDER-2 (reduce (fn* [PLACEHOLDER-0 PLACEHOLDER-4] (+ PLACEHOLDER-0 (apply * (repeat (count PLACEHOLDER-2) PLACEHOLDER-4)))) 0 PLACEHOLDER-2) PLACEHOLDER-2 (bigint PLACEHOLDER-2)] (= num PLACEHOLDER-2)))))))