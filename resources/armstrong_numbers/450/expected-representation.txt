((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (/ (- num (mod num 10)) 10)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (loop* [PLACEHOLDER-3 1 PLACEHOLDER-4 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) PLACEHOLDER-3 (recur (* PLACEHOLDER-0 PLACEHOLDER-3) (dec PLACEHOLDER-4))))))) (def PLACEHOLDER-6 (fn* ([num PLACEHOLDER-8] (if (< num 10) (long (PLACEHOLDER-5 num PLACEHOLDER-8)) (long (+ (PLACEHOLDER-5 (mod num 10) PLACEHOLDER-8) (PLACEHOLDER-6 (PLACEHOLDER-2 num) PLACEHOLDER-8))))))) (def PLACEHOLDER-7 (fn* ([num] (if (= 0 num) (int 1) (int (+ 1 (PLACEHOLDER-1 num))))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-6 num (PLACEHOLDER-7 num))))))))