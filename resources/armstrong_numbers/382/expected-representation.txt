((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-1 (quot num 10)) (rem num 10)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-1 num) PLACEHOLDER-3 (count PLACEHOLDER-1)] (= (bigdec num) (reduce (fn* [PLACEHOLDER-0 PLACEHOLDER-2] (+ (PLACEHOLDER-4 (bigdec PLACEHOLDER-2) PLACEHOLDER-3) PLACEHOLDER-0)) 0.0M PLACEHOLDER-1))))))))