((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-5 (quot num 10)) (mod num 10)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-5 num) PLACEHOLDER-3 (count PLACEHOLDER-2) PLACEHOLDER-6 (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-3))] (= num (reduce + (map PLACEHOLDER-6 PLACEHOLDER-2)))))))))