((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-6] (- (int PLACEHOLDER-6) (int \0))))) (def PLACEHOLDER-0 (fn* ([num] (let* [PLACEHOLDER-7 (str num) PLACEHOLDER-8 (count PLACEHOLDER-7)] (reduce + 0 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-4 (PLACEHOLDER-2 PLACEHOLDER-3) PLACEHOLDER-8)) PLACEHOLDER-7)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-0 num)))))))