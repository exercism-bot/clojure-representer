((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (- (int PLACEHOLDER-3) (int \0))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-4 (str num) PLACEHOLDER-5 (count PLACEHOLDER-4)] (reduce + 0 (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-0 (PLACEHOLDER-2 PLACEHOLDER-6) PLACEHOLDER-5)) PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-4 num)))))))