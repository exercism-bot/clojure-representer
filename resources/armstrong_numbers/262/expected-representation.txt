((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4] (if (< PLACEHOLDER-4 10) [PLACEHOLDER-4] (conj (PLACEHOLDER-3 (quot PLACEHOLDER-4 10)) (rem PLACEHOLDER-4 10)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1 (* PLACEHOLDER-0 (PLACEHOLDER-2 PLACEHOLDER-0 (dec PLACEHOLDER-1))))))) nil (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-5 (PLACEHOLDER-3 PLACEHOLDER-4) PLACEHOLDER-9 (count PLACEHOLDER-5) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-9)) PLACEHOLDER-5) PLACEHOLDER-8 (apply + PLACEHOLDER-7)] (= PLACEHOLDER-4 PLACEHOLDER-8)))))))