((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-5] (if (< PLACEHOLDER-5 10) [PLACEHOLDER-5] (conj (PLACEHOLDER-4 (quot PLACEHOLDER-5 10)) (rem PLACEHOLDER-5 10)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) 1 (* PLACEHOLDER-0 (PLACEHOLDER-3 PLACEHOLDER-0 (dec PLACEHOLDER-2))))))) nil (def armstrong? (fn* ([PLACEHOLDER-5] (let* [PLACEHOLDER-6 (PLACEHOLDER-4 PLACEHOLDER-5) PLACEHOLDER-9 (count PLACEHOLDER-6) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-9)) PLACEHOLDER-6) PLACEHOLDER-8 (apply + PLACEHOLDER-7)] (= PLACEHOLDER-5 PLACEHOLDER-8)))))))