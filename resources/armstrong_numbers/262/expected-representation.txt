((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (< PLACEHOLDER-0 10) [PLACEHOLDER-0] (conj (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)) (rem PLACEHOLDER-0 10)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1 (* PLACEHOLDER-2 (PLACEHOLDER-2 PLACEHOLDER-2 (dec PLACEHOLDER-3))))))) nil (def armstrong? (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 PLACEHOLDER-0) PLACEHOLDER-5 (count PLACEHOLDER-5) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5)) PLACEHOLDER-5) PLACEHOLDER-8 (apply + PLACEHOLDER-5)] (= PLACEHOLDER-0 PLACEHOLDER-8)))))))