((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-5] (if (zero? PLACEHOLDER-5) 1 (inc (long (PLACEHOLDER-0 PLACEHOLDER-5))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-5] [(mod PLACEHOLDER-5 10) (quot PLACEHOLDER-5 10)]))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-5] (map first (take (PLACEHOLDER-8 PLACEHOLDER-5) (iterate (fn* [PLACEHOLDER-11] (PLACEHOLDER-3 (second PLACEHOLDER-11))) (PLACEHOLDER-3 PLACEHOLDER-5))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-7 PLACEHOLDER-5] (apply +' (map (fn* [PLACEHOLDER-1] (long (PLACEHOLDER-10 PLACEHOLDER-1 PLACEHOLDER-5))) PLACEHOLDER-7))))) (def armstrong? (fn* ([PLACEHOLDER-5] (= PLACEHOLDER-5 (PLACEHOLDER-4 (PLACEHOLDER-2 PLACEHOLDER-5) (PLACEHOLDER-8 PLACEHOLDER-5)))))) (let* [PLACEHOLDER-5 21897142587612075 PLACEHOLDER-12 (PLACEHOLDER-8 PLACEHOLDER-5)] (= PLACEHOLDER-5 (apply + (map long [(PLACEHOLDER-10 5 17) (PLACEHOLDER-10 7 17) (PLACEHOLDER-10 0 17) (PLACEHOLDER-10 2 17) (PLACEHOLDER-10 1 17) (PLACEHOLDER-10 6 17) (PLACEHOLDER-10 7 17) (PLACEHOLDER-10 8 17) (PLACEHOLDER-10 5 17) (PLACEHOLDER-10 2 17) (PLACEHOLDER-10 4 17) (PLACEHOLDER-10 1 17) (PLACEHOLDER-10 7 17) (PLACEHOLDER-10 9 17) (PLACEHOLDER-10 8 17) (PLACEHOLDER-10 1 17) (PLACEHOLDER-10 2 17)])) (apply + (map (fn* [PLACEHOLDER-9] (long (PLACEHOLDER-10 PLACEHOLDER-9 PLACEHOLDER-12))) (PLACEHOLDER-2 PLACEHOLDER-5))))) (- PLACEHOLDER-6 (long (PLACEHOLDER-10 9 17)))))