((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) 1 (inc (long (PLACEHOLDER-2 PLACEHOLDER-0))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0] [(mod PLACEHOLDER-0 10) (quot PLACEHOLDER-0 10)]))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0] (map first (take (PLACEHOLDER-0 PLACEHOLDER-0) (iterate (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 (second PLACEHOLDER-6))) (PLACEHOLDER-2 PLACEHOLDER-0))))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-7 PLACEHOLDER-0] (apply +' (map (fn* [PLACEHOLDER-7] (long (PLACEHOLDER-7 PLACEHOLDER-7 PLACEHOLDER-0))) PLACEHOLDER-7))))) (def armstrong? (fn* ([PLACEHOLDER-0] (= PLACEHOLDER-0 (PLACEHOLDER-7 (PLACEHOLDER-4 PLACEHOLDER-0) (PLACEHOLDER-0 PLACEHOLDER-0)))))) (let* [PLACEHOLDER-0 21897142587612075 PLACEHOLDER-8 (PLACEHOLDER-0 PLACEHOLDER-0)] (= PLACEHOLDER-0 (apply + (map long [(PLACEHOLDER-7 5 17) (PLACEHOLDER-7 7 17) (PLACEHOLDER-7 0 17) (PLACEHOLDER-7 2 17) (PLACEHOLDER-7 1 17) (PLACEHOLDER-7 6 17) (PLACEHOLDER-7 7 17) (PLACEHOLDER-7 8 17) (PLACEHOLDER-7 5 17) (PLACEHOLDER-7 2 17) (PLACEHOLDER-7 4 17) (PLACEHOLDER-7 1 17) (PLACEHOLDER-7 7 17) (PLACEHOLDER-7 9 17) (PLACEHOLDER-7 8 17) (PLACEHOLDER-7 1 17) (PLACEHOLDER-7 2 17)])) (apply + (map (fn* [PLACEHOLDER-11] (long (PLACEHOLDER-7 PLACEHOLDER-11 PLACEHOLDER-8))) (PLACEHOLDER-4 PLACEHOLDER-0))))) (- PLACEHOLDER-12 (long (PLACEHOLDER-7 9 17)))))