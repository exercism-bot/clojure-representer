((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-7] (if (zero? PLACEHOLDER-7) 1 (inc (long (PLACEHOLDER-1 PLACEHOLDER-7))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-7] [(mod PLACEHOLDER-7 10) (quot PLACEHOLDER-7 10)]))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-7] (map first (take (PLACEHOLDER-10 PLACEHOLDER-7) (iterate (fn* [PLACEHOLDER-0] (PLACEHOLDER-3 (second PLACEHOLDER-0))) (PLACEHOLDER-3 PLACEHOLDER-7))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-9 PLACEHOLDER-7] (apply +' (map (fn* [PLACEHOLDER-6] (long (PLACEHOLDER-11 PLACEHOLDER-6 PLACEHOLDER-7))) PLACEHOLDER-9))))) (def armstrong? (fn* ([PLACEHOLDER-7] (= PLACEHOLDER-7 (PLACEHOLDER-4 (PLACEHOLDER-2 PLACEHOLDER-7) (PLACEHOLDER-10 PLACEHOLDER-7)))))) (let* [PLACEHOLDER-7 21897142587612075 PLACEHOLDER-12 (PLACEHOLDER-10 PLACEHOLDER-7)] (= PLACEHOLDER-7 (apply + (map long [(PLACEHOLDER-11 5 17) (PLACEHOLDER-11 7 17) (PLACEHOLDER-11 0 17) (PLACEHOLDER-11 2 17) (PLACEHOLDER-11 1 17) (PLACEHOLDER-11 6 17) (PLACEHOLDER-11 7 17) (PLACEHOLDER-11 8 17) (PLACEHOLDER-11 5 17) (PLACEHOLDER-11 2 17) (PLACEHOLDER-11 4 17) (PLACEHOLDER-11 1 17) (PLACEHOLDER-11 7 17) (PLACEHOLDER-11 9 17) (PLACEHOLDER-11 8 17) (PLACEHOLDER-11 1 17) (PLACEHOLDER-11 2 17)])) (apply + (map (fn* [PLACEHOLDER-5] (long (PLACEHOLDER-11 PLACEHOLDER-5 PLACEHOLDER-12))) (PLACEHOLDER-2 PLACEHOLDER-7))))) (- PLACEHOLDER-8 (long (PLACEHOLDER-11 9 17)))))