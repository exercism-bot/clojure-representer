((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 num] (if (= 0 num) PLACEHOLDER-1 (PLACEHOLDER-0 (conj PLACEHOLDER-1 (mod num 10)) (quot num 10)))))) (PLACEHOLDER-0 [] num)))) (def armstrong? (fn* ([num] (def PLACEHOLDER-1 (PLACEHOLDER-0 num)) (= num (bigint (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-3 (bigdec PLACEHOLDER-3) (count PLACEHOLDER-1))) PLACEHOLDER-1)))))))))