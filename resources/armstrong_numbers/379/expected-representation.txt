((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3 num] (if (= 0 num) PLACEHOLDER-3 (PLACEHOLDER-1 (conj PLACEHOLDER-3 (mod num 10)) (quot num 10)))))) (PLACEHOLDER-1 [] num)))) (def armstrong? (fn* ([num] (def PLACEHOLDER-3 (PLACEHOLDER-2 num)) (= num (bigint (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-4 (bigdec PLACEHOLDER-0) (count PLACEHOLDER-3))) PLACEHOLDER-3)))))))))