((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (< PLACEHOLDER-0 10) [PLACEHOLDER-0] (conj (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)) (rem PLACEHOLDER-0 10)))))) (def PLACEHOLDER-1 (fn* ([num PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 num))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-2 (PLACEHOLDER-0 num)) (= num (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-1 PLACEHOLDER-3 (count PLACEHOLDER-2))) PLACEHOLDER-2))))))))