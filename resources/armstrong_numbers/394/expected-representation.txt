((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4] (if (< PLACEHOLDER-4 10) [PLACEHOLDER-4] (conj (PLACEHOLDER-3 (quot PLACEHOLDER-4 10)) (rem PLACEHOLDER-4 10)))))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-6 (PLACEHOLDER-3 PLACEHOLDER-4)] (= PLACEHOLDER-4 (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-2 PLACEHOLDER-1 (count (str PLACEHOLDER-4)))) PLACEHOLDER-6)))))))))