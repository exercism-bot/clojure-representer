((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (if (< PLACEHOLDER-3 10) [PLACEHOLDER-3] (conj (PLACEHOLDER-2 (quot PLACEHOLDER-3 10)) (rem PLACEHOLDER-3 10)))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 PLACEHOLDER-3)] (= PLACEHOLDER-3 (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-1 PLACEHOLDER-5 (count (str PLACEHOLDER-3)))) PLACEHOLDER-6)))))))))