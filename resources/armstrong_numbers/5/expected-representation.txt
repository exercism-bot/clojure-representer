((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-8] (- (long PLACEHOLDER-8) (long \0))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-10 (PLACEHOLDER-2 num) PLACEHOLDER-5 (count PLACEHOLDER-10) PLACEHOLDER-1 (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-9] (+' PLACEHOLDER-7 (long (PLACEHOLDER-4 (PLACEHOLDER-6 PLACEHOLDER-9) PLACEHOLDER-5)))) 0 PLACEHOLDER-10)] (= PLACEHOLDER-1 num)))))))