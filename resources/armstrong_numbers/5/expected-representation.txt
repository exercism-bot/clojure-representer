((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (- (long PLACEHOLDER-0) (long \0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-5 num) PLACEHOLDER-5 (count PLACEHOLDER-4) PLACEHOLDER-6 (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-7] (+' PLACEHOLDER-7 (long (PLACEHOLDER-1 (PLACEHOLDER-0 PLACEHOLDER-7) PLACEHOLDER-5)))) 0 PLACEHOLDER-4)] (= PLACEHOLDER-6 num)))))))