((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-9] (- (long PLACEHOLDER-9) (long \0))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-10 (PLACEHOLDER-3 num) PLACEHOLDER-7 (count PLACEHOLDER-10) PLACEHOLDER-1 (reduce (fn* [PLACEHOLDER-2 PLACEHOLDER-4] (+' PLACEHOLDER-2 (long (PLACEHOLDER-6 (PLACEHOLDER-8 PLACEHOLDER-4) PLACEHOLDER-7)))) 0 PLACEHOLDER-10)] (= PLACEHOLDER-1 num)))))))