((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (count (str num))))) (def PLACEHOLDER-4 (fn* ([num PLACEHOLDER-2] (if (> num 0) (let* [PLACEHOLDER-0 (mod num 10)] (+ (bigint (PLACEHOLDER-5 PLACEHOLDER-0 PLACEHOLDER-2)) (PLACEHOLDER-4 (bigint (/ num 10)) PLACEHOLDER-2))) 0)))) (PLACEHOLDER-4 153 3) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-1 num)] (= (bigint num) (PLACEHOLDER-4 num PLACEHOLDER-3)))))) (armstrong? 21897142587612075) (PLACEHOLDER-4 21897142587612075 (PLACEHOLDER-1 21897142587612075))))