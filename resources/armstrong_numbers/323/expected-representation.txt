((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-12
   (fn*
    ([PLACEHOLDER-2 PLACEHOLDER-1]
     (loop*
      [PLACEHOLDER-1 PLACEHOLDER-1 PLACEHOLDER-8 PLACEHOLDER-2]
      (if
       (zero? PLACEHOLDER-1)
       PLACEHOLDER-8
       (recur (dec PLACEHOLDER-1) (* PLACEHOLDER-8 PLACEHOLDER-2)))))))
  (def
   PLACEHOLDER-13
   (fn*
    ([PLACEHOLDER-5 PLACEHOLDER-3]
     [(bigint (/ PLACEHOLDER-5 PLACEHOLDER-3))
      (PLACEHOLDER-7 PLACEHOLDER-5 PLACEHOLDER-3)])))
  (def
   PLACEHOLDER-14
   (fn*
    ([PLACEHOLDER-4]
     (loop*
      [PLACEHOLDER-9 0 PLACEHOLDER-6 PLACEHOLDER-4 PLACEHOLDER-11 []]
      (let*
       [vec
        (PLACEHOLDER-13 PLACEHOLDER-6 10)
        PLACEHOLDER-10
        ((read-string
          "#object[clojure.core$nth 0x75cd3577 \"clojure.core$nth@75cd3577\"]")
         vec
         0
         PLACEHOLDER-0)
        PLACEHOLDER-7
        ((read-string
          "#object[clojure.core$nth 0x75cd3577 \"clojure.core$nth@75cd3577\"]")
         vec
         1
         PLACEHOLDER-0)]
       (if
        (zero? PLACEHOLDER-10)
        (reduce
         +
         (map
          (fn* [p1#] (PLACEHOLDER-12 p1# PLACEHOLDER-9))
          (cons PLACEHOLDER-7 PLACEHOLDER-11)))
        (recur
         (inc PLACEHOLDER-9)
         PLACEHOLDER-10
         (cons PLACEHOLDER-7 PLACEHOLDER-11))))))))
  (def
   PLACEHOLDER-15
   (fn*
    ([PLACEHOLDER-4]
     (= PLACEHOLDER-4 (PLACEHOLDER-14 PLACEHOLDER-4)))))))
