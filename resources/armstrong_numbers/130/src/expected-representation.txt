(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-4
  (fn*
   ([PLACEHOLDER-1]
    (do
     (def
      PLACEHOLDER-5
      (map
       (fn* ([PLACEHOLDER-2] (new Integer PLACEHOLDER-2)))
       (map str (str PLACEHOLDER-1))))
     (clojure.lang.Util/equiv
      PLACEHOLDER-1
      (reduce
       +
       (map
        (fn*
         ([PLACEHOLDER-3]
          (reduce
           *
           (repeat
            (clojure.lang.RT/count PLACEHOLDER-5)
            PLACEHOLDER-3))))
        PLACEHOLDER-5))))))))
