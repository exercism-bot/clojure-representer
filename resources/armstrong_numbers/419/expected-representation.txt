((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (apply * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [count (count (seq (str num))) PLACEHOLDER-2 (map (fn* [PLACEHOLDER-3] (Character/getNumericValue PLACEHOLDER-3)) (str num)) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 count)) PLACEHOLDER-2) PLACEHOLDER-6 (reduce + PLACEHOLDER-4)] (if (= PLACEHOLDER-6 num) true false)))))))