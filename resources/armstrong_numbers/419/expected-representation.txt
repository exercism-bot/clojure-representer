((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0] (apply * (repeat PLACEHOLDER-0 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [count (count (seq (str num))) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-4] (Character/getNumericValue PLACEHOLDER-4)) (str num)) PLACEHOLDER-2 (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-6 PLACEHOLDER-7 count)) PLACEHOLDER-5) PLACEHOLDER-1 (reduce + PLACEHOLDER-2)] (if (= PLACEHOLDER-1 num) true false)))))))