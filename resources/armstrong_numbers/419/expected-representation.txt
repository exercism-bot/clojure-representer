((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4 PLACEHOLDER-0] (apply * (repeat PLACEHOLDER-0 PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (let* [count (count (seq (str num))) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-7] (Character/getNumericValue PLACEHOLDER-7)) (str num)) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-6 PLACEHOLDER-1 count)) PLACEHOLDER-5) PLACEHOLDER-2 (reduce + PLACEHOLDER-3)] (if (= PLACEHOLDER-2 num) true false)))))))