((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (loop* [PLACEHOLDER-0 1 PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) PLACEHOLDER-0 (recur (* PLACEHOLDER-0 PLACEHOLDER-0) (dec PLACEHOLDER-0))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3] (loop* [PLACEHOLDER-3 PLACEHOLDER-3 PLACEHOLDER-0 []] (if (= PLACEHOLDER-3 0) PLACEHOLDER-0 (recur (quot PLACEHOLDER-3 10) (conj PLACEHOLDER-0 (rem PLACEHOLDER-3 10)))))))) (def armstrong? (fn* ([PLACEHOLDER-0] (def PLACEHOLDER-6 (PLACEHOLDER-3 PLACEHOLDER-0)) (loop* [PLACEHOLDER-6 PLACEHOLDER-6 PLACEHOLDER-6 0] (if (empty? PLACEHOLDER-6) (= PLACEHOLDER-6 PLACEHOLDER-0) (recur (rest PLACEHOLDER-6) (+ PLACEHOLDER-6 (PLACEHOLDER-0 (first PLACEHOLDER-6) (count PLACEHOLDER-6)))))))))))