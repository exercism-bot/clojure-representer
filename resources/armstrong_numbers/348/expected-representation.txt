((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] (loop* [PLACEHOLDER-0 1 PLACEHOLDER-6 PLACEHOLDER-6] (if (zero? PLACEHOLDER-6) PLACEHOLDER-0 (recur (* PLACEHOLDER-0 PLACEHOLDER-1) (dec PLACEHOLDER-6))))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-2] (loop* [PLACEHOLDER-3 PLACEHOLDER-2 PLACEHOLDER-0 []] (if (= PLACEHOLDER-3 0) PLACEHOLDER-0 (recur (quot PLACEHOLDER-3 10) (conj PLACEHOLDER-0 (rem PLACEHOLDER-3 10)))))))) (def armstrong? (fn* ([PLACEHOLDER-6] (def PLACEHOLDER-4 (PLACEHOLDER-9 PLACEHOLDER-6)) (loop* [PLACEHOLDER-8 PLACEHOLDER-4 PLACEHOLDER-5 0] (if (empty? PLACEHOLDER-8) (= PLACEHOLDER-5 PLACEHOLDER-6) (recur (rest PLACEHOLDER-8) (+ PLACEHOLDER-5 (PLACEHOLDER-7 (first PLACEHOLDER-8) (count PLACEHOLDER-4)))))))))))