(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-6] (map (fn* [PLACEHOLDER-0] (- PLACEHOLDER-0 48)) (map int (seq (str PLACEHOLDER-6))))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-7] (if (= PLACEHOLDER-7 1) PLACEHOLDER-3 (PLACEHOLDER-9 (* PLACEHOLDER-3 PLACEHOLDER-1) PLACEHOLDER-1 (- PLACEHOLDER-7 1)))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-1 PLACEHOLDER-7] (if (= 0 PLACEHOLDER-7) 1 (PLACEHOLDER-9 PLACEHOLDER-1 PLACEHOLDER-1 PLACEHOLDER-7))))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-5 (into [] (PLACEHOLDER-8 PLACEHOLDER-2))] (= PLACEHOLDER-2 (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-10 PLACEHOLDER-4 (count PLACEHOLDER-5))) PLACEHOLDER-5))))))))))