((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as PLACEHOLDER-8])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-7 (fn* ([num] (count (str num))))) (def PLACEHOLDER-6 (fn* ([num] (map read-string (PLACEHOLDER-3 (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-7 num) PLACEHOLDER-10 (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-5 PLACEHOLDER-9 PLACEHOLDER-2)) (PLACEHOLDER-6 num)) PLACEHOLDER-1 (reduce + PLACEHOLDER-10)] (= PLACEHOLDER-1 num)))))))