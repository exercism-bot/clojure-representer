((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (< PLACEHOLDER-0 10) [PLACEHOLDER-0] (conj (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)) (rem PLACEHOLDER-0 10)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-0] (apply * (repeat PLACEHOLDER-0 PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-4 (PLACEHOLDER-0 num)) (def PLACEHOLDER-4 (count PLACEHOLDER-4)) (= (reduce (fn* ([PLACEHOLDER-5 PLACEHOLDER-5] (+ PLACEHOLDER-5 (PLACEHOLDER-3 PLACEHOLDER-5 PLACEHOLDER-4)))) 0 PLACEHOLDER-4) num))))))