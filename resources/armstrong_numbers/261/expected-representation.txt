((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-4] (if (< PLACEHOLDER-4 10) [PLACEHOLDER-4] (conj (PLACEHOLDER-5 (quot PLACEHOLDER-4 10)) (rem PLACEHOLDER-4 10)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (apply * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-6 (PLACEHOLDER-5 num)) (def PLACEHOLDER-3 (count PLACEHOLDER-6)) (= (reduce (fn* ([PLACEHOLDER-7 PLACEHOLDER-1] (+ PLACEHOLDER-7 (PLACEHOLDER-2 PLACEHOLDER-1 PLACEHOLDER-3)))) 0 PLACEHOLDER-6) num))))))