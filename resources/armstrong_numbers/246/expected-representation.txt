((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (let* [PLACEHOLDER-1 (conj PLACEHOLDER-0 (mod PLACEHOLDER-1 10))] (if (not= PLACEHOLDER-1 0) (recur PLACEHOLDER-1 (long (/ PLACEHOLDER-1 10))) PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0] (map (fn* ([PLACEHOLDER-1] (reduce * (repeat (count PLACEHOLDER-0) PLACEHOLDER-1)))) PLACEHOLDER-0)))) (def armstrong? (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 [] PLACEHOLDER-1) PLACEHOLDER-6 (PLACEHOLDER-3 PLACEHOLDER-5) PLACEHOLDER-7 (reduce + PLACEHOLDER-6)] (= PLACEHOLDER-1 PLACEHOLDER-7)))))))