((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-7 PLACEHOLDER-3] (let* [PLACEHOLDER-2 (conj PLACEHOLDER-7 (mod PLACEHOLDER-3 10))] (if (not= PLACEHOLDER-3 0) (recur PLACEHOLDER-2 (long (/ PLACEHOLDER-3 10))) PLACEHOLDER-7))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-7] (map (fn* ([PLACEHOLDER-3] (reduce * (repeat (count PLACEHOLDER-7) PLACEHOLDER-3)))) PLACEHOLDER-7)))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-0 (PLACEHOLDER-4 [] PLACEHOLDER-3) PLACEHOLDER-6 (PLACEHOLDER-1 PLACEHOLDER-0) PLACEHOLDER-5 (reduce + PLACEHOLDER-6)] (= PLACEHOLDER-3 PLACEHOLDER-5)))))))