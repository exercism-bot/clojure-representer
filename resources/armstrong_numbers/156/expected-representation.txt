((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1 (* PLACEHOLDER-0 (PLACEHOLDER-4 PLACEHOLDER-0 (dec PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (flatten (split-with (partial number?) (str num)))) PLACEHOLDER-3 (count PLACEHOLDER-5) PLACEHOLDER-2 (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-4 PLACEHOLDER-6 PLACEHOLDER-3)) PLACEHOLDER-5))] (= PLACEHOLDER-2 num)))))))