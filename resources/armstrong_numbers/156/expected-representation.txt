((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) 1 (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (dec PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10)) (flatten (split-with (partial number?) (str num)))) PLACEHOLDER-0 (count PLACEHOLDER-3) PLACEHOLDER-4 (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-0)) PLACEHOLDER-3))] (= PLACEHOLDER-4 num)))))))