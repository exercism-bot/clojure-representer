((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1 (* PLACEHOLDER-0 (PLACEHOLDER-5 PLACEHOLDER-0 (dec PLACEHOLDER-4))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (flatten (split-with (partial number?) (str num)))) PLACEHOLDER-4 (count PLACEHOLDER-6) PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-5 PLACEHOLDER-3 PLACEHOLDER-4)) PLACEHOLDER-6))] (= PLACEHOLDER-1 num)))))))