((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([num] (map (fn* [PLACEHOLDER-4] (Integer/parseInt PLACEHOLDER-4)) (clojure.string/split (str num) (re-pattern "")))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (if (= 0 PLACEHOLDER-2) 1 (* PLACEHOLDER-1 (PLACEHOLDER-3 PLACEHOLDER-1 (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-3 PLACEHOLDER-0 (count (PLACEHOLDER-5 num)))) (PLACEHOLDER-5 num)))))))))