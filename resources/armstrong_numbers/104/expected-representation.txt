((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (map (fn* [PLACEHOLDER-0] (Integer/parseInt PLACEHOLDER-0)) (clojure.string/split (str num) (re-pattern "")))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (if (= 0 PLACEHOLDER-2) 1 (* PLACEHOLDER-1 (PLACEHOLDER-1 PLACEHOLDER-1 (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-1 PLACEHOLDER-4 (count (PLACEHOLDER-0 num)))) (PLACEHOLDER-0 num)))))))))