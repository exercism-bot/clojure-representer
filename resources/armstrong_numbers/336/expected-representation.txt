((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2] (map (comp read-string str) (str PLACEHOLDER-2))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) 1 (* PLACEHOLDER-0 (PLACEHOLDER-3 PLACEHOLDER-0 (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-4 num)] (let* [PLACEHOLDER-1 (reduce + (map (fn* ([PLACEHOLDER-2] (PLACEHOLDER-3 PLACEHOLDER-2 (count PLACEHOLDER-5)))) PLACEHOLDER-5))] (= PLACEHOLDER-1 num))))))))