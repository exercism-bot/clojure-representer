((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (if (< num 10) [num] (conj (PLACEHOLDER-0 (quot num 10)) (rem num 10)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-0 num)] (if (= (reduce + (map (fn* [PLACEHOLDER-2] (reduce * (repeat (count PLACEHOLDER-1) PLACEHOLDER-2))) PLACEHOLDER-1)) num) true false)))))))