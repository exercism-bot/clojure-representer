((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (loop* [PLACEHOLDER-8 num PLACEHOLDER-7 []] (if (<= PLACEHOLDER-8 0) PLACEHOLDER-7 (recur (/ (- PLACEHOLDER-8 (rem PLACEHOLDER-8 10)) 10) (conj PLACEHOLDER-7 (rem PLACEHOLDER-8 10)))))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-2 num) PLACEHOLDER-1 (count PLACEHOLDER-3)] (reduce (fn* ([PLACEHOLDER-5 PLACEHOLDER-0] (+ (PLACEHOLDER-6 PLACEHOLDER-5 PLACEHOLDER-1) (PLACEHOLDER-6 PLACEHOLDER-0 PLACEHOLDER-1)))) PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (if (= (int (PLACEHOLDER-4 num)) num) true false))))))