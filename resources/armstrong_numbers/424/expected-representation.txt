((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* [PLACEHOLDER-6] (Character/digit PLACEHOLDER-6 10))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (map PLACEHOLDER-7 (seq (str PLACEHOLDER-3)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3] (count (seq (str PLACEHOLDER-3)))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-4 PLACEHOLDER-2 (PLACEHOLDER-1 num))) (PLACEHOLDER-5 num)))))))))