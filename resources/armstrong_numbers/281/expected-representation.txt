((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (PLACEHOLDER-5 PLACEHOLDER-3 (list))) ([PLACEHOLDER-3 PLACEHOLDER-2] (if (< PLACEHOLDER-3 10) (cons PLACEHOLDER-3 PLACEHOLDER-2) (PLACEHOLDER-5 (quot PLACEHOLDER-3 10) (cons (mod PLACEHOLDER-3 10) PLACEHOLDER-2)))))) (def armstrong? (fn* ([num] (= num (reduce + (let* [PLACEHOLDER-1 (PLACEHOLDER-5 num)] (mapv (fn* ([PLACEHOLDER-6] (PLACEHOLDER-4 PLACEHOLDER-6 (count PLACEHOLDER-1)))) PLACEHOLDER-1)))))))))