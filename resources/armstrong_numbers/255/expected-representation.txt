((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (apply * (repeat PLACEHOLDER-1 (bigint PLACEHOLDER-1)))))) (def PLACEHOLDER-3 (fn* ([num] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (PLACEHOLDER-4 (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (= (bigint num) (let* [PLACEHOLDER-5 (PLACEHOLDER-3 num)] (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 (count PLACEHOLDER-5))) PLACEHOLDER-5)))))))))