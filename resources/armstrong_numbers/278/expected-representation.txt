((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (count (str num))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def PLACEHOLDER-9 (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-4 (str num) (re-pattern ""))] (map (fn* [PLACEHOLDER-1] (Integer/parseInt PLACEHOLDER-1)) PLACEHOLDER-8))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-3 num) PLACEHOLDER-5 (PLACEHOLDER-9 num)] (= (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-7 PLACEHOLDER-2 PLACEHOLDER-3)) PLACEHOLDER-5)) num)))))))