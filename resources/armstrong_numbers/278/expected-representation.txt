((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([num] (count (str num))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-8 (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-2 (str num) (re-pattern ""))] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) PLACEHOLDER-7))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-1 num) PLACEHOLDER-4 (PLACEHOLDER-8 num)] (= (reduce + (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-6 PLACEHOLDER-9 PLACEHOLDER-1)) PLACEHOLDER-4)) num)))))))