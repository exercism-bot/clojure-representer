((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (count (str num))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-3 (str num) (re-pattern ""))] (map (fn* [PLACEHOLDER-4] (Integer/parseInt PLACEHOLDER-4)) PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-0 num) PLACEHOLDER-6 (PLACEHOLDER-2 num)] (= (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-0 PLACEHOLDER-7 PLACEHOLDER-0)) PLACEHOLDER-6)) num)))))))