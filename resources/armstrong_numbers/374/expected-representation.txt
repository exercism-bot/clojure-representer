((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (map (fn* [PLACEHOLDER-3] (Integer/parseInt (str PLACEHOLDER-3))) (str num))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 num) PLACEHOLDER-1 (count PLACEHOLDER-6) PLACEHOLDER-7 (reduce + (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-5 PLACEHOLDER-8 PLACEHOLDER-1)) PLACEHOLDER-6))] (= num PLACEHOLDER-7)))))))