((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-1 (fn* ([num] (map read-string (PLACEHOLDER-2 (str num) (re-pattern "")))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-6 (fn* ([num] (count (str num))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-3 PLACEHOLDER-4] (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-5 PLACEHOLDER-0 PLACEHOLDER-4))) PLACEHOLDER-3)))) (def armstrong? (fn* ([num] (= num (reduce + (PLACEHOLDER-7 (PLACEHOLDER-1 num) (PLACEHOLDER-6 num)))))))))