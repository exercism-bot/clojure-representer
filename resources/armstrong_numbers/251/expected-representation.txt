((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (comp read-string str) (str PLACEHOLDER-0))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (into [] (PLACEHOLDER-0 num))] (let* [PLACEHOLDER-2 (reduce + (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-0 PLACEHOLDER-1 (count PLACEHOLDER-2)))) PLACEHOLDER-2))] (= PLACEHOLDER-2 num))))))))