((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-8]
     (reduce * (repeat PLACEHOLDER-8 PLACEHOLDER-1)))))
  (def
   PLACEHOLDER-11
   (fn* ([PLACEHOLDER-5] ((comp long /) PLACEHOLDER-5 10))))
  (def
   PLACEHOLDER-12
   (fn*
    ([PLACEHOLDER-3] ((comp inc long) (Math/log10 PLACEHOLDER-3)))))
  (def
   PLACEHOLDER-13
   (fn*
    ([PLACEHOLDER-3] (PLACEHOLDER-13 PLACEHOLDER-3 ()))
    ([PLACEHOLDER-3 PLACEHOLDER-6]
     (let*
      [PLACEHOLDER-8
       (PLACEHOLDER-11 PLACEHOLDER-3)
       PLACEHOLDER-7
       (conj PLACEHOLDER-6 (mod PLACEHOLDER-3 10))]
      (if
       (<= PLACEHOLDER-3 9)
       PLACEHOLDER-7
       (recur PLACEHOLDER-8 PLACEHOLDER-7))))))
  (def
   PLACEHOLDER-14
   (fn*
    ([PLACEHOLDER-3]
     (let*
      [or__auto__ (<= PLACEHOLDER-3 9)]
      (if
       or__auto__
       or__auto__
       (let*
        [PLACEHOLDER-9
         (PLACEHOLDER-12 PLACEHOLDER-3)
         PLACEHOLDER-2
         (partial reduce +)
         PLACEHOLDER-4
         (partial map (fn* [p1#] (PLACEHOLDER-10 p1# PLACEHOLDER-9)))]
        (=
         PLACEHOLDER-3
         ((comp PLACEHOLDER-2 PLACEHOLDER-4 PLACEHOLDER-13)
          PLACEHOLDER-3))))))))))
