((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1 (if (= 1 PLACEHOLDER-4) PLACEHOLDER-1 (if :else (* PLACEHOLDER-1 (PLACEHOLDER-6 PLACEHOLDER-1 (dec PLACEHOLDER-4))) nil)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-3 (str num) (re-pattern ""))] (= num (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-6 PLACEHOLDER-0 (count PLACEHOLDER-5))) (map (fn* [PLACEHOLDER-2] (bigint PLACEHOLDER-2)) PLACEHOLDER-5))))))))))