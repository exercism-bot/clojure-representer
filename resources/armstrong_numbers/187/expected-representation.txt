((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (def PLACEHOLDER-1 (count (str PLACEHOLDER-0))) (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-0 PLACEHOLDER-1 PLACEHOLDER-1)) (map (fn* [PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10)) (flatten (partition 1 (str PLACEHOLDER-0))))))))) (def armstrong? (fn* ([PLACEHOLDER-0] (== PLACEHOLDER-0 (PLACEHOLDER-1 PLACEHOLDER-0)))))))