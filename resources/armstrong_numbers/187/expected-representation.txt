((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-2))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-2] (def PLACEHOLDER-6 (count (str PLACEHOLDER-2))) (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-5 PLACEHOLDER-1 PLACEHOLDER-6)) (map (fn* [PLACEHOLDER-0] (Character/digit PLACEHOLDER-0 10)) (flatten (partition 1 (str PLACEHOLDER-2))))))))) (def armstrong? (fn* ([PLACEHOLDER-2] (== PLACEHOLDER-2 (PLACEHOLDER-3 PLACEHOLDER-2)))))))