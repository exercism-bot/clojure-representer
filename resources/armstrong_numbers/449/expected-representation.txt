((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-3] (mod PLACEHOLDER-3 10)) (take-while (fn* [PLACEHOLDER-5] (not= PLACEHOLDER-5 0)) (iterate (fn* [PLACEHOLDER-4] (quot PLACEHOLDER-4 10)) PLACEHOLDER-1)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-2 num)] (= num (reduce + (map (fn* [PLACEHOLDER-0] (reduce * (repeat (count PLACEHOLDER-2) PLACEHOLDER-0))) PLACEHOLDER-2)))))))))