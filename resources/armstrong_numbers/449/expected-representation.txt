((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-5
   (fn*
    ([PLACEHOLDER-0] (/ (- PLACEHOLDER-0 (mod PLACEHOLDER-0 10)) 10))))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-2 PLACEHOLDER-4]
     (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-2)))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-3]
     (==
      PLACEHOLDER-3
      (let*
       [PLACEHOLDER-1
        (map
         (fn* ([PLACEHOLDER-2] (mod PLACEHOLDER-2 10)))
         (take-while
          (fn* ([PLACEHOLDER-2] (>= PLACEHOLDER-2 1)))
          (iterate PLACEHOLDER-5 PLACEHOLDER-3)))]
       (apply
        +
        (map
         (fn*
          ([PLACEHOLDER-2]
           (PLACEHOLDER-6 PLACEHOLDER-2 (count PLACEHOLDER-1))))
         PLACEHOLDER-1)))))))))
