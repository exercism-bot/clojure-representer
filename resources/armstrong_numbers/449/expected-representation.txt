((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-1] (mod PLACEHOLDER-1 10)) (take-while (fn* [PLACEHOLDER-2] (not= PLACEHOLDER-2 0)) (iterate (fn* [PLACEHOLDER-2] (quot PLACEHOLDER-2 10)) PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-0 num)] (= num (reduce + (map (fn* [PLACEHOLDER-4] (reduce * (repeat (count PLACEHOLDER-0) PLACEHOLDER-4))) PLACEHOLDER-0)))))))))