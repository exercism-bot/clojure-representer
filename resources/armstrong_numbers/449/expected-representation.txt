((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-0] (mod PLACEHOLDER-0 10)) (take-while (fn* [PLACEHOLDER-1] (not= PLACEHOLDER-1 0)) (iterate (fn* [PLACEHOLDER-4] (quot PLACEHOLDER-4 10)) PLACEHOLDER-2)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-3 num)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (reduce * (repeat (count PLACEHOLDER-3) PLACEHOLDER-5))) PLACEHOLDER-3)))))))))