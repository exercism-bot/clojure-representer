((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num PLACEHOLDER-1] (loop* [PLACEHOLDER-1 1 PLACEHOLDER-1 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) PLACEHOLDER-1 (recur (* PLACEHOLDER-1 num) (dec PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-6 PLACEHOLDER-5)) (PLACEHOLDER-7 (str num) (re-pattern ""))) PLACEHOLDER-7 (count PLACEHOLDER-5) PLACEHOLDER-7 (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-8] (+ PLACEHOLDER-7 (PLACEHOLDER-0 (int PLACEHOLDER-8) PLACEHOLDER-7))) 0 PLACEHOLDER-5)] (= PLACEHOLDER-7 num)))))))