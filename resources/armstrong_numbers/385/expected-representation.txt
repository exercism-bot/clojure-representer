((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([num PLACEHOLDER-7] (loop* [PLACEHOLDER-5 1 PLACEHOLDER-7 PLACEHOLDER-7] (if (zero? PLACEHOLDER-7) PLACEHOLDER-5 (recur (* PLACEHOLDER-5 num) (dec PLACEHOLDER-7))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-1 PLACEHOLDER-3)) (PLACEHOLDER-4 (str num) (re-pattern ""))) PLACEHOLDER-10 (count PLACEHOLDER-8) PLACEHOLDER-2 (reduce (fn* [PLACEHOLDER-0 PLACEHOLDER-9] (+ PLACEHOLDER-0 (PLACEHOLDER-6 (int PLACEHOLDER-9) PLACEHOLDER-10))) 0 PLACEHOLDER-8)] (= PLACEHOLDER-2 num)))))))