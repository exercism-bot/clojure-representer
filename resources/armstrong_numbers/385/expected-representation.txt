((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([num PLACEHOLDER-8] (loop* [PLACEHOLDER-6 1 PLACEHOLDER-8 PLACEHOLDER-8] (if (zero? PLACEHOLDER-8) PLACEHOLDER-6 (recur (* PLACEHOLDER-6 num) (dec PLACEHOLDER-8))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-9 (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-1 PLACEHOLDER-0)) (PLACEHOLDER-5 (str num) (re-pattern ""))) PLACEHOLDER-10 (count PLACEHOLDER-9) PLACEHOLDER-4 (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-2] (+ PLACEHOLDER-3 (PLACEHOLDER-7 (int PLACEHOLDER-2) PLACEHOLDER-10))) 0 PLACEHOLDER-9)] (= PLACEHOLDER-4 num)))))))