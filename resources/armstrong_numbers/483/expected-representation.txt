((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (if (= PLACEHOLDER-0 1) PLACEHOLDER-0 (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (dec PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (str num) PLACEHOLDER-0 (count PLACEHOLDER-2) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-3] (- (int PLACEHOLDER-3) (int \0))) PLACEHOLDER-2)] (= num (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-0)) PLACEHOLDER-3)))))))))