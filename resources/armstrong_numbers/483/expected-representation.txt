((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (if (= PLACEHOLDER-3 1) PLACEHOLDER-2 (* PLACEHOLDER-2 (PLACEHOLDER-0 PLACEHOLDER-2 (dec PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (str num) PLACEHOLDER-3 (count PLACEHOLDER-6) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-1] (- (int PLACEHOLDER-1) (int \0))) PLACEHOLDER-6)] (= num (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-3)) PLACEHOLDER-4)))))))))