((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (if (= PLACEHOLDER-2 1) PLACEHOLDER-1 (* PLACEHOLDER-1 (PLACEHOLDER-0 PLACEHOLDER-1 (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (str num) PLACEHOLDER-2 (count PLACEHOLDER-5) PLACEHOLDER-3 (map (fn* [PLACEHOLDER-6] (- (int PLACEHOLDER-6) (int \0))) PLACEHOLDER-5)] (= num (apply + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-2)) PLACEHOLDER-3)))))))))