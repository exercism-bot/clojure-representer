((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-4] (if (= PLACEHOLDER-4 1) PLACEHOLDER-2 (* PLACEHOLDER-2 (PLACEHOLDER-1 PLACEHOLDER-2 (dec PLACEHOLDER-4))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (str num) PLACEHOLDER-4 (count PLACEHOLDER-6) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-3] (- (int PLACEHOLDER-3) (int \0))) PLACEHOLDER-6)] (= num (apply + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-1 PLACEHOLDER-0 PLACEHOLDER-4)) PLACEHOLDER-5)))))))))