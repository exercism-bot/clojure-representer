((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (loop* [PLACEHOLDER-1 1 PLACEHOLDER-2 PLACEHOLDER-1] (if (zero? PLACEHOLDER-2) PLACEHOLDER-1 (recur (* PLACEHOLDER-1 PLACEHOLDER-0) (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (str num)] (= num (reduce + 0 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 (count PLACEHOLDER-4))) (map (comp read-string str) (seq PLACEHOLDER-4)))))))))))