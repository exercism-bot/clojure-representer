((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (loop* [PLACEHOLDER-6 1 PLACEHOLDER-3 PLACEHOLDER-2] (if (zero? PLACEHOLDER-3) PLACEHOLDER-6 (recur (* PLACEHOLDER-6 PLACEHOLDER-0) (dec PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (str num)] (= num (reduce + 0 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-5 PLACEHOLDER-1 (count PLACEHOLDER-4))) (map (comp read-string str) (seq PLACEHOLDER-4)))))))))))