((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2] (if (pos? PLACEHOLDER-2) (conj (PLACEHOLDER-5 (quot PLACEHOLDER-2 10)) (mod PLACEHOLDER-2 10)) [])))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) 1 (* PLACEHOLDER-0 (PLACEHOLDER-3 PLACEHOLDER-0 (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-5 num) PLACEHOLDER-6 (count (str num))] (= (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-3 PLACEHOLDER-4 PLACEHOLDER-6)) PLACEHOLDER-1)) num)))))))