(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-6
  (fn*
   ([PLACEHOLDER-1]
    (map
     (fn* ([PLACEHOLDER-2] (new BigInteger PLACEHOLDER-2)))
     (map str (str PLACEHOLDER-1))))))
 (def
  PLACEHOLDER-7
  (fn*
   ([PLACEHOLDER-3]
    (clojure.lang.RT/longCast
     (apply
      +
      (map
       (fn*
        ([PLACEHOLDER-4]
         (.pow
          PLACEHOLDER-4
          (clojure.lang.RT/count (PLACEHOLDER-6 PLACEHOLDER-3)))))
       (PLACEHOLDER-6 PLACEHOLDER-3)))))))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-5]
    (clojure.lang.Util/equiv
     PLACEHOLDER-5
     (PLACEHOLDER-7 PLACEHOLDER-5))))))
