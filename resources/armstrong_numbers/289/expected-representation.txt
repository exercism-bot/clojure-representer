((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1 (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (dec PLACEHOLDER-1))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (if (empty? PLACEHOLDER-4) 0 (+ (PLACEHOLDER-0 (first PLACEHOLDER-4) PLACEHOLDER-4) (PLACEHOLDER-3 (rest PLACEHOLDER-4) PLACEHOLDER-4)))))) (def PLACEHOLDER-5 (fn* ([num] (map read-string (PLACEHOLDER-6 (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-5 num)] (= num (PLACEHOLDER-3 PLACEHOLDER-4 (count PLACEHOLDER-4)))))))))