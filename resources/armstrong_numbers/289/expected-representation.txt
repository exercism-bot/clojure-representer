((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] (if (zero? PLACEHOLDER-6) 1 (* PLACEHOLDER-1 (PLACEHOLDER-3 PLACEHOLDER-1 (dec PLACEHOLDER-6))))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-5 PLACEHOLDER-4] (if (empty? PLACEHOLDER-5) 0 (+ (PLACEHOLDER-3 (first PLACEHOLDER-5) PLACEHOLDER-4) (PLACEHOLDER-7 (rest PLACEHOLDER-5) PLACEHOLDER-4)))))) (def PLACEHOLDER-0 (fn* ([num] (map read-string (PLACEHOLDER-2 (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 num)] (= num (PLACEHOLDER-7 PLACEHOLDER-5 (count PLACEHOLDER-5)))))))))