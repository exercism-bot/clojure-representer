((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) (quote ()) (conj (PLACEHOLDER-5 (quot PLACEHOLDER-2 10)) (rem PLACEHOLDER-2 10)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1 (* PLACEHOLDER-0 (PLACEHOLDER-3 PLACEHOLDER-0 (- PLACEHOLDER-1 1))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-5 num) PLACEHOLDER-6 (count PLACEHOLDER-4)] (= (apply + (map (fn* ([PLACEHOLDER-2] (PLACEHOLDER-3 PLACEHOLDER-2 PLACEHOLDER-6))) PLACEHOLDER-4)) num)))))))