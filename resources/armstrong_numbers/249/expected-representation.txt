((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) (quote ()) (conj (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)) (rem PLACEHOLDER-0 10)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) 1 (* PLACEHOLDER-2 (PLACEHOLDER-2 PLACEHOLDER-2 (- PLACEHOLDER-2 1))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num) PLACEHOLDER-4 (count PLACEHOLDER-3)] (= (apply + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-2 PLACEHOLDER-0 PLACEHOLDER-4))) PLACEHOLDER-3)) num)))))))