((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-1] (- (int PLACEHOLDER-1) 48)) (str num)) PLACEHOLDER-7 (count PLACEHOLDER-3)] (= (long num) (reduce (fn* [PLACEHOLDER-6 PLACEHOLDER-2] (+ PLACEHOLDER-6 (long (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-7)))) 0 PLACEHOLDER-3))))))))