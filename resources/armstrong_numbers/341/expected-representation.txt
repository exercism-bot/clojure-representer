((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-2] (- (int PLACEHOLDER-2) 48)) (str num)) PLACEHOLDER-7 (count PLACEHOLDER-3)] (= (long num) (reduce (fn* [PLACEHOLDER-1 PLACEHOLDER-6] (+ PLACEHOLDER-1 (long (PLACEHOLDER-4 PLACEHOLDER-6 PLACEHOLDER-7)))) 0 PLACEHOLDER-3))))))))