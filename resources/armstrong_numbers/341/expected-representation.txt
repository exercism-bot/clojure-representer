((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (map (fn* [PLACEHOLDER-6] (- (int PLACEHOLDER-6) 48)) (str num)) PLACEHOLDER-5 (count PLACEHOLDER-2)] (= (long num) (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-1] (+ PLACEHOLDER-7 (long (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-5)))) 0 PLACEHOLDER-2))))))))