((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (str num) PLACEHOLDER-1 (count PLACEHOLDER-0) PLACEHOLDER-2 (map (fn* [PLACEHOLDER-2] (Integer/parseInt PLACEHOLDER-2)) (PLACEHOLDER-3 PLACEHOLDER-0 (re-pattern ""))) PLACEHOLDER-4 (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-5 PLACEHOLDER-4 PLACEHOLDER-1)) PLACEHOLDER-2)] (== num (reduce + PLACEHOLDER-4))))))))