((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (import PLACEHOLDER-1) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-5 PLACEHOLDER-6] (if (== PLACEHOLDER-5 0) PLACEHOLDER-6 (let* [PLACEHOLDER-4 (rem PLACEHOLDER-5 10) PLACEHOLDER-7 (long (/ PLACEHOLDER-5 10))] (recur PLACEHOLDER-7 (cons PLACEHOLDER-4 PLACEHOLDER-6))))) ([PLACEHOLDER-5] (PLACEHOLDER-3 PLACEHOLDER-5 ())))) (def armstrong? (fn* ([PLACEHOLDER-5] (let* [PLACEHOLDER-10 (PLACEHOLDER-3 PLACEHOLDER-5) PLACEHOLDER-9 (count PLACEHOLDER-10) PLACEHOLDER-0 (map (fn* [PLACEHOLDER-11] (PLACEHOLDER-12 (PLACEHOLDER-8 PLACEHOLDER-11) PLACEHOLDER-9)) PLACEHOLDER-10) PLACEHOLDER-2 (reduce + PLACEHOLDER-0)] (== PLACEHOLDER-2 PLACEHOLDER-5)))))))