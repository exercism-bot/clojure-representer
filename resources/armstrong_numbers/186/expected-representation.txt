((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (import PLACEHOLDER-0) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (if (== PLACEHOLDER-1 0) PLACEHOLDER-2 (let* [PLACEHOLDER-3 (rem PLACEHOLDER-1 10) PLACEHOLDER-4 (long (/ PLACEHOLDER-1 10))] (recur PLACEHOLDER-4 (cons PLACEHOLDER-3 PLACEHOLDER-2))))) ([PLACEHOLDER-1] (PLACEHOLDER-0 PLACEHOLDER-1 ())))) (def armstrong? (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 PLACEHOLDER-1) PLACEHOLDER-6 (count PLACEHOLDER-5) PLACEHOLDER-7 (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-8 (PLACEHOLDER-9 PLACEHOLDER-7) PLACEHOLDER-6)) PLACEHOLDER-5) PLACEHOLDER-10 (reduce + PLACEHOLDER-7)] (== PLACEHOLDER-10 PLACEHOLDER-1)))))))