((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str]) (quote [clojure.edn :as PLACEHOLDER-0])) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-1))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-3 (str PLACEHOLDER-3) PLACEHOLDER-5 (count PLACEHOLDER-3) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-7 PLACEHOLDER-7)) (PLACEHOLDER-8 PLACEHOLDER-3 (re-pattern ""))) PLACEHOLDER-9 (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-0 PLACEHOLDER-10 PLACEHOLDER-5)) PLACEHOLDER-6) PLACEHOLDER-12 (reduce + PLACEHOLDER-9)] (= PLACEHOLDER-12 PLACEHOLDER-3)))))))