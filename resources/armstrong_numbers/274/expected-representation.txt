((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str]) (quote [clojure.edn :as PLACEHOLDER-12])) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-0 PLACEHOLDER-8] (reduce * (repeat PLACEHOLDER-8 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-13] (let* [PLACEHOLDER-11 (str PLACEHOLDER-13) PLACEHOLDER-5 (count PLACEHOLDER-11) PLACEHOLDER-10 (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1)) (PLACEHOLDER-6 PLACEHOLDER-11 (re-pattern ""))) PLACEHOLDER-2 (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-9 PLACEHOLDER-7 PLACEHOLDER-5)) PLACEHOLDER-10) PLACEHOLDER-3 (reduce + PLACEHOLDER-2)] (= PLACEHOLDER-3 PLACEHOLDER-13)))))))