((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str]) (quote [clojure.edn :as PLACEHOLDER-12])) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-13] (let* [PLACEHOLDER-9 (str PLACEHOLDER-13) PLACEHOLDER-4 (count PLACEHOLDER-9) PLACEHOLDER-8 (map (fn* [PLACEHOLDER-11] (PLACEHOLDER-3 PLACEHOLDER-11)) (PLACEHOLDER-5 PLACEHOLDER-9 (re-pattern ""))) PLACEHOLDER-1 (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-7 PLACEHOLDER-10 PLACEHOLDER-4)) PLACEHOLDER-8) PLACEHOLDER-2 (reduce + PLACEHOLDER-1)] (= PLACEHOLDER-2 PLACEHOLDER-13)))))))