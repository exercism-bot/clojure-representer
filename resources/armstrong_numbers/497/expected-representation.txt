((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-5]
     (loop*
      [PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-7 PLACEHOLDER-5]
      (if
       (= PLACEHOLDER-7 1)
       PLACEHOLDER-3
       (recur (* PLACEHOLDER-3 PLACEHOLDER-1) (dec PLACEHOLDER-7)))))))
  (def
   PLACEHOLDER-10
   (fn* ([PLACEHOLDER-1] (count (.toString PLACEHOLDER-1)))))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-1]
     (loop*
      [PLACEHOLDER-3
       []
       PLACEHOLDER-2
       (bigint (/ PLACEHOLDER-1 10))
       PLACEHOLDER-4
       (mod PLACEHOLDER-1 10)]
      (if
       (< PLACEHOLDER-2 1)
       (conj PLACEHOLDER-3 PLACEHOLDER-4)
       (recur
        (cons PLACEHOLDER-4 PLACEHOLDER-3)
        (bigint (/ PLACEHOLDER-2 10))
        (mod PLACEHOLDER-2 10)))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-1]
     (let*
      [PLACEHOLDER-6
       (PLACEHOLDER-6 PLACEHOLDER-1)
       PLACEHOLDER-8
       (count PLACEHOLDER-6)]
      (reduce
       +
       (map
        (fn* [p1#] (PLACEHOLDER-9 p1# PLACEHOLDER-8))
        PLACEHOLDER-6))))))
  (def
   PLACEHOLDER-12
   (fn*
    ([PLACEHOLDER-1]
     (= PLACEHOLDER-1 (PLACEHOLDER-11 PLACEHOLDER-1)))))))
