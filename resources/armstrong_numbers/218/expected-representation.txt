((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce (fn* ([PLACEHOLDER-3 PLACEHOLDER-2] (* PLACEHOLDER-3 PLACEHOLDER-0))) 1 (range PLACEHOLDER-1))))) (def PLACEHOLDER-5 (fn* ([num] (case* num 0 [0] (PLACEHOLDER-5 num []))) ([num PLACEHOLDER-7] (case* num 0 (reverse PLACEHOLDER-7) (recur (quot num 10) (conj PLACEHOLDER-7 (rem num 10))))))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-9 (PLACEHOLDER-5 PLACEHOLDER-4)] (= PLACEHOLDER-4 (reduce + 0 (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-6 PLACEHOLDER-8 (count PLACEHOLDER-9))) PLACEHOLDER-9)))))))))