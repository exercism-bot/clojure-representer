((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce (fn* ([PLACEHOLDER-4 PLACEHOLDER-3] (* PLACEHOLDER-4 PLACEHOLDER-0))) 1 (range PLACEHOLDER-1))))) (def PLACEHOLDER-6 (fn* ([num] (case* num 0 [0] (PLACEHOLDER-6 num []))) ([num PLACEHOLDER-8] (case* num 0 (reverse PLACEHOLDER-8) (recur (quot num 10) (conj PLACEHOLDER-8 (rem num 10))))))) (def armstrong? (fn* ([PLACEHOLDER-5] (let* [PLACEHOLDER-9 (PLACEHOLDER-6 PLACEHOLDER-5)] (= PLACEHOLDER-5 (reduce + 0 (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-7 PLACEHOLDER-2 (count PLACEHOLDER-9))) PLACEHOLDER-9)))))))))