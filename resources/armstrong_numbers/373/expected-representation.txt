((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-1 (fn* ([num PLACEHOLDER-3] (reduce * (take PLACEHOLDER-3 (cycle (list num))))))) (def PLACEHOLDER-5 (fn* ([num] (map (fn* [PLACEHOLDER-6] (Integer/parseInt PLACEHOLDER-6)) (PLACEHOLDER-0 (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-5 num)] (= num (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-1 PLACEHOLDER-2 (count PLACEHOLDER-4))) PLACEHOLDER-4)))))))))