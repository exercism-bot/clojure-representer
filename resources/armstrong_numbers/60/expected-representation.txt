((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * 1 (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (loop* [PLACEHOLDER-1 0 PLACEHOLDER-2 num] (if (= PLACEHOLDER-2 0) (max PLACEHOLDER-1 1) (recur (inc PLACEHOLDER-1) (quot PLACEHOLDER-2 10))))) (loop* [PLACEHOLDER-1 1 PLACEHOLDER-2 num PLACEHOLDER-4 0] (if (= PLACEHOLDER-2 0) (= PLACEHOLDER-4 num) (recur (inc PLACEHOLDER-1) (quot PLACEHOLDER-2 10) (+ PLACEHOLDER-4 (PLACEHOLDER-0 (rem PLACEHOLDER-2 10) PLACEHOLDER-1))))))))))