((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 2)))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1] (map (comp read-string str) (str PLACEHOLDER-1))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-4 num)] (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 (count PLACEHOLDER-5))) PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-4 num)))))))