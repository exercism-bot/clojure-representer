((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0] (PLACEHOLDER-4 PLACEHOLDER-0 2)))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3] (map (comp read-string str) (str PLACEHOLDER-3))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-6 num)] (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-4 PLACEHOLDER-5 (count PLACEHOLDER-7))) PLACEHOLDER-7)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))