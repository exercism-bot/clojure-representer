((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-8] (Character/digit PLACEHOLDER-8 10)) (str PLACEHOLDER-0))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-1 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-7] (+ PLACEHOLDER-3 (PLACEHOLDER-6 PLACEHOLDER-1 PLACEHOLDER-7))) 0 PLACEHOLDER-4)))) (def armstrong? (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-4 (PLACEHOLDER-2 PLACEHOLDER-0)] (= PLACEHOLDER-0 (PLACEHOLDER-5 (count PLACEHOLDER-4) PLACEHOLDER-4))))))))