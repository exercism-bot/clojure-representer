((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (str PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-3] (+ PLACEHOLDER-3 (PLACEHOLDER-2 PLACEHOLDER-2 PLACEHOLDER-3))) 0 PLACEHOLDER-3)))) (def armstrong? (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 PLACEHOLDER-0)] (= PLACEHOLDER-0 (PLACEHOLDER-2 (count PLACEHOLDER-3) PLACEHOLDER-3))))))))