((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-5] (Character/digit PLACEHOLDER-5 10)) (str PLACEHOLDER-2))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-3 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-2))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-3 PLACEHOLDER-6] (reduce (fn* [PLACEHOLDER-1 PLACEHOLDER-0] (+ PLACEHOLDER-1 (PLACEHOLDER-8 PLACEHOLDER-3 PLACEHOLDER-0))) 0 PLACEHOLDER-6)))) (def armstrong? (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-6 (PLACEHOLDER-4 PLACEHOLDER-2)] (= PLACEHOLDER-2 (PLACEHOLDER-7 (count PLACEHOLDER-6) PLACEHOLDER-6))))))))