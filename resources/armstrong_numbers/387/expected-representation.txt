((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 num] (reduce * (repeat PLACEHOLDER-0 num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (str num)] (= num (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-1 (count PLACEHOLDER-3) PLACEHOLDER-2)) (map (fn* [PLACEHOLDER-4] (Integer/parseInt (str PLACEHOLDER-4))) (apply list PLACEHOLDER-3))))))))) (armstrong? 9) (armstrong? 10) (armstrong? 153)))