((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-2 num] (reduce * (repeat PLACEHOLDER-2 num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (str num)] (= num (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 (count PLACEHOLDER-4) PLACEHOLDER-1)) (map (fn* [PLACEHOLDER-0] (Integer/parseInt (str PLACEHOLDER-0))) (apply list PLACEHOLDER-4))))))))) (armstrong? 9) (armstrong? 10) (armstrong? 153)))