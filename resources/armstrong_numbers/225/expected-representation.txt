((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-3] (count (str PLACEHOLDER-3))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (PLACEHOLDER-4 (str PLACEHOLDER-3) (re-pattern ""))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-9 num) PLACEHOLDER-2 (reduce + (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-7 (read-string PLACEHOLDER-8) PLACEHOLDER-1)) (PLACEHOLDER-5 num)))] (= num PLACEHOLDER-2)))))))