((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (count (str PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (PLACEHOLDER-2 (str PLACEHOLDER-0) (re-pattern ""))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 num) PLACEHOLDER-6 (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-3 (read-string PLACEHOLDER-7) PLACEHOLDER-5)) (PLACEHOLDER-1 num)))] (= num PLACEHOLDER-6)))))))