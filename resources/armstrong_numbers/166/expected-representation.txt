((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([num] (loop* [PLACEHOLDER-2 10 PLACEHOLDER-3 1] (if (< num PLACEHOLDER-2) PLACEHOLDER-3 (recur (* 10 PLACEHOLDER-2) (inc PLACEHOLDER-3))))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0 PLACEHOLDER-7] (reduce * (repeat PLACEHOLDER-7 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-4 num)] (loop* [PLACEHOLDER-5 num PLACEHOLDER-6 0] (if (> 10 PLACEHOLDER-5) (= num (+ PLACEHOLDER-6 (PLACEHOLDER-1 PLACEHOLDER-5 PLACEHOLDER-7))) (recur (quot PLACEHOLDER-5 10) (+ PLACEHOLDER-6 (PLACEHOLDER-1 (rem PLACEHOLDER-5 10) PLACEHOLDER-7))))))))) (armstrong? 9) (armstrong? 10) (armstrong? 153) (armstrong? 154)))