((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (loop* [PLACEHOLDER-0 10 PLACEHOLDER-1 1] (if (< num PLACEHOLDER-0) PLACEHOLDER-1 (recur (* 10 PLACEHOLDER-0) (inc PLACEHOLDER-1))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 num)] (loop* [PLACEHOLDER-5 num PLACEHOLDER-5 0] (if (> 10 PLACEHOLDER-5) (= num (+ PLACEHOLDER-5 (PLACEHOLDER-2 PLACEHOLDER-5 PLACEHOLDER-3))) (recur (quot PLACEHOLDER-5 10) (+ PLACEHOLDER-5 (PLACEHOLDER-2 (rem PLACEHOLDER-5 10) PLACEHOLDER-3))))))))) (armstrong? 9) (armstrong? 10) (armstrong? 153) (armstrong? 154)))