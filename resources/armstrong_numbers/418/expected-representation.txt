((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-3] (if (< PLACEHOLDER-3 10) [PLACEHOLDER-3] (conj (PLACEHOLDER-7 (quot PLACEHOLDER-3 10)) (rem PLACEHOLDER-3 10)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-3))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-5 PLACEHOLDER-2] (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-4 PLACEHOLDER-5 PLACEHOLDER-9)) PLACEHOLDER-2)))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2] (PLACEHOLDER-6 (count PLACEHOLDER-2) PLACEHOLDER-2)))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-10 (PLACEHOLDER-7 PLACEHOLDER-3) PLACEHOLDER-8 (reduce + (PLACEHOLDER-1 PLACEHOLDER-10))] (= PLACEHOLDER-3 PLACEHOLDER-8)))))))