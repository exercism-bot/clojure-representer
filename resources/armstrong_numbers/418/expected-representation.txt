((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (< PLACEHOLDER-0 10) [PLACEHOLDER-0] (conj (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)) (rem PLACEHOLDER-0 10)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-3 PLACEHOLDER-4 PLACEHOLDER-4)) PLACEHOLDER-4)))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4] (PLACEHOLDER-4 (count PLACEHOLDER-4) PLACEHOLDER-4)))) (def armstrong? (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-7 (PLACEHOLDER-0 PLACEHOLDER-0) PLACEHOLDER-8 (reduce + (PLACEHOLDER-4 PLACEHOLDER-7))] (= PLACEHOLDER-0 PLACEHOLDER-8)))))))