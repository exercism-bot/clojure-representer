((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-4] (if (< PLACEHOLDER-4 10) [PLACEHOLDER-4] (conj (PLACEHOLDER-8 (quot PLACEHOLDER-4 10)) (rem PLACEHOLDER-4 10)))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-4))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-6 PLACEHOLDER-2] (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-5 PLACEHOLDER-6 PLACEHOLDER-3)) PLACEHOLDER-2)))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2] (PLACEHOLDER-7 (count PLACEHOLDER-2) PLACEHOLDER-2)))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-10 (PLACEHOLDER-8 PLACEHOLDER-4) PLACEHOLDER-9 (reduce + (PLACEHOLDER-1 PLACEHOLDER-10))] (= PLACEHOLDER-4 PLACEHOLDER-9)))))))