((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([num] (loop* [PLACEHOLDER-4 num PLACEHOLDER-3 (quote ())] (if (zero? PLACEHOLDER-4) PLACEHOLDER-3 (recur (quot PLACEHOLDER-4 10) (conj PLACEHOLDER-3 (mod PLACEHOLDER-4 10)))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-2 num) PLACEHOLDER-1 (fn* ([PLACEHOLDER-3 PLACEHOLDER-6] (+ PLACEHOLDER-3 (PLACEHOLDER-5 PLACEHOLDER-6 (count PLACEHOLDER-7)))))] (= num (reduce PLACEHOLDER-1 0 PLACEHOLDER-7))))))))