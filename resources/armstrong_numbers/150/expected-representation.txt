((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (Integer/parseInt (str PLACEHOLDER-3))))) (def PLACEHOLDER-3 (fn* ([num] (let* [PLACEHOLDER-3 (str num) PLACEHOLDER-1 (count PLACEHOLDER-3) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 (PLACEHOLDER-2 PLACEHOLDER-5) PLACEHOLDER-1)) PLACEHOLDER-3)] (reduce + PLACEHOLDER-5))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-3 num)))))))