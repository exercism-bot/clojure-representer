((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-1] (Integer/parseInt (str PLACEHOLDER-1))))) (def PLACEHOLDER-3 (fn* ([num] (let* [PLACEHOLDER-4 (str num) PLACEHOLDER-2 (count PLACEHOLDER-4) PLACEHOLDER-8 (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-5 (PLACEHOLDER-7 PLACEHOLDER-6) PLACEHOLDER-2)) PLACEHOLDER-4)] (reduce + PLACEHOLDER-8))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-3 num)))))))