((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([num] (let* [PLACEHOLDER-5 (clojure.string/split (str num) (re-pattern ""))] (map (fn* [PLACEHOLDER-11] (PLACEHOLDER-1 PLACEHOLDER-11)) PLACEHOLDER-5))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3 PLACEHOLDER-4] (PLACEHOLDER-12 (bigdec PLACEHOLDER-3) PLACEHOLDER-4)))) (def PLACEHOLDER-2 (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-9 num) PLACEHOLDER-8 (count PLACEHOLDER-7)] (bigint (reduce (fn* [PLACEHOLDER-0 PLACEHOLDER-10] (+ PLACEHOLDER-0 (PLACEHOLDER-6 PLACEHOLDER-10 PLACEHOLDER-8))) 0 PLACEHOLDER-7)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 num)))))))