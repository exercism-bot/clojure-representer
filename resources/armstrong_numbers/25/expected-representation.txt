((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-11 (fn* ([num] (let* [PLACEHOLDER-4 (clojure.string/split (str num) (re-pattern ""))] (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-0 PLACEHOLDER-7)) PLACEHOLDER-4))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (PLACEHOLDER-12 (bigdec PLACEHOLDER-2) PLACEHOLDER-3)))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-11 num) PLACEHOLDER-9 (count PLACEHOLDER-8)] (bigint (reduce (fn* [PLACEHOLDER-5 PLACEHOLDER-10] (+ PLACEHOLDER-5 (PLACEHOLDER-6 PLACEHOLDER-10 PLACEHOLDER-9))) 0 PLACEHOLDER-8)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))