((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-11 (fn* ([num] (let* [PLACEHOLDER-5 (clojure.string/split (str num) (re-pattern ""))] (map (fn* [PLACEHOLDER-9] (PLACEHOLDER-0 PLACEHOLDER-9)) PLACEHOLDER-5))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-2 PLACEHOLDER-4] (PLACEHOLDER-12 (bigdec PLACEHOLDER-2) PLACEHOLDER-4)))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-11 num) PLACEHOLDER-10 (count PLACEHOLDER-8)] (bigint (reduce (fn* [PLACEHOLDER-7 PLACEHOLDER-3] (+ PLACEHOLDER-7 (PLACEHOLDER-6 PLACEHOLDER-3 PLACEHOLDER-10))) 0 PLACEHOLDER-8)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))