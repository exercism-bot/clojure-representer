((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (let* [PLACEHOLDER-1 (clojure.string/split (str num) (re-pattern ""))] (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-2 PLACEHOLDER-1)) PLACEHOLDER-1))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (PLACEHOLDER-5 (bigdec PLACEHOLDER-4) PLACEHOLDER-4)))) (def PLACEHOLDER-6 (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-0 num) PLACEHOLDER-7 (count PLACEHOLDER-7)] (bigint (reduce (fn* [PLACEHOLDER-8 PLACEHOLDER-9] (+ PLACEHOLDER-8 (PLACEHOLDER-3 PLACEHOLDER-9 PLACEHOLDER-7))) 0 PLACEHOLDER-7)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-6 num)))))))