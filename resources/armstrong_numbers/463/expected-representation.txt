((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-0] (if (= PLACEHOLDER-0 1) PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (- PLACEHOLDER-0 1) (* PLACEHOLDER-0 PLACEHOLDER-0)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-0)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (map (fn* [PLACEHOLDER-6] (- (int PLACEHOLDER-6) 48)) (seq (str num))) PLACEHOLDER-7 (count (str num)) PLACEHOLDER-8 (reduce (fn* [PLACEHOLDER-8 PLACEHOLDER-9] (+ PLACEHOLDER-8 (PLACEHOLDER-3 PLACEHOLDER-9 PLACEHOLDER-7))) 0 PLACEHOLDER-6)] (= PLACEHOLDER-8 num)))))))