((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-10 PLACEHOLDER-6] (if (= PLACEHOLDER-10 1) PLACEHOLDER-6 (PLACEHOLDER-4 PLACEHOLDER-1 (- PLACEHOLDER-10 1) (* PLACEHOLDER-1 PLACEHOLDER-6)))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-1 PLACEHOLDER-10] (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-10 PLACEHOLDER-1)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (map (fn* [PLACEHOLDER-3] (- (int PLACEHOLDER-3) 48)) (seq (str num))) PLACEHOLDER-9 (count (str num)) PLACEHOLDER-2 (reduce (fn* [PLACEHOLDER-5 PLACEHOLDER-0] (+ PLACEHOLDER-5 (PLACEHOLDER-7 PLACEHOLDER-0 PLACEHOLDER-9))) 0 PLACEHOLDER-8)] (= PLACEHOLDER-2 num)))))))