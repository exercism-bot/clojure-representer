((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-10 PLACEHOLDER-4] (if (= PLACEHOLDER-10 1) PLACEHOLDER-4 (PLACEHOLDER-2 PLACEHOLDER-0 (- PLACEHOLDER-10 1) (* PLACEHOLDER-0 PLACEHOLDER-4)))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-10] (PLACEHOLDER-2 PLACEHOLDER-0 PLACEHOLDER-10 PLACEHOLDER-0)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (map (fn* [PLACEHOLDER-7] (- (int PLACEHOLDER-7) 48)) (seq (str num))) PLACEHOLDER-9 (count (str num)) PLACEHOLDER-1 (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-8] (+ PLACEHOLDER-3 (PLACEHOLDER-5 PLACEHOLDER-8 PLACEHOLDER-9))) 0 PLACEHOLDER-6)] (= PLACEHOLDER-1 num)))))))