((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([num PLACEHOLDER-2 PLACEHOLDER-3] (if (= num 0) (= PLACEHOLDER-2 0) (PLACEHOLDER-2 (quot num 10) (- PLACEHOLDER-2 (PLACEHOLDER-0 (mod num 10) PLACEHOLDER-3)) PLACEHOLDER-3))))) (def PLACEHOLDER-5 (fn* ([num PLACEHOLDER-6] (if (= num 0) PLACEHOLDER-6 (PLACEHOLDER-5 (quot num 10) (+ 1 PLACEHOLDER-6)))))) (def armstrong? (fn* ([num] (PLACEHOLDER-2 num num (PLACEHOLDER-5 num 0)))))))