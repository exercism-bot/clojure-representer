((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-4 (fn* ([num PLACEHOLDER-1 PLACEHOLDER-6] (if (= num 0) (= PLACEHOLDER-1 0) (PLACEHOLDER-4 (quot num 10) (- PLACEHOLDER-1 (PLACEHOLDER-3 (mod num 10) PLACEHOLDER-6)) PLACEHOLDER-6))))) (def PLACEHOLDER-7 (fn* ([num PLACEHOLDER-5] (if (= num 0) PLACEHOLDER-5 (PLACEHOLDER-7 (quot num 10) (+ 1 PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (PLACEHOLDER-4 num num (PLACEHOLDER-7 num 0)))))))