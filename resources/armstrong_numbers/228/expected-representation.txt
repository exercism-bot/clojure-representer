((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-4] (count (clojure.string/split (str PLACEHOLDER-4) (re-pattern "")))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-4] (map (fn* [PLACEHOLDER-3] (read-string PLACEHOLDER-3)) (clojure.string/split (str PLACEHOLDER-4) (re-pattern "")))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-4] (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-6 PLACEHOLDER-7 (PLACEHOLDER-5 PLACEHOLDER-4))) (PLACEHOLDER-1 PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-8 num) num))))))