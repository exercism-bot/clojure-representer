((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (count (clojure.string/split (str PLACEHOLDER-0) (re-pattern "")))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-2] (read-string PLACEHOLDER-2)) (clojure.string/split (str PLACEHOLDER-0) (re-pattern "")))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-3))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0] (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-3 PLACEHOLDER-5 (PLACEHOLDER-0 PLACEHOLDER-0))) (PLACEHOLDER-1 PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (= (PLACEHOLDER-4 num) num))))))