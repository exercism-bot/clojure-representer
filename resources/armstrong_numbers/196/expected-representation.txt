((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (loop* [PLACEHOLDER-0 1 PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) PLACEHOLDER-0 (recur (* PLACEHOLDER-0 PLACEHOLDER-0) (dec PLACEHOLDER-0))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (count (str num))] (= num (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-0 (Character/getNumericValue PLACEHOLDER-0) PLACEHOLDER-3))) (str num))))))))))