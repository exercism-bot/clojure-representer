(do
 (do
  (clojure.core/in-ns 'armstrong-numbers)
  ((fn*
    PLACEHOLDER-0
    ([]
     (do
      (clojure.lang.Var/pushThreadBindings
       #:clojure.lang.Compiler{LOADER
                               (.getClassLoader
                                (.getClass PLACEHOLDER-0))})
      (try
       (clojure.core/refer 'clojure.core)
       (finally (clojure.lang.Var/popThreadBindings)))))))
  (if
   (.equals 'armstrong-numbers 'clojure.core)
   nil
   (do
    (clojure.lang.LockingTransaction/runInTransaction
     (fn*
      ([]
       (clojure.core/commute
        @#'clojure.core/*loaded-libs*
        clojure.core/conj
        'armstrong-numbers))))
    nil)))
 (def
  PLACEHOLDER-8
  (fn*
   ([PLACEHOLDER-1]
    (let*
     [PLACEHOLDER-2
      (PLACEHOLDER-9 PLACEHOLDER-1)
      PLACEHOLDER-3
      (clojure.lang.RT/count PLACEHOLDER-2)]
     (clojure.lang.Util/equiv
      PLACEHOLDER-1
      (reduce
       +
       (map
        (fn*
         ([PLACEHOLDER-4]
          (PLACEHOLDER-10 PLACEHOLDER-4 PLACEHOLDER-3)))
        PLACEHOLDER-2)))))))
 (def
  PLACEHOLDER-9
  (fn*
   ([PLACEHOLDER-5] (map (comp read-string str) (str PLACEHOLDER-5)))))
 (def
  PLACEHOLDER-10
  (fn*
   ([PLACEHOLDER-6 PLACEHOLDER-7]
    (reduce * (repeat PLACEHOLDER-7 PLACEHOLDER-6))))))
