((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) 1 (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (- PLACEHOLDER-0 1))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0] (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (clojure.string/split (str PLACEHOLDER-0) (re-pattern "(?=[0-9])")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-3 num)] (let* [PLACEHOLDER-0 (count PLACEHOLDER-4)] (= (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 PLACEHOLDER-0)) PLACEHOLDER-4)) num))))))))