((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-5] (if (zero? PLACEHOLDER-5) 1 (* PLACEHOLDER-4 (PLACEHOLDER-3 PLACEHOLDER-4 (- PLACEHOLDER-5 1))))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4] (map (fn* [PLACEHOLDER-0] (Integer/parseInt PLACEHOLDER-0)) (clojure.string/split (str PLACEHOLDER-4) (re-pattern "(?=[0-9])")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-6 num)] (let* [PLACEHOLDER-5 (count PLACEHOLDER-1)] (= (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-3 PLACEHOLDER-2 PLACEHOLDER-5)) PLACEHOLDER-1)) num))))))))