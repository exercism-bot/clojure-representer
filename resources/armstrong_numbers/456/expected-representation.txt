((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3 PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1 (* PLACEHOLDER-3 (PLACEHOLDER-1 PLACEHOLDER-3 (- PLACEHOLDER-4 1))))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3] (map (fn* [PLACEHOLDER-2] (Integer/parseInt PLACEHOLDER-2)) (clojure.string/split (str PLACEHOLDER-3) (re-pattern "(?=[0-9])")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-6 num)] (let* [PLACEHOLDER-4 (count PLACEHOLDER-0)] (= (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-1 PLACEHOLDER-5 PLACEHOLDER-4)) PLACEHOLDER-0)) num))))))))