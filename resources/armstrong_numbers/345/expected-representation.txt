((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (apply * (repeat PLACEHOLDER-3 PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1] (- (int PLACEHOLDER-1) 48)))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1] (map PLACEHOLDER-2 (str PLACEHOLDER-1))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-1] (count (str PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-4 PLACEHOLDER-0 (PLACEHOLDER-6 num))) (PLACEHOLDER-5 num)))))))))