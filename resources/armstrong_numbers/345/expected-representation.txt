((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (apply * (repeat PLACEHOLDER-0 PLACEHOLDER-0))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (- (int PLACEHOLDER-0) 48)))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (map PLACEHOLDER-0 (str PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0] (count (str PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-4 (PLACEHOLDER-3 num))) (PLACEHOLDER-1 num)))))))))