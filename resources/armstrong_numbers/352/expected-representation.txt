((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4] (map (comp read-string str) (str PLACEHOLDER-4))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-6 num) PLACEHOLDER-3 (count PLACEHOLDER-7) PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-5 PLACEHOLDER-2 PLACEHOLDER-3)) PLACEHOLDER-7))] (= num PLACEHOLDER-1)))))))