((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-5
   (fn*
    ([PLACEHOLDER-2]
     (if
      (not (zero? PLACEHOLDER-2))
      (do
       (concat
        (PLACEHOLDER-5 (quot PLACEHOLDER-2 10))
        [(mod PLACEHOLDER-2 10)]))))))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-4]
     (if
      (zero? PLACEHOLDER-4)
      1
      (do
       (*
        (PLACEHOLDER-6 PLACEHOLDER-0 (- PLACEHOLDER-4 1))
        PLACEHOLDER-0))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-2]
     (let*
      [PLACEHOLDER-1
       (PLACEHOLDER-5 PLACEHOLDER-2)
       PLACEHOLDER-3
       (PLACEHOLDER-4 PLACEHOLDER-1)]
      (=
       PLACEHOLDER-2
       (reduce
        +
        (map
         (fn*
          ([PLACEHOLDER-2]
           (PLACEHOLDER-6 PLACEHOLDER-2 PLACEHOLDER-3)))
         PLACEHOLDER-1)))))))))
