((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (loop* [PLACEHOLDER-1 1 PLACEHOLDER-1 PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) PLACEHOLDER-1 (recur (* PLACEHOLDER-0 PLACEHOLDER-1) (dec PLACEHOLDER-1))))))) (def armstrong? (fn* ([num] (def PLACEHOLDER-4 (map read-string (PLACEHOLDER-4 (str num) (re-pattern "")))) (def PLACEHOLDER-4 (count PLACEHOLDER-4)) (if (let* [PLACEHOLDER-5 (>= num 10)] (if PLACEHOLDER-5 (<= num 100) PLACEHOLDER-5)) false (if (< num 10) true (if (= num (apply + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-0 PLACEHOLDER-7 PLACEHOLDER-4)) PLACEHOLDER-4))) true (if :else false nil)))))))))