((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (loop* [PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-0 0] (if (= PLACEHOLDER-0 0) PLACEHOLDER-0 (if (>= PLACEHOLDER-0 0) (recur (quot PLACEHOLDER-0 10) (inc PLACEHOLDER-0)) nil)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (apply * (take PLACEHOLDER-3 (repeat PLACEHOLDER-2)))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0] (loop* [PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-4 0] (if (= PLACEHOLDER-0 0) PLACEHOLDER-4 (if (>= PLACEHOLDER-0 0) (recur (quot PLACEHOLDER-0 10) (+ PLACEHOLDER-4 (long (PLACEHOLDER-2 (mod PLACEHOLDER-0 10) (PLACEHOLDER-0 PLACEHOLDER-0))))) nil)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-3 num)))))))