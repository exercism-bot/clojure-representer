((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-3] (loop* [PLACEHOLDER-0 PLACEHOLDER-3 PLACEHOLDER-8 0] (if (= PLACEHOLDER-0 0) PLACEHOLDER-8 (if (>= PLACEHOLDER-3 0) (recur (quot PLACEHOLDER-0 10) (inc PLACEHOLDER-8)) nil)))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1 PLACEHOLDER-4] (apply * (take PLACEHOLDER-4 (repeat PLACEHOLDER-1)))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-3] (loop* [PLACEHOLDER-0 PLACEHOLDER-3 PLACEHOLDER-2 0] (if (= PLACEHOLDER-0 0) PLACEHOLDER-2 (if (>= PLACEHOLDER-3 0) (recur (quot PLACEHOLDER-0 10) (+ PLACEHOLDER-2 (long (PLACEHOLDER-5 (mod PLACEHOLDER-0 10) (PLACEHOLDER-6 PLACEHOLDER-3))))) nil)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-7 num)))))))