((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-2 PLACEHOLDER-10] (reduce (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] (*' PLACEHOLDER-1 PLACEHOLDER-2))) 1N (range PLACEHOLDER-10))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-7] (int (clojure.math/log10 PLACEHOLDER-7))))) (def armstrong? (fn* ([PLACEHOLDER-7] (let* [PLACEHOLDER-5 (zero? PLACEHOLDER-7)] (if PLACEHOLDER-5 PLACEHOLDER-5 (let* [PLACEHOLDER-0 (bigint PLACEHOLDER-7) PLACEHOLDER-4 (inc (PLACEHOLDER-3 PLACEHOLDER-7))] (loop* [PLACEHOLDER-9 PLACEHOLDER-0 PLACEHOLDER-7 PLACEHOLDER-0] (if (zero? PLACEHOLDER-7) (zero? PLACEHOLDER-9) (recur (-' PLACEHOLDER-9 (PLACEHOLDER-8 (rem PLACEHOLDER-7 10) PLACEHOLDER-4)) (quot PLACEHOLDER-7 10))))))))))))