((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([num] (PLACEHOLDER-9 num [] 10)) ([num PLACEHOLDER-1 PLACEHOLDER-7] (let* [PLACEHOLDER-2 (mod num PLACEHOLDER-7)] (if (pos? num) (PLACEHOLDER-9 (- num PLACEHOLDER-2) (conj PLACEHOLDER-1 (/ PLACEHOLDER-2 (/ PLACEHOLDER-7 10))) (* PLACEHOLDER-7 10)) PLACEHOLDER-1))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-9 num) PLACEHOLDER-4 (count PLACEHOLDER-6)] (if (= num 0) true (= num (apply + (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-5 PLACEHOLDER-8 PLACEHOLDER-4)) PLACEHOLDER-6))))))))))