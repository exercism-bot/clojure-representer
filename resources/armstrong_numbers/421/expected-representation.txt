((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    PLACEHOLDER-0
    (do
     (clojure.core/-add-loaded-lib 'armstrong-numbers)
     PLACEHOLDER-0)))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-4]
     (loop*
      [PLACEHOLDER-3 1 PLACEHOLDER-4 PLACEHOLDER-4]
      (if
       (zero? PLACEHOLDER-4)
       PLACEHOLDER-3
       (recur (* PLACEHOLDER-1 PLACEHOLDER-3) (dec PLACEHOLDER-4)))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-2]
     (let*
      [PLACEHOLDER-4
       (count (str PLACEHOLDER-2))
       PLACEHOLDER-5
       (map
        (fn* [p1#] (Character/digit p1# 10))
        (seq (str PLACEHOLDER-2)))]
      (if
       (= PLACEHOLDER-4 1)
       true
       (if
        (= PLACEHOLDER-4 2)
        false
        (if
         (>= PLACEHOLDER-4 3)
         (if
          (=
           (reduce
            (fn*
             ([PLACEHOLDER-3 PLACEHOLDER-1]
              (+
               PLACEHOLDER-3
               (PLACEHOLDER-6 PLACEHOLDER-1 PLACEHOLDER-4))))
            0
            PLACEHOLDER-5)
           PLACEHOLDER-2)
          true
          false)
         (if :else false PLACEHOLDER-0))))))))))
