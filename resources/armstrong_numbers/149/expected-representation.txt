((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-7] (reduce * (repeat PLACEHOLDER-7 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (map (fn* [PLACEHOLDER-5] (Integer/parseInt PLACEHOLDER-5)) (PLACEHOLDER-3 (str num) (re-pattern "")))] (= num (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-0 PLACEHOLDER-2 (count PLACEHOLDER-6))) PLACEHOLDER-6)))))))))