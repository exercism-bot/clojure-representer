((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-3] (Integer/parseInt PLACEHOLDER-3)) (PLACEHOLDER-5 (str num) (re-pattern "")))] (= num (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-6 PLACEHOLDER-6 (count PLACEHOLDER-3))) PLACEHOLDER-3)))))))))