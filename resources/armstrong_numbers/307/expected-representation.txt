((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-1 PLACEHOLDER-7]
     (loop*
      [PLACEHOLDER-6 1 PLACEHOLDER-7 PLACEHOLDER-7]
      (if
       (zero? PLACEHOLDER-7)
       PLACEHOLDER-6
       (recur (* PLACEHOLDER-1 PLACEHOLDER-6) (dec PLACEHOLDER-7)))))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-5]
     (loop*
      [PLACEHOLDER-3
       0
       PLACEHOLDER-8
       PLACEHOLDER-5
       PLACEHOLDER-0
       (count (str PLACEHOLDER-5))
       PLACEHOLDER-2
       (count (str PLACEHOLDER-8))]
      (let*
       [PLACEHOLDER-4
        (int (/ PLACEHOLDER-8 (PLACEHOLDER-9 10 (- PLACEHOLDER-2 1))))]
       (if
        (let*
         [and__auto__ (= PLACEHOLDER-8 0)]
         (if and__auto__ (= PLACEHOLDER-3 PLACEHOLDER-5) and__auto__))
        true
        (if
         (let*
          [and__auto__ (= PLACEHOLDER-8 0)]
          (if
           and__auto__
           (not (= PLACEHOLDER-3 PLACEHOLDER-5))
           and__auto__))
         false
         (if
          :else
          (recur
           (+
            (PLACEHOLDER-9 PLACEHOLDER-4 PLACEHOLDER-0)
            PLACEHOLDER-3)
           (-
            PLACEHOLDER-8
            (* PLACEHOLDER-4 (PLACEHOLDER-9 10 (- PLACEHOLDER-2 1))))
           PLACEHOLDER-0
           (count (str PLACEHOLDER-8)))
          nil))))))))))
