((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-7 (map (fn* [PLACEHOLDER-5] (Character/getNumericValue PLACEHOLDER-5)) (seq (str PLACEHOLDER-3))) PLACEHOLDER-2 (count PLACEHOLDER-7)] (= (bigint PLACEHOLDER-3) (bigint (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-6 PLACEHOLDER-1 PLACEHOLDER-2)) PLACEHOLDER-7))))))))))