((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-5 (map (fn* [PLACEHOLDER-6] (Character/getNumericValue PLACEHOLDER-6)) (seq (str PLACEHOLDER-2))) PLACEHOLDER-1 (count PLACEHOLDER-5)] (= (bigint PLACEHOLDER-2) (bigint (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-4 PLACEHOLDER-7 PLACEHOLDER-1)) PLACEHOLDER-5))))))))))