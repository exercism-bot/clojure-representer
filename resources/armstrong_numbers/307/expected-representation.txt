((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-7 (map (fn* [PLACEHOLDER-1] (Character/getNumericValue PLACEHOLDER-1)) (seq (str PLACEHOLDER-4))) PLACEHOLDER-3 (count PLACEHOLDER-7)] (= (bigint PLACEHOLDER-4) (bigint (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-6 PLACEHOLDER-2 PLACEHOLDER-3)) PLACEHOLDER-7))))))))))