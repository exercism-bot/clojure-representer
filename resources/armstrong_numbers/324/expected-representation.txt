((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (if (= PLACEHOLDER-1 0) 1 (if (even? PLACEHOLDER-1) (PLACEHOLDER-0 (* PLACEHOLDER-0 PLACEHOLDER-0) (/ PLACEHOLDER-1 2)) (* PLACEHOLDER-0 (PLACEHOLDER-0 PLACEHOLDER-0 (- PLACEHOLDER-1 1)))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (map (fn* [PLACEHOLDER-5] (Character/getNumericValue PLACEHOLDER-5)) (str num)) PLACEHOLDER-5 (count PLACEHOLDER-5) PLACEHOLDER-6 (map (fn* ([PLACEHOLDER-6] (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-5))) PLACEHOLDER-5) PLACEHOLDER-8 (reduce + PLACEHOLDER-6)] (= num PLACEHOLDER-8)))))))