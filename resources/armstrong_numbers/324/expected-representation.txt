((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-2 PLACEHOLDER-4] (if (= PLACEHOLDER-4 0) 1 (if (even? PLACEHOLDER-4) (PLACEHOLDER-6 (* PLACEHOLDER-2 PLACEHOLDER-2) (/ PLACEHOLDER-4 2)) (* PLACEHOLDER-2 (PLACEHOLDER-6 PLACEHOLDER-2 (- PLACEHOLDER-4 1)))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (map (fn* [PLACEHOLDER-8] (Character/getNumericValue PLACEHOLDER-8)) (str num)) PLACEHOLDER-3 (count PLACEHOLDER-7) PLACEHOLDER-5 (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-6 PLACEHOLDER-1 PLACEHOLDER-3))) PLACEHOLDER-7) PLACEHOLDER-0 (reduce + PLACEHOLDER-5)] (= num PLACEHOLDER-0)))))))