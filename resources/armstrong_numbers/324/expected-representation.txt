((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-2 PLACEHOLDER-5] (if (= PLACEHOLDER-5 0) 1 (if (even? PLACEHOLDER-5) (PLACEHOLDER-7 (* PLACEHOLDER-2 PLACEHOLDER-2) (/ PLACEHOLDER-5 2)) (* PLACEHOLDER-2 (PLACEHOLDER-7 PLACEHOLDER-2 (- PLACEHOLDER-5 1)))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-8 (map (fn* [PLACEHOLDER-3] (Character/getNumericValue PLACEHOLDER-3)) (str num)) PLACEHOLDER-4 (count PLACEHOLDER-8) PLACEHOLDER-6 (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-7 PLACEHOLDER-1 PLACEHOLDER-4))) PLACEHOLDER-8) PLACEHOLDER-0 (reduce + PLACEHOLDER-6)] (= num PLACEHOLDER-0)))))))