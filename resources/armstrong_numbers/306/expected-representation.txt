((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (if (pos? num) (conj (PLACEHOLDER-3 (quot num 10)) (mod num 10)) [])))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-3 num) PLACEHOLDER-5 (count PLACEHOLDER-6)] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-2 PLACEHOLDER-4 PLACEHOLDER-5)) PLACEHOLDER-6)))))))))