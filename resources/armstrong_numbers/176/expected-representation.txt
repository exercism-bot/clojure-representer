((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (if (< PLACEHOLDER-3 10) [PLACEHOLDER-3] (conj (PLACEHOLDER-2 (quot PLACEHOLDER-3 10)) (rem PLACEHOLDER-3 10)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-7] (if (zero? PLACEHOLDER-7) 1 (* PLACEHOLDER-1 (PLACEHOLDER-4 PLACEHOLDER-1 (- PLACEHOLDER-7 1))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-2 num) PLACEHOLDER-0 (count PLACEHOLDER-5)] (= num (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-4 PLACEHOLDER-6 PLACEHOLDER-0)) PLACEHOLDER-5)))))))))