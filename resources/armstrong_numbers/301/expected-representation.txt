((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.string :as str])) (def PLACEHOLDER-2 (fn* ([num PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 num))))) (def armstrong? (fn* ([num] (= ((fn* ([PLACEHOLDER-1] (reduce + PLACEHOLDER-1))) ((fn* ([PLACEHOLDER-1] (map (fn* ([PLACEHOLDER-1] (PLACEHOLDER-2 PLACEHOLDER-1 (count (str num))))) PLACEHOLDER-1))) ((fn* ([PLACEHOLDER-1] (map (fn* ([PLACEHOLDER-1] (Integer/parseInt PLACEHOLDER-1))) PLACEHOLDER-1))) (PLACEHOLDER-0 (str num) (re-pattern ""))))) num))))))