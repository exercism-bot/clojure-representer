((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-3]
     (PLACEHOLDER-6 PLACEHOLDER-3 (if (= PLACEHOLDER-3 0) '(0) '())))
    ([PLACEHOLDER-3 PLACEHOLDER-4]
     (let*
      [PLACEHOLDER-5 (bigint PLACEHOLDER-3)]
      (if
       (= 0 PLACEHOLDER-5)
       PLACEHOLDER-4
       (recur
        (/ PLACEHOLDER-5 10)
        (cons (mod PLACEHOLDER-5 10) PLACEHOLDER-4)))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-0]
     (let*
      [PLACEHOLDER-2 (bigint PLACEHOLDER-0)]
      (let*
       [PLACEHOLDER-1
        (PLACEHOLDER-6 PLACEHOLDER-2)
        PLACEHOLDER-1
        (reduce
         (fn*
          [p1# p2#]
          (+' p1# (.pow (bigdec p2#) (count PLACEHOLDER-1))))
         0N
         PLACEHOLDER-1)
        PLACEHOLDER-1
        (bigint PLACEHOLDER-1)]
       (= PLACEHOLDER-2 PLACEHOLDER-1))))))))
