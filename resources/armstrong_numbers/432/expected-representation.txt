((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] "Takes a digit and length of num and returns the exponent, which is the digit raised to length" (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] "Takes a num and determines whether a number is an Armstrong number" (let* [PLACEHOLDER-2 (map (fn* [PLACEHOLDER-3] (read-string (str PLACEHOLDER-3))) (str num)) PLACEHOLDER-4 (count PLACEHOLDER-2)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-4)) PLACEHOLDER-2)))))))))