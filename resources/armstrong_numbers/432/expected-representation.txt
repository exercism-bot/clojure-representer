((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] "Takes a digit and length of num and returns the exponent, which is the digit raised to length" (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] "Takes a num and determines whether a number is an Armstrong number" (let* [PLACEHOLDER-4 (map (fn* [PLACEHOLDER-1] (read-string (str PLACEHOLDER-1))) (str num)) PLACEHOLDER-6 (count PLACEHOLDER-4)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-3 PLACEHOLDER-5 PLACEHOLDER-6)) PLACEHOLDER-4)))))))))