((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] "Takes a digit and length of num and returns the exponent, which is the digit raised to length" (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] "Takes a num and determines whether a number is an Armstrong number" (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-6] (read-string (str PLACEHOLDER-6))) (str num)) PLACEHOLDER-5 (count PLACEHOLDER-3)] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-2 PLACEHOLDER-4 PLACEHOLDER-5)) PLACEHOLDER-3)))))))))