((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([num] (map (fn* [PLACEHOLDER-6] (Integer/parseInt (str PLACEHOLDER-6))) (str num))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce *' (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-5 num) PLACEHOLDER-1 (count PLACEHOLDER-4)] (= (reduce +' (map (fn* ([PLACEHOLDER-7] (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-1))) PLACEHOLDER-4)) num))))) nil))