((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([num] (map (fn* [PLACEHOLDER-0] (Integer/parseInt (str PLACEHOLDER-0))) (str num))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (reduce *' (repeat PLACEHOLDER-3 PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-6 num) PLACEHOLDER-2 (count PLACEHOLDER-5)] (= (reduce +' (map (fn* ([PLACEHOLDER-7] (PLACEHOLDER-4 PLACEHOLDER-7 PLACEHOLDER-2))) PLACEHOLDER-5)) num))))) nil))