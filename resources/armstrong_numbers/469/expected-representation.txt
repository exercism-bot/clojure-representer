((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1] (let* [PLACEHOLDER-6 (map (comp read-string str) (str PLACEHOLDER-1)) PLACEHOLDER-3 (count PLACEHOLDER-6)] (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-2 PLACEHOLDER-4 PLACEHOLDER-3)) PLACEHOLDER-6)))))) (def armstrong? (fn* ([PLACEHOLDER-1] (= PLACEHOLDER-1 (PLACEHOLDER-5 PLACEHOLDER-1)))))))