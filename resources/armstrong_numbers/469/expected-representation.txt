((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-1))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-6 (map (comp read-string str) (str PLACEHOLDER-2)) PLACEHOLDER-4 (count PLACEHOLDER-6)] (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-3 PLACEHOLDER-0 PLACEHOLDER-4)) PLACEHOLDER-6)))))) (def armstrong? (fn* ([PLACEHOLDER-2] (= PLACEHOLDER-2 (PLACEHOLDER-5 PLACEHOLDER-2)))))))