((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-4] (map (comp read-string str) (str PLACEHOLDER-4))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-3 PLACEHOLDER-5] (reduce (fn* [PLACEHOLDER-9 PLACEHOLDER-2] (+ PLACEHOLDER-9 (PLACEHOLDER-6 PLACEHOLDER-2 PLACEHOLDER-5))) 0 PLACEHOLDER-3)))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-7 (PLACEHOLDER-8 num)] (PLACEHOLDER-1 PLACEHOLDER-7 (count PLACEHOLDER-7)))))))))