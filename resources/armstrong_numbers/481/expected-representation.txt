((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-5] (map (comp read-string str) (str PLACEHOLDER-5))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-4 PLACEHOLDER-6] (reduce (fn* [PLACEHOLDER-3 PLACEHOLDER-1] (+ PLACEHOLDER-3 (PLACEHOLDER-7 PLACEHOLDER-1 PLACEHOLDER-6))) 0 PLACEHOLDER-4)))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-8 (PLACEHOLDER-9 num)] (PLACEHOLDER-2 PLACEHOLDER-8 (count PLACEHOLDER-8)))))))))