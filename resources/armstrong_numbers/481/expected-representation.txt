((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-3] (map (comp read-string str) (str PLACEHOLDER-3))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-4] (reduce (fn* [PLACEHOLDER-9 PLACEHOLDER-8] (+ PLACEHOLDER-9 (PLACEHOLDER-5 PLACEHOLDER-8 PLACEHOLDER-4))) 0 PLACEHOLDER-2)))) (def armstrong? (fn* ([num] (= num (let* [PLACEHOLDER-6 (PLACEHOLDER-7 num)] (PLACEHOLDER-1 PLACEHOLDER-6 (count PLACEHOLDER-6)))))))))