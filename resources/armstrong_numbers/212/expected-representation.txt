((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str]) (quote [clojure.math :as PLACEHOLDER-3])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-2] (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-4 PLACEHOLDER-1)) PLACEHOLDER-2)))) (def PLACEHOLDER-5 (fn* ([num] (PLACEHOLDER-8 (PLACEHOLDER-7 (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-9 (PLACEHOLDER-5 num) PLACEHOLDER-6 (count PLACEHOLDER-9)] (= num (int (reduce + 0 (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-10 PLACEHOLDER-0 PLACEHOLDER-6)) PLACEHOLDER-9))))))))))