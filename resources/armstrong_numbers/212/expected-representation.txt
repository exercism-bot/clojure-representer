((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str]) (quote [clojure.math :as PLACEHOLDER-0])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1] (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-3 PLACEHOLDER-2)) PLACEHOLDER-1)))) (def PLACEHOLDER-4 (fn* ([num] (PLACEHOLDER-0 (PLACEHOLDER-6 (str num) (re-pattern "")))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-4 num) PLACEHOLDER-7 (count PLACEHOLDER-6)] (= num (int (reduce + 0 (map (fn* [PLACEHOLDER-8] (PLACEHOLDER-9 PLACEHOLDER-8 PLACEHOLDER-7)) PLACEHOLDER-6))))))))))