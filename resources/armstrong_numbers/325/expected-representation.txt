((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (map (comp read-string str) (str PLACEHOLDER-3))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0 PLACEHOLDER-1] (if (== PLACEHOLDER-1 1) PLACEHOLDER-3 (PLACEHOLDER-2 (* PLACEHOLDER-3 PLACEHOLDER-0) PLACEHOLDER-0 (- PLACEHOLDER-1 1)))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-3 PLACEHOLDER-1] (PLACEHOLDER-2 PLACEHOLDER-3 PLACEHOLDER-3 PLACEHOLDER-1)))) (def PLACEHOLDER-7 (fn* ([num] (let* [PLACEHOLDER-8 (PLACEHOLDER-5 num) PLACEHOLDER-6 (count PLACEHOLDER-8)] (reduce + (map (fn* ([PLACEHOLDER-3] (PLACEHOLDER-4 PLACEHOLDER-3 PLACEHOLDER-6))) PLACEHOLDER-8)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-7 num)))))))