((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-3] (if (pos? PLACEHOLDER-3) (do (cons (mod PLACEHOLDER-3 10) (PLACEHOLDER-5 (quot PLACEHOLDER-3 10)))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-3 PLACEHOLDER-0] (loop* [PLACEHOLDER-2 1 PLACEHOLDER-3 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) PLACEHOLDER-2 (recur (* PLACEHOLDER-0 PLACEHOLDER-2) (dec PLACEHOLDER-3))))))) (def PLACEHOLDER-6 (PLACEHOLDER-5 num)) (def PLACEHOLDER-1 (count PLACEHOLDER-6)) (def PLACEHOLDER-7 (map (partial PLACEHOLDER-4 PLACEHOLDER-1) PLACEHOLDER-6)) (= num (reduce + PLACEHOLDER-7)))))))