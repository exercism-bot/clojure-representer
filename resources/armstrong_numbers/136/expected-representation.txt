((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([num] (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (pos? PLACEHOLDER-0) (do (cons (mod PLACEHOLDER-0 10) (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (loop* [PLACEHOLDER-3 1 PLACEHOLDER-0 PLACEHOLDER-0] (if (zero? PLACEHOLDER-0) PLACEHOLDER-3 (recur (* PLACEHOLDER-3 PLACEHOLDER-3) (dec PLACEHOLDER-0))))))) (def PLACEHOLDER-4 (PLACEHOLDER-0 num)) (def PLACEHOLDER-5 (count PLACEHOLDER-4)) (def PLACEHOLDER-6 (map (partial PLACEHOLDER-2 PLACEHOLDER-5) PLACEHOLDER-4)) (= num (reduce + PLACEHOLDER-6)))))))