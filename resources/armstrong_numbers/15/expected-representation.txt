(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-6] (map (fn* [PLACEHOLDER-2] (mod PLACEHOLDER-2 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-3] (quot PLACEHOLDER-3 10)) PLACEHOLDER-6)))))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-7 (PLACEHOLDER-10 PLACEHOLDER-4) PLACEHOLDER-8 (count PLACEHOLDER-7) PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-9 PLACEHOLDER-5 PLACEHOLDER-8)) PLACEHOLDER-7))] (= PLACEHOLDER-4 PLACEHOLDER-1))))))))