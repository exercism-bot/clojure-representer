(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-0 PLACEHOLDER-4] (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-4] (map (fn* [PLACEHOLDER-7] (mod PLACEHOLDER-7 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-6] (quot PLACEHOLDER-6 10)) PLACEHOLDER-4)))))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-5 (PLACEHOLDER-10 PLACEHOLDER-2) PLACEHOLDER-8 (count PLACEHOLDER-5) PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-9 PLACEHOLDER-3 PLACEHOLDER-8)) PLACEHOLDER-5))] (= PLACEHOLDER-2 PLACEHOLDER-1))))))))