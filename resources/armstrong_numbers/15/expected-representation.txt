(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-1 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-1))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-5] (map (fn* [PLACEHOLDER-0] (mod PLACEHOLDER-0 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-8] (quot PLACEHOLDER-8 10)) PLACEHOLDER-5)))))) (def PLACEHOLDER-11 (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-6 (PLACEHOLDER-10 PLACEHOLDER-3) PLACEHOLDER-7 (count PLACEHOLDER-6) PLACEHOLDER-2 (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-9 PLACEHOLDER-4 PLACEHOLDER-7)) PLACEHOLDER-6))] (= PLACEHOLDER-3 PLACEHOLDER-2))))))))