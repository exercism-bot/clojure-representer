((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([num] (map (fn* ([PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10))) (str num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (count (PLACEHOLDER-2 num)) PLACEHOLDER-5 (PLACEHOLDER-2 num) PLACEHOLDER-6 (fn* [PLACEHOLDER-6] (PLACEHOLDER-0 PLACEHOLDER-6 PLACEHOLDER-4))] (= num (reduce + (map PLACEHOLDER-6 PLACEHOLDER-5)))))))))