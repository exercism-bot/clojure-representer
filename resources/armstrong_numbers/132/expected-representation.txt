((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def PLACEHOLDER-8 (fn* ([num] (map (fn* ([PLACEHOLDER-6] (Character/digit PLACEHOLDER-6 10))) (str num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (count (PLACEHOLDER-8 num)) PLACEHOLDER-5 (PLACEHOLDER-8 num) PLACEHOLDER-7 (fn* [PLACEHOLDER-2] (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-1))] (= num (reduce + (map PLACEHOLDER-7 PLACEHOLDER-5)))))))))