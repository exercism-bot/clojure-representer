((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-7 (fn* ([num] (map (fn* ([PLACEHOLDER-5] (Character/digit PLACEHOLDER-5 10))) (str num))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (count (PLACEHOLDER-7 num)) PLACEHOLDER-4 (PLACEHOLDER-7 num) PLACEHOLDER-6 (fn* [PLACEHOLDER-8] (PLACEHOLDER-3 PLACEHOLDER-8 PLACEHOLDER-1))] (= num (reduce + (map PLACEHOLDER-6 PLACEHOLDER-4)))))))))