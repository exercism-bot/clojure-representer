((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([num] (map (fn* [PLACEHOLDER-10] (Integer/parseInt PLACEHOLDER-10)) (PLACEHOLDER-4 (str num) (re-pattern "")))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-1 PLACEHOLDER-6] (long (loop* [PLACEHOLDER-5 1 PLACEHOLDER-6 PLACEHOLDER-6] (if (zero? PLACEHOLDER-6) PLACEHOLDER-5 (recur (* PLACEHOLDER-1 PLACEHOLDER-5) (dec PLACEHOLDER-6)))))))) (def PLACEHOLDER-2 (fn* ([num] (let* [PLACEHOLDER-9 (PLACEHOLDER-8 num) PLACEHOLDER-3 (count PLACEHOLDER-9)] (reduce (fn* [PLACEHOLDER-0 PLACEHOLDER-11] (+ PLACEHOLDER-0 (PLACEHOLDER-7 PLACEHOLDER-11 PLACEHOLDER-3))) 0 PLACEHOLDER-9))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 num)))))))