((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([num] (map (fn* [PLACEHOLDER-11] (Integer/parseInt PLACEHOLDER-11)) (PLACEHOLDER-3 (str num) (re-pattern "")))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (long (loop* [PLACEHOLDER-4 1 PLACEHOLDER-6 PLACEHOLDER-6] (if (zero? PLACEHOLDER-6) PLACEHOLDER-4 (recur (* PLACEHOLDER-0 PLACEHOLDER-4) (dec PLACEHOLDER-6)))))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-10 (PLACEHOLDER-9 num) PLACEHOLDER-2 (count PLACEHOLDER-10)] (reduce (fn* [PLACEHOLDER-8 PLACEHOLDER-5] (+ PLACEHOLDER-8 (PLACEHOLDER-7 PLACEHOLDER-5 PLACEHOLDER-2))) 0 PLACEHOLDER-10))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))