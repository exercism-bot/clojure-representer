((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-10 (fn* ([num] (map (fn* [PLACEHOLDER-6] (Integer/parseInt PLACEHOLDER-6)) (PLACEHOLDER-5 (str num) (re-pattern "")))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-0 PLACEHOLDER-8] (long (loop* [PLACEHOLDER-7 1 PLACEHOLDER-8 PLACEHOLDER-8] (if (zero? PLACEHOLDER-8) PLACEHOLDER-7 (recur (* PLACEHOLDER-0 PLACEHOLDER-7) (dec PLACEHOLDER-8)))))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-11 (PLACEHOLDER-10 num) PLACEHOLDER-4 (count PLACEHOLDER-11)] (reduce (fn* [PLACEHOLDER-2 PLACEHOLDER-3] (+ PLACEHOLDER-2 (PLACEHOLDER-9 PLACEHOLDER-3 PLACEHOLDER-4))) 0 PLACEHOLDER-11))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))