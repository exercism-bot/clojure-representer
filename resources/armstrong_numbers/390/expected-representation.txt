((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([num] (map (fn* [PLACEHOLDER-2] (Integer/parseInt PLACEHOLDER-2)) (PLACEHOLDER-4 (str num) (re-pattern "")))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0 PLACEHOLDER-7] (long (loop* [PLACEHOLDER-6 1 PLACEHOLDER-7 PLACEHOLDER-7] (if (zero? PLACEHOLDER-7) PLACEHOLDER-6 (recur (* PLACEHOLDER-0 PLACEHOLDER-6) (dec PLACEHOLDER-7)))))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-10 (PLACEHOLDER-9 num) PLACEHOLDER-3 (count PLACEHOLDER-10)] (reduce (fn* [PLACEHOLDER-5 PLACEHOLDER-11] (+ PLACEHOLDER-5 (PLACEHOLDER-8 PLACEHOLDER-11 PLACEHOLDER-3))) 0 PLACEHOLDER-10))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))