((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote clojure.string)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * 1 (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (clojure.string/split (str num) (re-pattern "")) PLACEHOLDER-2 (count PLACEHOLDER-1)] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-3 (Integer/parseInt PLACEHOLDER-4) PLACEHOLDER-2)) PLACEHOLDER-1)))))))))