((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote clojure.string)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * 1 (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (clojure.string/split (str num) (re-pattern "")) PLACEHOLDER-2 (count PLACEHOLDER-2)] (= num (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-0 (Integer/parseInt PLACEHOLDER-3) PLACEHOLDER-2)) PLACEHOLDER-2)))))))))