((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1] (map (comp read-string str) (str PLACEHOLDER-1))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 num PLACEHOLDER-5 (count (PLACEHOLDER-3 num))] (= PLACEHOLDER-4 (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-2 PLACEHOLDER-6 PLACEHOLDER-5)) (PLACEHOLDER-3 num))))))))))