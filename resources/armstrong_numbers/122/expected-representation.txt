((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-2] (map (comp read-string str) (str PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 num PLACEHOLDER-6 (count (PLACEHOLDER-4 num))] (= PLACEHOLDER-5 (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-6)) (PLACEHOLDER-4 num))))))))))