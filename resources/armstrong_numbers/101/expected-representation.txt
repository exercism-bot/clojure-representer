((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (loop* [PLACEHOLDER-1 1 PLACEHOLDER-2 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) PLACEHOLDER-1 (recur (* PLACEHOLDER-0 PLACEHOLDER-1) (dec PLACEHOLDER-2))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (count (str num)) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-4] (Character/digit PLACEHOLDER-4 10)) (seq (str num)))] (if (= PLACEHOLDER-2 1) true (if (= PLACEHOLDER-2 2) false (if (>= PLACEHOLDER-2 3) (if (= (reduce (fn* ([PLACEHOLDER-1 PLACEHOLDER-0] (+ PLACEHOLDER-1 (PLACEHOLDER-3 PLACEHOLDER-0 PLACEHOLDER-2)))) 0 PLACEHOLDER-5) num) true false) (if :else false nil))))))))))