((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (loop* [PLACEHOLDER-2 1 PLACEHOLDER-3 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) PLACEHOLDER-2 (recur (* PLACEHOLDER-0 PLACEHOLDER-2) (dec PLACEHOLDER-3))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (count (str num)) PLACEHOLDER-5 (map (fn* [PLACEHOLDER-1] (Character/digit PLACEHOLDER-1 10)) (seq (str num)))] (if (= PLACEHOLDER-3 1) true (if (= PLACEHOLDER-3 2) false (if (>= PLACEHOLDER-3 3) (if (= (reduce (fn* ([PLACEHOLDER-2 PLACEHOLDER-0] (+ PLACEHOLDER-2 (PLACEHOLDER-4 PLACEHOLDER-0 PLACEHOLDER-3)))) 0 PLACEHOLDER-5) num) true false) (if :else false nil))))))))))