((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([num] (map (fn* [PLACEHOLDER-3] (- (int PLACEHOLDER-3) 48)) (seq (str num)))))) (def PLACEHOLDER-6 (fn* ([num PLACEHOLDER-2] (if (= PLACEHOLDER-2 0) 1 (* num (PLACEHOLDER-6 num (dec PLACEHOLDER-2))))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-4 num) PLACEHOLDER-2 (count PLACEHOLDER-0)] (reduce (fn* ([PLACEHOLDER-7 PLACEHOLDER-5] (+ PLACEHOLDER-7 (PLACEHOLDER-6 PLACEHOLDER-5 PLACEHOLDER-2)))) (long 0) PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))