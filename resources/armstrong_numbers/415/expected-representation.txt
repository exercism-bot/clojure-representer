((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.math.numeric-tower :as PLACEHOLDER-1 :refer [PLACEHOLDER-3]])) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-4] (PLACEHOLDER-5 PLACEHOLDER-4 ())) ([PLACEHOLDER-4 PLACEHOLDER-0] (if (<= PLACEHOLDER-4 0) PLACEHOLDER-0 (PLACEHOLDER-5 (quot PLACEHOLDER-4 10) (cons (rem PLACEHOLDER-4 10) PLACEHOLDER-0)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-5 num) PLACEHOLDER-2 (count PLACEHOLDER-0)] (= num (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-3 PLACEHOLDER-6 PLACEHOLDER-2)) PLACEHOLDER-0)))))))))