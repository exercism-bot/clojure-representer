((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (require (quote [clojure.math.numeric-tower :as PLACEHOLDER-0 :refer [PLACEHOLDER-0]])) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 ())) ([PLACEHOLDER-0 PLACEHOLDER-2] (if (<= PLACEHOLDER-0 0) PLACEHOLDER-2 (PLACEHOLDER-0 (quot PLACEHOLDER-0 10) (cons (rem PLACEHOLDER-0 10) PLACEHOLDER-2)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-0 num) PLACEHOLDER-4 (count PLACEHOLDER-2)] (= num (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-4)) PLACEHOLDER-2)))))))))