((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-4
   (fn*
    ([PLACEHOLDER-3]
     (if
      (pos? PLACEHOLDER-3)
      (conj
       (PLACEHOLDER-4 (quot PLACEHOLDER-3 10))
       (mod PLACEHOLDER-3 10))
      []))))
  (def
   PLACEHOLDER-5
   (fn* ([PLACEHOLDER-2] (count (PLACEHOLDER-4 PLACEHOLDER-2)))))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-3]
     (reduce
      +
      (let*
       [iter__auto__
        (fn*
         iter
         ([s]
          (new
           clojure.lang.LazySeq
           (fn*
            []
            (loop*
             [s s]
             (let*
              [s (clojure.core/seq s)]
              (if
               s
               (do
                (if
                 (clojure.core/chunked-seq? s)
                 (let*
                  [c__auto__
                   (clojure.core/chunk-first s)
                   size__auto__
                   (clojure.core/int (clojure.core/count c__auto__))
                   b
                   (clojure.core/chunk-buffer size__auto__)]
                  (if
                   (loop*
                    [i (clojure.core/int 0)]
                    (if
                     (clojure.core/< i size__auto__)
                     (let*
                      [PLACEHOLDER-0 (clojure.core/nth c__auto__ i)]
                      (let*
                       [PLACEHOLDER-1
                        (.pow
                         (biginteger PLACEHOLDER-0)
                         (PLACEHOLDER-5 PLACEHOLDER-3))]
                       (do
                        (clojure.core/chunk-append b PLACEHOLDER-1)
                        (recur (clojure.core/unchecked-inc i)))))
                     true))
                   (clojure.core/chunk-cons
                    (clojure.core/chunk b)
                    (iter (clojure.core/chunk-rest s)))
                   (clojure.core/chunk-cons
                    (clojure.core/chunk b)
                    nil)))
                 (let*
                  [PLACEHOLDER-0 (clojure.core/first s)]
                  (let*
                   [PLACEHOLDER-1
                    (.pow
                     (biginteger PLACEHOLDER-0)
                     (PLACEHOLDER-5 PLACEHOLDER-3))]
                   (clojure.core/cons
                    PLACEHOLDER-1
                    (iter (clojure.core/rest s))))))))))))))]
       (iter__auto__ (PLACEHOLDER-4 PLACEHOLDER-3)))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-2]
     (== PLACEHOLDER-2 (PLACEHOLDER-6 PLACEHOLDER-2)))))))
