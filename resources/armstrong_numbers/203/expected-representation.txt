((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (count (str num))))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0] (reduce * 1 (map (fn* ([PLACEHOLDER-0] PLACEHOLDER-0)) (range PLACEHOLDER-0)))))) (def PLACEHOLDER-1 (fn* ([num] (map (fn* ([PLACEHOLDER-0] (quot (mod num (PLACEHOLDER-0 10 (+ PLACEHOLDER-0 1))) (PLACEHOLDER-0 10 PLACEHOLDER-0)))) (range (PLACEHOLDER-0 num)))))) (def armstrong? (fn* ([num] (= num (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-0 PLACEHOLDER-0 (PLACEHOLDER-0 num)))) (PLACEHOLDER-1 num)))))))))