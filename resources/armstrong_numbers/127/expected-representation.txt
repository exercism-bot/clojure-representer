((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num PLACEHOLDER-1 PLACEHOLDER-5 PLACEHOLDER-2] (if (< PLACEHOLDER-1 10) (= (+ (PLACEHOLDER-4 PLACEHOLDER-1 PLACEHOLDER-5) PLACEHOLDER-2) num) (if :else (armstrong? num (quot PLACEHOLDER-1 10) PLACEHOLDER-5 (+ (PLACEHOLDER-4 (mod PLACEHOLDER-1 10) PLACEHOLDER-5) PLACEHOLDER-2)) nil))) ([num] (armstrong? num num (count (str num)) 0))))))