((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 num] (reduce * (repeat PLACEHOLDER-0 (bigint num)))))) (def armstrong? (fn* ([PLACEHOLDER-2] (= (bigint PLACEHOLDER-2) (let* [PLACEHOLDER-3 (PLACEHOLDER-3 (str PLACEHOLDER-2) (re-pattern ""))] (let* [PLACEHOLDER-0 (count PLACEHOLDER-3)] (reduce + (map (fn* ([PLACEHOLDER-4] (PLACEHOLDER-0 PLACEHOLDER-0 (Integer/parseInt PLACEHOLDER-4)))) PLACEHOLDER-3))))))))))