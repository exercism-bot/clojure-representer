((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-4 num] (reduce * (repeat PLACEHOLDER-4 (bigint num)))))) (def armstrong? (fn* ([PLACEHOLDER-5] (= (bigint PLACEHOLDER-5) (let* [PLACEHOLDER-3 (PLACEHOLDER-1 (str PLACEHOLDER-5) (re-pattern ""))] (let* [PLACEHOLDER-4 (count PLACEHOLDER-3)] (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-2 PLACEHOLDER-4 (Integer/parseInt PLACEHOLDER-0)))) PLACEHOLDER-3))))))))))