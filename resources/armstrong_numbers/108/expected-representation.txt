((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (if (pos? PLACEHOLDER-0) (conj (PLACEHOLDER-0 (quot PLACEHOLDER-0 10)) (mod PLACEHOLDER-0 10)) [])))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-2 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1 (* PLACEHOLDER-2 (PLACEHOLDER-2 PLACEHOLDER-2 (dec PLACEHOLDER-3))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 PLACEHOLDER-0) PLACEHOLDER-4 (count PLACEHOLDER-4)] (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-2 PLACEHOLDER-5 PLACEHOLDER-4)) PLACEHOLDER-4)))))) (def armstrong? (fn* ([PLACEHOLDER-0] (= PLACEHOLDER-0 (PLACEHOLDER-4 PLACEHOLDER-0)))))))