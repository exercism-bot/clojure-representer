((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-5] (if (pos? PLACEHOLDER-5) (conj (PLACEHOLDER-6 (quot PLACEHOLDER-5 10)) (mod PLACEHOLDER-5 10)) [])))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1 (* PLACEHOLDER-0 (PLACEHOLDER-4 PLACEHOLDER-0 (dec PLACEHOLDER-3))))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-5] (let* [PLACEHOLDER-7 (PLACEHOLDER-6 PLACEHOLDER-5) PLACEHOLDER-8 (count PLACEHOLDER-7)] (apply + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-8)) PLACEHOLDER-7)))))) (def armstrong? (fn* ([PLACEHOLDER-5] (= PLACEHOLDER-5 (PLACEHOLDER-1 PLACEHOLDER-5)))))))