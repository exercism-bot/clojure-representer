((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-4] (if (pos? PLACEHOLDER-4) (conj (PLACEHOLDER-5 (quot PLACEHOLDER-4 10)) (mod PLACEHOLDER-4 10)) [])))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) 1 (* PLACEHOLDER-0 (PLACEHOLDER-3 PLACEHOLDER-0 (dec PLACEHOLDER-2))))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-4] (let* [PLACEHOLDER-6 (PLACEHOLDER-5 PLACEHOLDER-4) PLACEHOLDER-8 (count PLACEHOLDER-6)] (apply + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-8)) PLACEHOLDER-6)))))) (def armstrong? (fn* ([PLACEHOLDER-4] (= PLACEHOLDER-4 (PLACEHOLDER-1 PLACEHOLDER-4)))))))