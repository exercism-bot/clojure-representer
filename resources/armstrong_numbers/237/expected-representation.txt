((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1] (count (str PLACEHOLDER-1))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1 PLACEHOLDER-2] (reduce (fn* ([PLACEHOLDER-2 PLACEHOLDER-2] (PLACEHOLDER-2 PLACEHOLDER-2 PLACEHOLDER-2))) (PLACEHOLDER-3) (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-4 (PLACEHOLDER-5 (PLACEHOLDER-5 (PLACEHOLDER-5 PLACEHOLDER-4))) PLACEHOLDER-2)) (clojure.string/split (str PLACEHOLDER-1) (re-pattern ""))))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-5 num) PLACEHOLDER-2 (PLACEHOLDER-0 num) PLACEHOLDER-10 (PLACEHOLDER-2 PLACEHOLDER-1 PLACEHOLDER-2)] (PLACEHOLDER-13 PLACEHOLDER-1 PLACEHOLDER-10)))))))