((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-7 PLACEHOLDER-1] "`b` raised to the power of `n`" (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-7))))) (def PLACEHOLDER-5 (fn* ([num] (let* [PLACEHOLDER-4 (map (fn* [PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10)) (map char (str num))) PLACEHOLDER-6 (count PLACEHOLDER-4)] (reduce + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-2 PLACEHOLDER-0 PLACEHOLDER-6)) PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (if (= num (PLACEHOLDER-5 num)) true false))))))