(((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-1] (if (= PLACEHOLDER-1 0) 1 (inc (int (Math/log10 PLACEHOLDER-1))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (Character/digit (nth (seq (str PLACEHOLDER-1)) PLACEHOLDER-3) 10)))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (loop* [acc 1 PLACEHOLDER-2 PLACEHOLDER-2] (if (zero? PLACEHOLDER-2) acc (recur (* PLACEHOLDER-0 acc) (dec PLACEHOLDER-2))))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-1 PLACEHOLDER-3] (PLACEHOLDER-6 (PLACEHOLDER-5 PLACEHOLDER-1 PLACEHOLDER-3) (PLACEHOLDER-4 PLACEHOLDER-1))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-1] (loop* [digit-position 0 acc 0] (if (< digit-position (dec (PLACEHOLDER-4 PLACEHOLDER-1))) (recur (inc digit-position) (+ acc (PLACEHOLDER-7 PLACEHOLDER-1 digit-position))) (+ acc (PLACEHOLDER-7 PLACEHOLDER-1 digit-position))))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-1] (= (PLACEHOLDER-8 PLACEHOLDER-1) PLACEHOLDER-1)))))))