((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-6
   (fn*
    ([PLACEHOLDER-2]
     (if
      (= PLACEHOLDER-2 0)
      1
      (inc (int (Math/log10 PLACEHOLDER-2)))))))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-2 PLACEHOLDER-5]
     (Character/digit
      (nth (seq (str PLACEHOLDER-2)) PLACEHOLDER-5)
      10))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-4]
     (loop*
      [PLACEHOLDER-3 1 PLACEHOLDER-4 PLACEHOLDER-4]
      (if
       (zero? PLACEHOLDER-4)
       PLACEHOLDER-3
       (recur (* PLACEHOLDER-0 PLACEHOLDER-3) (dec PLACEHOLDER-4)))))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-2 PLACEHOLDER-5]
     (PLACEHOLDER-8
      (PLACEHOLDER-7 PLACEHOLDER-2 PLACEHOLDER-5)
      (PLACEHOLDER-6 PLACEHOLDER-2)))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-2]
     (loop*
      [PLACEHOLDER-1 0 PLACEHOLDER-3 0]
      (if
       (< PLACEHOLDER-1 (dec (PLACEHOLDER-6 PLACEHOLDER-2)))
       (recur
        (inc PLACEHOLDER-1)
        (+ PLACEHOLDER-3 (PLACEHOLDER-9 PLACEHOLDER-2 PLACEHOLDER-1)))
       (+
        PLACEHOLDER-3
        (PLACEHOLDER-9 PLACEHOLDER-2 PLACEHOLDER-1)))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-2]
     (= (PLACEHOLDER-10 PLACEHOLDER-2) PLACEHOLDER-2))))))
