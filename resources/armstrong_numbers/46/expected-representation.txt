((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-7 PLACEHOLDER-0] "`b` raised to the power of `n`" (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-7))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-3 (map (fn* [PLACEHOLDER-2] (Character/digit PLACEHOLDER-2 10)) (map char (str num))) PLACEHOLDER-5 (count PLACEHOLDER-3)] (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-1 PLACEHOLDER-6 PLACEHOLDER-5)) PLACEHOLDER-3)))))) (def armstrong? (fn* ([num] (if (= num (PLACEHOLDER-4 num)) true false))))))