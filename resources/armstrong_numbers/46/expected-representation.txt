((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-6 PLACEHOLDER-0] "`b` raised to the power of `n`" (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-6))))) (def PLACEHOLDER-4 (fn* ([num] (let* [PLACEHOLDER-2 (map (fn* [PLACEHOLDER-7] (Character/digit PLACEHOLDER-7 10)) (map char (str num))) PLACEHOLDER-5 (count PLACEHOLDER-2)] (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-1 PLACEHOLDER-3 PLACEHOLDER-5)) PLACEHOLDER-2)))))) (def armstrong? (fn* ([num] (if (= num (PLACEHOLDER-4 num)) true false))))))