((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (clojure.core/import 'java.lang.Math)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-12
   (fn*
    ([PLACEHOLDER-5 PLACEHOLDER-10]
     (bigint (.pow (biginteger PLACEHOLDER-5) PLACEHOLDER-10)))))
  (def PLACEHOLDER-13 (fn* ([PLACEHOLDER-5] (bigint PLACEHOLDER-5))))
  (def
   PLACEHOLDER-14
   (fn*
    ([PLACEHOLDER-5 PLACEHOLDER-8]
     (let*
      [PLACEHOLDER-4
       (PLACEHOLDER-12 10 PLACEHOLDER-8)
       PLACEHOLDER-2
       (/ PLACEHOLDER-5 PLACEHOLDER-4)
       PLACEHOLDER-7
       (PLACEHOLDER-13 PLACEHOLDER-2)
       PLACEHOLDER-11
       (mod PLACEHOLDER-7 10)]
      (bigint PLACEHOLDER-11)))))
  (def
   PLACEHOLDER-15
   (fn* ([PLACEHOLDER-5] (+ 1 (bigint (Math/log10 PLACEHOLDER-5))))))
  (def
   PLACEHOLDER-16
   (fn*
    ([PLACEHOLDER-3 PLACEHOLDER-5 PLACEHOLDER-8]
     (let*
      [PLACEHOLDER-2
       (PLACEHOLDER-14 PLACEHOLDER-5 PLACEHOLDER-8)
       PLACEHOLDER-1
       (PLACEHOLDER-15 PLACEHOLDER-5)
       PLACEHOLDER-9
       (PLACEHOLDER-12 PLACEHOLDER-2 PLACEHOLDER-1)
       PLACEHOLDER-11
       (+ PLACEHOLDER-3 PLACEHOLDER-9)]
      PLACEHOLDER-11))))
  (def
   PLACEHOLDER-17
   (fn*
    ([PLACEHOLDER-5]
     (let*
      [PLACEHOLDER-6 (PLACEHOLDER-15 PLACEHOLDER-5)]
      (loop*
       [PLACEHOLDER-0
        (- (PLACEHOLDER-15 PLACEHOLDER-5) 1)
        PLACEHOLDER-3
        0]
       (if
        (< PLACEHOLDER-0 0)
        PLACEHOLDER-3
        (recur
         (- PLACEHOLDER-0 1)
         (PLACEHOLDER-16
          PLACEHOLDER-3
          PLACEHOLDER-5
          PLACEHOLDER-0))))))))
  (def
   PLACEHOLDER-18
   (fn*
    ([PLACEHOLDER-5]
     (let*
      [or__auto__ (= 0 PLACEHOLDER-5)]
      (if
       or__auto__
       or__auto__
       (= PLACEHOLDER-5 (PLACEHOLDER-17 PLACEHOLDER-5)))))))))
