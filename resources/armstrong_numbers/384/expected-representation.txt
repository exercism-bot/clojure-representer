((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-7
   (fn*
    ([PLACEHOLDER-6 PLACEHOLDER-2]
     (if
      (== PLACEHOLDER-2 0)
      PLACEHOLDER-6
      (PLACEHOLDER-7
       (conj PLACEHOLDER-6 (mod PLACEHOLDER-2 10))
       (bigint (/ PLACEHOLDER-2 10)))))))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-4]
     (reduce * (repeat PLACEHOLDER-4 PLACEHOLDER-0)))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-5]
     (if
      (= (count PLACEHOLDER-3) 0)
      PLACEHOLDER-1
      (PLACEHOLDER-9
       (rest PLACEHOLDER-3)
       (+
        PLACEHOLDER-1
        (PLACEHOLDER-8 (first PLACEHOLDER-3) PLACEHOLDER-5))
       PLACEHOLDER-5)))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-2]
     (def PLACEHOLDER-11 (bigint PLACEHOLDER-2))
     (def PLACEHOLDER-3 (PLACEHOLDER-7 '() PLACEHOLDER-11))
     (def PLACEHOLDER-12 (count PLACEHOLDER-3))
     (def
      PLACEHOLDER-13
      (PLACEHOLDER-9 PLACEHOLDER-3 0 PLACEHOLDER-12))
     (== PLACEHOLDER-13 PLACEHOLDER-11))))))
