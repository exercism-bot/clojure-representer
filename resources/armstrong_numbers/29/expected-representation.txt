((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (map bigint (map read-string (map str (seq (str num))))) count (count PLACEHOLDER-4) PLACEHOLDER-6 (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-3 PLACEHOLDER-5 count)) PLACEHOLDER-4) PLACEHOLDER-1 (apply + PLACEHOLDER-6)] (= num PLACEHOLDER-1)))))))