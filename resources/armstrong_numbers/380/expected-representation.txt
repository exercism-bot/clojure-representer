((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (loop* [PLACEHOLDER-0 (quote ()) PLACEHOLDER-0 num] (if (< PLACEHOLDER-0 10) (conj PLACEHOLDER-0 PLACEHOLDER-0) (recur (conj PLACEHOLDER-0 (rem PLACEHOLDER-0 10)) (bigint (/ PLACEHOLDER-0 10)))))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-5] (bigint (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-0 num) PLACEHOLDER-6 (count PLACEHOLDER-6)] (= num (reduce + (mapv (fn* [PLACEHOLDER-6] (PLACEHOLDER-4 PLACEHOLDER-6 PLACEHOLDER-6)) PLACEHOLDER-6)))))))))