((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([num] (loop* [PLACEHOLDER-5 (quote ()) PLACEHOLDER-6 num] (if (< PLACEHOLDER-6 10) (conj PLACEHOLDER-5 PLACEHOLDER-6) (recur (conj PLACEHOLDER-5 (rem PLACEHOLDER-6 10)) (bigint (/ PLACEHOLDER-6 10)))))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3 PLACEHOLDER-1] (bigint (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-3)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-8 num) PLACEHOLDER-4 (count PLACEHOLDER-0)] (= num (reduce + (mapv (fn* [PLACEHOLDER-7] (PLACEHOLDER-2 PLACEHOLDER-7 PLACEHOLDER-4)) PLACEHOLDER-0)))))))))