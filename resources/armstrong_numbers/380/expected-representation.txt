((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([num] (loop* [PLACEHOLDER-6 (quote ()) PLACEHOLDER-7 num] (if (< PLACEHOLDER-7 10) (conj PLACEHOLDER-6 PLACEHOLDER-7) (recur (conj PLACEHOLDER-6 (rem PLACEHOLDER-7 10)) (bigint (/ PLACEHOLDER-7 10)))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-2] (bigint (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-0 (PLACEHOLDER-8 num) PLACEHOLDER-5 (count PLACEHOLDER-0)] (= num (reduce + (mapv (fn* [PLACEHOLDER-1] (PLACEHOLDER-3 PLACEHOLDER-1 PLACEHOLDER-5)) PLACEHOLDER-0)))))))))