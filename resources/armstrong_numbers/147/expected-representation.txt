((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (map read-string (map str (str num)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (apply * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-3 num) PLACEHOLDER-6 (count PLACEHOLDER-5)] (= num (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-2 PLACEHOLDER-4 PLACEHOLDER-6)) PLACEHOLDER-5)))))))))