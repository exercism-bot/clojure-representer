((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([PLACEHOLDER-0] (def PLACEHOLDER-0 (into [] (map read-string (map str (reverse (str PLACEHOLDER-0)))))) (loop* [PLACEHOLDER-0 (dec (count PLACEHOLDER-0)) PLACEHOLDER-1 0] (if (not (neg? PLACEHOLDER-0)) (recur (dec PLACEHOLDER-0) (+ PLACEHOLDER-1 (reduce * (repeat (count PLACEHOLDER-0) (get PLACEHOLDER-0 PLACEHOLDER-0))))) (if (= PLACEHOLDER-1 PLACEHOLDER-0) true false))))))))