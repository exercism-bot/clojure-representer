((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([PLACEHOLDER-3] (def PLACEHOLDER-1 (into [] (map read-string (map str (reverse (str PLACEHOLDER-3)))))) (loop* [PLACEHOLDER-0 (dec (count PLACEHOLDER-1)) PLACEHOLDER-2 0] (if (not (neg? PLACEHOLDER-0)) (recur (dec PLACEHOLDER-0) (+ PLACEHOLDER-2 (reduce * (repeat (count PLACEHOLDER-1) (get PLACEHOLDER-1 PLACEHOLDER-0))))) (if (= PLACEHOLDER-2 PLACEHOLDER-3) true false))))))))