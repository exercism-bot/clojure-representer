((do
  (do
   (clojure.core/in-ns 'armstrong-numbers)
   (if
    (clojure.core/= 'armstrong-numbers 'clojure.core)
    nil
    (do (clojure.core/-add-loaded-lib 'armstrong-numbers) nil)))
  (def
   PLACEHOLDER-8
   (fn*
    ([PLACEHOLDER-0 PLACEHOLDER-5]
     (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0)))))
  (def
   PLACEHOLDER-9
   (fn*
    ([PLACEHOLDER-3]
     (loop*
      [PLACEHOLDER-4 PLACEHOLDER-3 PLACEHOLDER-2 0]
      (if
       (zero? PLACEHOLDER-4)
       PLACEHOLDER-2
       (recur (quot PLACEHOLDER-4 10) (inc PLACEHOLDER-2)))))))
  (def
   PLACEHOLDER-10
   (fn*
    ([PLACEHOLDER-3]
     (loop*
      [PLACEHOLDER-4
       PLACEHOLDER-3
       PLACEHOLDER-6
       (PLACEHOLDER-9 PLACEHOLDER-3)
       PLACEHOLDER-2
       0]
      (if
       (= PLACEHOLDER-4 0)
       PLACEHOLDER-2
       (let*
        [PLACEHOLDER-1
         (quot PLACEHOLDER-4 10)
         PLACEHOLDER-7
         (long (PLACEHOLDER-8 (mod PLACEHOLDER-4 10) PLACEHOLDER-6))]
        (recur
         PLACEHOLDER-1
         PLACEHOLDER-6
         (+ PLACEHOLDER-7 PLACEHOLDER-2))))))))
  (def
   PLACEHOLDER-11
   (fn*
    ([PLACEHOLDER-3]
     (== PLACEHOLDER-3 (PLACEHOLDER-10 PLACEHOLDER-3)))))))
