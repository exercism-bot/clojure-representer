((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-0 PLACEHOLDER-0] (println PLACEHOLDER-0 PLACEHOLDER-0) (+ PLACEHOLDER-0 (PLACEHOLDER-2 (bigdec PLACEHOLDER-0) PLACEHOLDER-0))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-3] (map (comp read-string str) PLACEHOLDER-3)))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce (partial PLACEHOLDER-0 PLACEHOLDER-0) 0M (PLACEHOLDER-3 PLACEHOLDER-3))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (str num) PLACEHOLDER-7 (count PLACEHOLDER-7)] (= (bigdec num) (PLACEHOLDER-4 PLACEHOLDER-7 PLACEHOLDER-7))))))))