((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-7 PLACEHOLDER-6 PLACEHOLDER-1] (println PLACEHOLDER-6 PLACEHOLDER-1) (+ PLACEHOLDER-6 (PLACEHOLDER-9 (bigdec PLACEHOLDER-1) PLACEHOLDER-7))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-0] (map (comp read-string str) PLACEHOLDER-0)))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-7 PLACEHOLDER-0] (reduce (partial PLACEHOLDER-4 PLACEHOLDER-7) 0M (PLACEHOLDER-8 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (str num) PLACEHOLDER-5 (count PLACEHOLDER-3)] (= (bigdec num) (PLACEHOLDER-2 PLACEHOLDER-5 PLACEHOLDER-3))))))))