((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (comp read-string str) (str PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-0] (count (PLACEHOLDER-0 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-2))))) (def armstrong? (fn* ([num] (= (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-1 PLACEHOLDER-3 (PLACEHOLDER-1 num))) (PLACEHOLDER-0 num))) num))))))