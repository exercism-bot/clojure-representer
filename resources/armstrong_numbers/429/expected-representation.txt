((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1 (inc (int (PLACEHOLDER-3 (PLACEHOLDER-1 PLACEHOLDER-4)))))))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-4 PLACEHOLDER-2 PLACEHOLDER-7] (- PLACEHOLDER-4 (* PLACEHOLDER-2 (PLACEHOLDER-13 (biginteger 10) (dec (biginteger PLACEHOLDER-7)))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-4 PLACEHOLDER-7] (int (PLACEHOLDER-3 (/ PLACEHOLDER-4 (PLACEHOLDER-10 10 (dec PLACEHOLDER-7)))))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-4] (PLACEHOLDER-8 PLACEHOLDER-4 (PLACEHOLDER-7 PLACEHOLDER-4) [])) ([PLACEHOLDER-4 PLACEHOLDER-7 PLACEHOLDER-9] (if (zero? PLACEHOLDER-7) PLACEHOLDER-9 (let* [PLACEHOLDER-0 (PLACEHOLDER-5 PLACEHOLDER-4 PLACEHOLDER-7)] (recur (PLACEHOLDER-6 PLACEHOLDER-4 PLACEHOLDER-0 PLACEHOLDER-7) (dec PLACEHOLDER-7) (conj PLACEHOLDER-9 (bigint PLACEHOLDER-0)))))))) (def PLACEHOLDER-12 (fn* ([PLACEHOLDER-4] (reduce + (map (fn* [PLACEHOLDER-11] (PLACEHOLDER-13 (biginteger PLACEHOLDER-11) (biginteger (PLACEHOLDER-7 PLACEHOLDER-4)))) (PLACEHOLDER-8 PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (== (PLACEHOLDER-12 num) num))))))