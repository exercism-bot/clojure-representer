((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-1] (count (str PLACEHOLDER-1))))) (def armstrong? (fn* ([PLACEHOLDER-1] (= PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-0 (Character/digit PLACEHOLDER-3 10) (PLACEHOLDER-2 PLACEHOLDER-1))) (vec (str PLACEHOLDER-1))))))))))