((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (reduce * (repeat PLACEHOLDER-2 PLACEHOLDER-0))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2] (count (str PLACEHOLDER-2))))) (def armstrong? (fn* ([PLACEHOLDER-2] (= PLACEHOLDER-2 (reduce + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-3 (Character/digit PLACEHOLDER-4 10) (PLACEHOLDER-1 PLACEHOLDER-2))) (vec (str PLACEHOLDER-2))))))))))