((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([num] (reverse (map (fn* [PLACEHOLDER-2] (mod PLACEHOLDER-2 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-6] (quot PLACEHOLDER-6 10)) num))))))) (def PLACEHOLDER-0 (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-3 num) PLACEHOLDER-4 (count PLACEHOLDER-5)] (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-7 (biginteger PLACEHOLDER-1) PLACEHOLDER-4)) PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-0 num)))))))