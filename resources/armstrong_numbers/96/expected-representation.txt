((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (reverse (map (fn* [PLACEHOLDER-4] (mod PLACEHOLDER-4 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-0] (quot PLACEHOLDER-0 10)) num))))))) (def PLACEHOLDER-1 (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-2 num) PLACEHOLDER-3 (count PLACEHOLDER-5)] (reduce + (map (fn* [PLACEHOLDER-6] (PLACEHOLDER-7 (biginteger PLACEHOLDER-6) PLACEHOLDER-3)) PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))