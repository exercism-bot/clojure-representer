((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (reverse (map (fn* [PLACEHOLDER-3] (mod PLACEHOLDER-3 10)) (take-while pos? (iterate (fn* [PLACEHOLDER-5] (quot PLACEHOLDER-5 10)) num))))))) (def PLACEHOLDER-0 (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 num) PLACEHOLDER-4 (count PLACEHOLDER-6)] (reduce + (map (fn* [PLACEHOLDER-1] (PLACEHOLDER-7 (biginteger PLACEHOLDER-1) PLACEHOLDER-4)) PLACEHOLDER-6)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-0 num)))))))