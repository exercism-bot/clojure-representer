((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-4] (if (zero? PLACEHOLDER-4) 1 (+ (PLACEHOLDER-3 (PLACEHOLDER-0 PLACEHOLDER-4)) 1))))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-4] (map (comp read-string str) (str PLACEHOLDER-4))))) (def PLACEHOLDER-10 (fn* ([PLACEHOLDER-6 PLACEHOLDER-7] (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-11 (biginteger PLACEHOLDER-2) PLACEHOLDER-7)) PLACEHOLDER-6)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-9 num)] (let* [PLACEHOLDER-5 num PLACEHOLDER-5 (PLACEHOLDER-8 PLACEHOLDER-5) PLACEHOLDER-5 (PLACEHOLDER-10 PLACEHOLDER-5 PLACEHOLDER-1) PLACEHOLDER-5 (reduce + PLACEHOLDER-5) PLACEHOLDER-5 (biginteger PLACEHOLDER-5)] (= PLACEHOLDER-5 num))))))))