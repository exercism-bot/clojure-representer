((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-1] (if (zero? PLACEHOLDER-1) 1 (+ (PLACEHOLDER-2 (PLACEHOLDER-3 PLACEHOLDER-1)) 1))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-1] (map (comp read-string str) (str PLACEHOLDER-1))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-4 PLACEHOLDER-4] (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-4 (biginteger PLACEHOLDER-4) PLACEHOLDER-4)) PLACEHOLDER-4)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-0 num)] (let* [PLACEHOLDER-5 num PLACEHOLDER-5 (PLACEHOLDER-3 PLACEHOLDER-5) PLACEHOLDER-5 (PLACEHOLDER-4 PLACEHOLDER-5 PLACEHOLDER-4) PLACEHOLDER-5 (reduce + PLACEHOLDER-5) PLACEHOLDER-5 (biginteger PLACEHOLDER-5)] (= PLACEHOLDER-5 num))))))))