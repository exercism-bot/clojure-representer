((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([PLACEHOLDER-3] (if (zero? PLACEHOLDER-3) 1 (+ (PLACEHOLDER-2 (PLACEHOLDER-0 PLACEHOLDER-3)) 1))))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-3] (map (comp read-string str) (str PLACEHOLDER-3))))) (def PLACEHOLDER-9 (fn* ([PLACEHOLDER-5 PLACEHOLDER-6] (map (fn* [PLACEHOLDER-10] (PLACEHOLDER-11 (biginteger PLACEHOLDER-10) PLACEHOLDER-6)) PLACEHOLDER-5)))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (PLACEHOLDER-8 num)] (let* [PLACEHOLDER-4 num PLACEHOLDER-4 (PLACEHOLDER-7 PLACEHOLDER-4) PLACEHOLDER-4 (PLACEHOLDER-9 PLACEHOLDER-4 PLACEHOLDER-1) PLACEHOLDER-4 (reduce + PLACEHOLDER-4) PLACEHOLDER-4 (biginteger PLACEHOLDER-4)] (= PLACEHOLDER-4 num))))))))