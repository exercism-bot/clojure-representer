((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-7 (fn* ([PLACEHOLDER-5] (- (int PLACEHOLDER-5) (int \0))))) (def PLACEHOLDER-1 (fn* ([num] (map PLACEHOLDER-7 (seq (str num)))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-6] (fn* ([PLACEHOLDER-0] (PLACEHOLDER-2 PLACEHOLDER-0 PLACEHOLDER-6)))) ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (PLACEHOLDER-1 num) PLACEHOLDER-4 (count PLACEHOLDER-3)] (= num (reduce + (map (PLACEHOLDER-2 PLACEHOLDER-4) PLACEHOLDER-3)))))))))