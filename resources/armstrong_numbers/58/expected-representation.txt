((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num] (map (fn* [PLACEHOLDER-7] (- (int PLACEHOLDER-7) (int \0))) (str num))))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-0 PLACEHOLDER-5] (reduce * (repeat PLACEHOLDER-5 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-2 num) PLACEHOLDER-5 (count PLACEHOLDER-6) PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-3] (PLACEHOLDER-4 PLACEHOLDER-3 PLACEHOLDER-5)) PLACEHOLDER-6))] (= num PLACEHOLDER-1)))))))