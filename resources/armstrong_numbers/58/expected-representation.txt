((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([num] (map (fn* [PLACEHOLDER-1] (- (int PLACEHOLDER-1) (int \0))) (str num))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-7 (PLACEHOLDER-4 num) PLACEHOLDER-6 (count PLACEHOLDER-7) PLACEHOLDER-3 (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-5 PLACEHOLDER-2 PLACEHOLDER-6)) PLACEHOLDER-7))] (= num PLACEHOLDER-3)))))))