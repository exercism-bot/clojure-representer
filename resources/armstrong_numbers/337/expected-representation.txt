((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([num] (loop* [PLACEHOLDER-0 num PLACEHOLDER-0 []] (let* [PLACEHOLDER-0 (quot PLACEHOLDER-0 10) PLACEHOLDER-1 (mod PLACEHOLDER-0 10)] (if (= PLACEHOLDER-0 0) (conj PLACEHOLDER-0 PLACEHOLDER-1) (recur PLACEHOLDER-0 (conj PLACEHOLDER-0 PLACEHOLDER-1)))))))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-4 PLACEHOLDER-0] (reduce * (repeat PLACEHOLDER-0 PLACEHOLDER-4))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-0 num) PLACEHOLDER-6 (count PLACEHOLDER-5)] (= num (reduce + (map (fn* ([PLACEHOLDER-4] (PLACEHOLDER-3 PLACEHOLDER-4 PLACEHOLDER-6))) PLACEHOLDER-5)))))))))