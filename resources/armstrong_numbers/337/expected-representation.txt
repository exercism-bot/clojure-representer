((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-8 (fn* ([num] (loop* [PLACEHOLDER-3 num PLACEHOLDER-7 []] (let* [PLACEHOLDER-2 (quot PLACEHOLDER-3 10) PLACEHOLDER-4 (mod PLACEHOLDER-3 10)] (if (= PLACEHOLDER-2 0) (conj PLACEHOLDER-7 PLACEHOLDER-4) (recur PLACEHOLDER-2 (conj PLACEHOLDER-7 PLACEHOLDER-4)))))))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-3] (reduce * (repeat PLACEHOLDER-3 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-6 (PLACEHOLDER-8 num) PLACEHOLDER-1 (count PLACEHOLDER-6)] (= num (reduce + (map (fn* ([PLACEHOLDER-0] (PLACEHOLDER-5 PLACEHOLDER-0 PLACEHOLDER-1))) PLACEHOLDER-6)))))))))