((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-6 (fn* ([PLACEHOLDER-0 PLACEHOLDER-7] (reduce * (repeat PLACEHOLDER-7 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-5 (PLACEHOLDER-4 (str num) (re-pattern "")) PLACEHOLDER-3 (count PLACEHOLDER-5) PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-2] (PLACEHOLDER-6 (Integer/parseInt PLACEHOLDER-2) PLACEHOLDER-3)) PLACEHOLDER-5))] (= num PLACEHOLDER-1)))))))