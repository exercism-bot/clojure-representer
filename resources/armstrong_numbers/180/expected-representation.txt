((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-5 (fn* ([PLACEHOLDER-0 PLACEHOLDER-6] (reduce * (repeat PLACEHOLDER-6 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (PLACEHOLDER-3 (str num) (re-pattern "")) PLACEHOLDER-2 (count PLACEHOLDER-4) PLACEHOLDER-1 (reduce + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-5 (Integer/parseInt PLACEHOLDER-7) PLACEHOLDER-2)) PLACEHOLDER-4))] (= num PLACEHOLDER-1)))))))