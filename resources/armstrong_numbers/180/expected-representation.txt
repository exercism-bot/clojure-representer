((do (do (clojure.core/in-ns (quote armstrong-numbers)) (clojure.core/require (quote [clojure.string :as str])) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (reduce * (repeat PLACEHOLDER-1 PLACEHOLDER-0))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-2 (PLACEHOLDER-3 (str num) (re-pattern "")) PLACEHOLDER-4 (count PLACEHOLDER-2) PLACEHOLDER-4 (reduce + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 (Integer/parseInt PLACEHOLDER-5) PLACEHOLDER-4)) PLACEHOLDER-2))] (= num PLACEHOLDER-4)))))))