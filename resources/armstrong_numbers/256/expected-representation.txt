((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-2] (map (comp (fn* [PLACEHOLDER-5] (- PLACEHOLDER-5 48)) int) (str PLACEHOLDER-2))))) (def PLACEHOLDER-1 (fn* ([PLACEHOLDER-2] (let* [PLACEHOLDER-4 (PLACEHOLDER-3 PLACEHOLDER-2)] (apply + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-6 (biginteger PLACEHOLDER-0) (count PLACEHOLDER-4))) PLACEHOLDER-4)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-1 num)))))))