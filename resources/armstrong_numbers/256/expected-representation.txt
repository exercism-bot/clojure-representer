((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0] (map (comp (fn* [PLACEHOLDER-1] (- PLACEHOLDER-1 48)) int) (str PLACEHOLDER-0))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-3 (PLACEHOLDER-0 PLACEHOLDER-0)] (apply + (map (fn* [PLACEHOLDER-4] (PLACEHOLDER-4 (biginteger PLACEHOLDER-4) (count PLACEHOLDER-3))) PLACEHOLDER-3)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 num)))))))