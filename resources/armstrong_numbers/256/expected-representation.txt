((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-4 (fn* ([PLACEHOLDER-3] (map (comp (fn* [PLACEHOLDER-1] (- PLACEHOLDER-1 48)) int) (str PLACEHOLDER-3))))) (def PLACEHOLDER-2 (fn* ([PLACEHOLDER-3] (let* [PLACEHOLDER-5 (PLACEHOLDER-4 PLACEHOLDER-3)] (apply + (map (fn* [PLACEHOLDER-0] (PLACEHOLDER-6 (biginteger PLACEHOLDER-0) (count PLACEHOLDER-5))) PLACEHOLDER-5)))))) (def armstrong? (fn* ([num] (= num (PLACEHOLDER-2 num)))))))