((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-0 (fn* ([PLACEHOLDER-0 PLACEHOLDER-1] (apply * (repeat PLACEHOLDER-1 (bigint PLACEHOLDER-0)))))) (def PLACEHOLDER-2 (fn* ([str] (map (fn* [PLACEHOLDER-3] (Character/digit PLACEHOLDER-3 10)) (to-array str))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-4 (count (str num)) PLACEHOLDER-4 (PLACEHOLDER-2 (str num))] (= num (apply + (map (fn* [PLACEHOLDER-5] (PLACEHOLDER-0 PLACEHOLDER-5 PLACEHOLDER-4)) PLACEHOLDER-4)))))))))