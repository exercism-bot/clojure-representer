((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-3 (fn* ([PLACEHOLDER-0 PLACEHOLDER-2] (apply * (repeat PLACEHOLDER-2 (bigint PLACEHOLDER-0)))))) (def PLACEHOLDER-5 (fn* ([str] (map (fn* [PLACEHOLDER-6] (Character/digit PLACEHOLDER-6 10)) (to-array str))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-1 (count (str num)) PLACEHOLDER-4 (PLACEHOLDER-5 (str num))] (= num (apply + (map (fn* [PLACEHOLDER-7] (PLACEHOLDER-3 PLACEHOLDER-7 PLACEHOLDER-1)) PLACEHOLDER-4)))))))))