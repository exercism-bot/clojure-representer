((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def PLACEHOLDER-2 (fn* ([num PLACEHOLDER-0] (if (= PLACEHOLDER-0 0) 1 (* num (PLACEHOLDER-2 num (- PLACEHOLDER-0 1))))))) (def PLACEHOLDER-1 (fn* ([num PLACEHOLDER-3] (if (= num (mod num 10)) (PLACEHOLDER-2 num PLACEHOLDER-3) (+ (PLACEHOLDER-2 (mod num 10) PLACEHOLDER-3) (PLACEHOLDER-1 (long (/ num 10)) PLACEHOLDER-3)))))) (def armstrong? (fn* ([num] (let* [PLACEHOLDER-3 (count (str num))] (= (PLACEHOLDER-1 num PLACEHOLDER-3) num)))))))