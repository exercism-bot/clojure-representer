((do (do (clojure.core/in-ns (quote armstrong-numbers)) (if (clojure.core/= (quote armstrong-numbers) (quote clojure.core)) nil (do (clojure.core/-add-loaded-lib (quote armstrong-numbers)) nil))) (def armstrong? (fn* ([PLACEHOLDER-0] (let* [PLACEHOLDER-0 (count (str PLACEHOLDER-0)) PLACEHOLDER-0 (fn* ([PLACEHOLDER-1] (vec (map (fn* [PLACEHOLDER-1] (- (int PLACEHOLDER-1) 48)) (str PLACEHOLDER-1)))))] (= PLACEHOLDER-0 (reduce + (map (fn* [PLACEHOLDER-3] (apply * (repeat PLACEHOLDER-0 PLACEHOLDER-3))) (PLACEHOLDER-0 PLACEHOLDER-0))))))))))